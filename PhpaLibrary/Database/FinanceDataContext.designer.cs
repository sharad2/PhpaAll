#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eclipse.PhpaLibrary.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Phpa2-20012012")]
	public partial class FinanceDataContext : DataContextBase
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHeadOfAccount(HeadOfAccount instance);
    partial void UpdateHeadOfAccount(HeadOfAccount instance);
    partial void DeleteHeadOfAccount(HeadOfAccount instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    partial void InsertVoucherDetail(VoucherDetail instance);
    partial void UpdateVoucherDetail(VoucherDetail instance);
    partial void DeleteVoucherDetail(VoucherDetail instance);
    partial void InsertDivision(Division instance);
    partial void UpdateDivision(Division instance);
    partial void DeleteDivision(Division instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertBudget(Budget instance);
    partial void UpdateBudget(Budget instance);
    partial void DeleteBudget(Budget instance);
    partial void InsertContractor(Contractor instance);
    partial void UpdateContractor(Contractor instance);
    partial void DeleteContractor(Contractor instance);
    partial void InsertBankGuarantee(BankGuarantee instance);
    partial void UpdateBankGuarantee(BankGuarantee instance);
    partial void DeleteBankGuarantee(BankGuarantee instance);
    partial void InsertAccountType(AccountType instance);
    partial void UpdateAccountType(AccountType instance);
    partial void DeleteAccountType(AccountType instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertStation(Station instance);
    partial void UpdateStation(Station instance);
    partial void DeleteStation(Station instance);
    #endregion
		
		
		public FinanceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FinanceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FinanceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FinanceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<HeadOfAccount> HeadOfAccounts
		{
			get
			{
				return this.GetTable<HeadOfAccount>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
		
		public System.Data.Linq.Table<VoucherDetail> VoucherDetails
		{
			get
			{
				return this.GetTable<VoucherDetail>();
			}
		}
		
		public System.Data.Linq.Table<Division> Divisions
		{
			get
			{
				return this.GetTable<Division>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<Budget> Budgets
		{
			get
			{
				return this.GetTable<Budget>();
			}
		}
		
		public System.Data.Linq.Table<Contractor> Contractors
		{
			get
			{
				return this.GetTable<Contractor>();
			}
		}
		
		public System.Data.Linq.Table<BankGuarantee> BankGuarantees
		{
			get
			{
				return this.GetTable<BankGuarantee>();
			}
		}
		
		public System.Data.Linq.Table<AccountType> AccountTypes
		{
			get
			{
				return this.GetTable<AccountType>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Station> Stations
		{
			get
			{
				return this.GetTable<Station>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeadOfAccount")]
	public partial class HeadOfAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HeadOfAccountId;
		
		private System.Nullable<int> _ParentHeadOfAccountId;
		
		private short _NameWithinParent;
		
		private string _Description;
		
		private System.Nullable<decimal> _ProjectCost;
		
		private System.Nullable<decimal> _RevisedProjectCost;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private System.Data.Linq.Binary _Version;
		
		private string _DisplayName;
		
		private string _ModifiedWorkstation;
		
		private string _GroupDescription;
		
		private string _HeadOfAccountType;
		
		private System.Nullable<int> _StationId;
		
		private EntitySet<HeadOfAccount> _ChildHeads;
		
		private EntitySet<VoucherDetail> _VoucherDetails;
		
		private EntitySet<Job> _Jobs;
		
		private EntitySet<Budget> _Budgets;
		
		private EntityRef<HeadOfAccount> _ParentHead;
		
		private EntityRef<AccountType> _AccountType;
		
		private EntityRef<Station> _Station1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHeadOfAccountIdChanging(int value);
    partial void OnHeadOfAccountIdChanged();
    partial void OnParentHeadOfAccountIdChanging(System.Nullable<int> value);
    partial void OnParentHeadOfAccountIdChanged();
    partial void OnNameWithinParentChanging(short value);
    partial void OnNameWithinParentChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProjectCostChanging(System.Nullable<decimal> value);
    partial void OnProjectCostChanged();
    partial void OnRevisedProjectCostChanging(System.Nullable<decimal> value);
    partial void OnRevisedProjectCostChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnGroupDescriptionChanging(string value);
    partial void OnGroupDescriptionChanged();
    partial void OnHeadOfAccountTypeChanging(string value);
    partial void OnHeadOfAccountTypeChanged();
    partial void OnStationIdChanging(System.Nullable<int> value);
    partial void OnStationIdChanged();
    #endregion
		
		public HeadOfAccount()
		{
			this._ChildHeads = new EntitySet<HeadOfAccount>(new Action<HeadOfAccount>(this.attach_ChildHeads), new Action<HeadOfAccount>(this.detach_ChildHeads));
			this._VoucherDetails = new EntitySet<VoucherDetail>(new Action<VoucherDetail>(this.attach_VoucherDetails), new Action<VoucherDetail>(this.detach_VoucherDetails));
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._Budgets = new EntitySet<Budget>(new Action<Budget>(this.attach_Budgets), new Action<Budget>(this.detach_Budgets));
			this._ParentHead = default(EntityRef<HeadOfAccount>);
			this._AccountType = default(EntityRef<AccountType>);
			this._Station1 = default(EntityRef<Station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
			set
			{
				if ((this._HeadOfAccountId != value))
				{
					this.OnHeadOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._HeadOfAccountId = value;
					this.SendPropertyChanged("HeadOfAccountId");
					this.OnHeadOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentHeadOfAccountId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ParentHeadOfAccountId
		{
			get
			{
				return this._ParentHeadOfAccountId;
			}
			set
			{
				if ((this._ParentHeadOfAccountId != value))
				{
					if (this._ParentHead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentHeadOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ParentHeadOfAccountId = value;
					this.SendPropertyChanged("ParentHeadOfAccountId");
					this.OnParentHeadOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithinParent", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short NameWithinParent
		{
			get
			{
				return this._NameWithinParent;
			}
			set
			{
				if ((this._NameWithinParent != value))
				{
					this.OnNameWithinParentChanging(value);
					this.SendPropertyChanging();
					this._NameWithinParent = value;
					this.SendPropertyChanged("NameWithinParent");
					this.OnNameWithinParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCost", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ProjectCost
		{
			get
			{
				return this._ProjectCost;
			}
			set
			{
				if ((this._ProjectCost != value))
				{
					this.OnProjectCostChanging(value);
					this.SendPropertyChanging();
					this._ProjectCost = value;
					this.SendPropertyChanged("ProjectCost");
					this.OnProjectCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisedProjectCost", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RevisedProjectCost
		{
			get
			{
				return this._RevisedProjectCost;
			}
			set
			{
				if ((this._RevisedProjectCost != value))
				{
					this.OnRevisedProjectCostChanging(value);
					this.SendPropertyChanging();
					this._RevisedProjectCost = value;
					this.SendPropertyChanged("RevisedProjectCost");
					this.OnRevisedProjectCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="varchar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDescription", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string GroupDescription
		{
			get
			{
				return this._GroupDescription;
			}
			set
			{
				if ((this._GroupDescription != value))
				{
					this.OnGroupDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GroupDescription = value;
					this.SendPropertyChanged("GroupDescription");
					this.OnGroupDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountType", DbType="nvarchar(20)", UpdateCheck=UpdateCheck.Never)]
		public string HeadOfAccountType
		{
			get
			{
				return this._HeadOfAccountType;
			}
			set
			{
				if ((this._HeadOfAccountType != value))
				{
					if (this._AccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadOfAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._HeadOfAccountType = value;
					this.SendPropertyChanged("HeadOfAccountType");
					this.OnHeadOfAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId")]
		public System.Nullable<int> StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					if (this._Station1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_HeadOfAccount", Storage="_ChildHeads", ThisKey="HeadOfAccountId", OtherKey="ParentHeadOfAccountId")]
		public EntitySet<HeadOfAccount> ChildHeads
		{
			get
			{
				return this._ChildHeads;
			}
			set
			{
				this._ChildHeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_VoucherDetail", Storage="_VoucherDetails", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId")]
		public EntitySet<VoucherDetail> VoucherDetails
		{
			get
			{
				return this._VoucherDetails;
			}
			set
			{
				this._VoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_Job", Storage="_Jobs", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_Budget", Storage="_Budgets", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId")]
		public EntitySet<Budget> Budgets
		{
			get
			{
				return this._Budgets;
			}
			set
			{
				this._Budgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_HeadOfAccount", Storage="_ParentHead", ThisKey="ParentHeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public HeadOfAccount ParentHead
		{
			get
			{
				return this._ParentHead.Entity;
			}
			set
			{
				HeadOfAccount previousValue = this._ParentHead.Entity;
				if (((previousValue != value) 
							|| (this._ParentHead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentHead.Entity = null;
						previousValue.ChildHeads.Remove(this);
					}
					this._ParentHead.Entity = value;
					if ((value != null))
					{
						value.ChildHeads.Add(this);
						this._ParentHeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._ParentHeadOfAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentHead");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_HeadOfAccount", Storage="_AccountType", ThisKey="HeadOfAccountType", OtherKey="HeadOfAccountType", IsForeignKey=true)]
		public AccountType AccountType
		{
			get
			{
				return this._AccountType.Entity;
			}
			set
			{
				AccountType previousValue = this._AccountType.Entity;
				if (((previousValue != value) 
							|| (this._AccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountType.Entity = null;
						previousValue.HeadOfAccounts.Remove(this);
					}
					this._AccountType.Entity = value;
					if ((value != null))
					{
						value.HeadOfAccounts.Add(this);
						this._HeadOfAccountType = value.HeadOfAccountType;
					}
					else
					{
						this._HeadOfAccountType = default(string);
					}
					this.SendPropertyChanged("AccountType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_HeadOfAccount", Storage="_Station1", ThisKey="StationId", OtherKey="StationId", IsForeignKey=true)]
		public Station Station1
		{
			get
			{
				return this._Station1.Entity;
			}
			set
			{
				Station previousValue = this._Station1.Entity;
				if (((previousValue != value) 
							|| (this._Station1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Station1.Entity = null;
						previousValue.HeadOfAccounts.Remove(this);
					}
					this._Station1.Entity = value;
					if ((value != null))
					{
						value.HeadOfAccounts.Add(this);
						this._StationId = value.StationId;
					}
					else
					{
						this._StationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Station1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChildHeads(HeadOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.ParentHead = this;
		}
		
		private void detach_ChildHeads(HeadOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.ParentHead = null;
		}
		
		private void attach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = this;
		}
		
		private void detach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = null;
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = null;
		}
		
		private void attach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = this;
		}
		
		private void detach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoucherId;
		
		private char _VoucherType;
		
		private System.DateTime _VoucherDate;
		
		private string _VoucherCode;
		
		private System.Nullable<int> _DivisionId;
		
		private System.Nullable<int> _CheckNumber;
		
		private string _PayeeName;
		
		private string _Particulars;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private System.Data.Linq.Binary _Version;
		
		private string _ModifiedWorkstation;
		
		private System.Nullable<bool> _IsChequeReconcile;
		
		private System.Nullable<int> _StationId;
		
		private EntitySet<VoucherDetail> _VoucherDetails;
		
		private EntityRef<Division> _Division;
		
		private EntityRef<Station> _Station1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherIdChanging(int value);
    partial void OnVoucherIdChanged();
    partial void OnVoucherTypeCodeChanging(char value);
    partial void OnVoucherTypeCodeChanged();
    partial void OnVoucherDateChanging(System.DateTime value);
    partial void OnVoucherDateChanged();
    partial void OnVoucherCodeChanging(string value);
    partial void OnVoucherCodeChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    partial void OnCheckNumberChanging(System.Nullable<int> value);
    partial void OnCheckNumberChanged();
    partial void OnPayeeNameChanging(string value);
    partial void OnPayeeNameChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnIsChequeReconcileChanging(System.Nullable<bool> value);
    partial void OnIsChequeReconcileChanged();
    partial void OnStationIdChanging(System.Nullable<int> value);
    partial void OnStationIdChanged();
    #endregion
		
		public Voucher()
		{
			this._VoucherDetails = new EntitySet<VoucherDetail>(new Action<VoucherDetail>(this.attach_VoucherDetails), new Action<VoucherDetail>(this.detach_VoucherDetails));
			this._Division = default(EntityRef<Division>);
			this._Station1 = default(EntityRef<Station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int VoucherId
		{
			get
			{
				return this._VoucherId;
			}
			set
			{
				if ((this._VoucherId != value))
				{
					this.OnVoucherIdChanging(value);
					this.SendPropertyChanging();
					this._VoucherId = value;
					this.SendPropertyChanged("VoucherId");
					this.OnVoucherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="VoucherType", Storage="_VoucherType", DbType="NVarChar(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char VoucherTypeCode
		{
			get
			{
				return this._VoucherType;
			}
			set
			{
				if ((this._VoucherType != value))
				{
					this.OnVoucherTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._VoucherType = value;
					this.SendPropertyChanged("VoucherTypeCode");
					this.OnVoucherTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime VoucherDate
		{
			get
			{
				return this._VoucherDate;
			}
			set
			{
				if ((this._VoucherDate != value))
				{
					this.OnVoucherDateChanging(value);
					this.SendPropertyChanging();
					this._VoucherDate = value;
					this.SendPropertyChanged("VoucherDate");
					this.OnVoucherDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
			set
			{
				if ((this._VoucherCode != value))
				{
					this.OnVoucherCodeChanging(value);
					this.SendPropertyChanging();
					this._VoucherCode = value;
					this.SendPropertyChanged("VoucherCode");
					this.OnVoucherCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this.OnPayeeNameChanging(value);
					this.SendPropertyChanging();
					this._PayeeName = value;
					this.SendPropertyChanged("PayeeName");
					this.OnPayeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChequeReconcile", DbType="bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsChequeReconcile
		{
			get
			{
				return this._IsChequeReconcile;
			}
			set
			{
				if ((this._IsChequeReconcile != value))
				{
					this.OnIsChequeReconcileChanging(value);
					this.SendPropertyChanging();
					this._IsChequeReconcile = value;
					this.SendPropertyChanged("IsChequeReconcile");
					this.OnIsChequeReconcileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId")]
		public System.Nullable<int> StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					if (this._Station1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_VoucherDetail", Storage="_VoucherDetails", ThisKey="VoucherId", OtherKey="VoucherId")]
		public EntitySet<VoucherDetail> VoucherDetails
		{
			get
			{
				return this._VoucherDetails;
			}
			set
			{
				this._VoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Voucher", Storage="_Division", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Vouchers.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Vouchers.Add(this);
						this._DivisionId = value.DivisionId;
					}
					else
					{
						this._DivisionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Voucher", Storage="_Station1", ThisKey="StationId", OtherKey="StationId", IsForeignKey=true)]
		public Station Station1
		{
			get
			{
				return this._Station1.Entity;
			}
			set
			{
				Station previousValue = this._Station1.Entity;
				if (((previousValue != value) 
							|| (this._Station1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Station1.Entity = null;
						previousValue.Vouchers.Remove(this);
					}
					this._Station1.Entity = value;
					if ((value != null))
					{
						value.Vouchers.Add(this);
						this._StationId = value.StationId;
					}
					else
					{
						this._StationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Station1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VoucherDetail")]
	public partial class VoucherDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoucherDetailId;
		
		private int _VoucherId;
		
		private int _HeadOfAccountId;
		
		private System.Nullable<int> _JobId;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<decimal> _DebitAmount;
		
		private System.Nullable<decimal> _CreditAmount;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private System.Data.Linq.Binary _Version;
		
		private string _ModifiedWorkstation;
		
		private System.Nullable<int> _ContractorId;
		
		private EntityRef<Voucher> _Voucher;
		
		private EntityRef<HeadOfAccount> _HeadOfAccount;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Contractor> _Contractor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherDetailIdChanging(int value);
    partial void OnVoucherDetailIdChanged();
    partial void OnVoucherIdChanging(int value);
    partial void OnVoucherIdChanged();
    partial void OnHeadOfAccountIdChanging(int value);
    partial void OnHeadOfAccountIdChanged();
    partial void OnJobIdChanging(System.Nullable<int> value);
    partial void OnJobIdChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnDebitAmountChanging(System.Nullable<decimal> value);
    partial void OnDebitAmountChanged();
    partial void OnCreditAmountChanging(System.Nullable<decimal> value);
    partial void OnCreditAmountChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnContractorIdChanging(System.Nullable<int> value);
    partial void OnContractorIdChanged();
    #endregion
		
		public VoucherDetail()
		{
			this._Voucher = default(EntityRef<Voucher>);
			this._HeadOfAccount = default(EntityRef<HeadOfAccount>);
			this._Job = default(EntityRef<Job>);
			this._Employee = default(EntityRef<Employee>);
			this._Contractor = default(EntityRef<Contractor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int VoucherDetailId
		{
			get
			{
				return this._VoucherDetailId;
			}
			set
			{
				if ((this._VoucherDetailId != value))
				{
					this.OnVoucherDetailIdChanging(value);
					this.SendPropertyChanging();
					this._VoucherDetailId = value;
					this.SendPropertyChanged("VoucherDetailId");
					this.OnVoucherDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int VoucherId
		{
			get
			{
				return this._VoucherId;
			}
			set
			{
				if ((this._VoucherId != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherIdChanging(value);
					this.SendPropertyChanging();
					this._VoucherId = value;
					this.SendPropertyChanged("VoucherId");
					this.OnVoucherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
			set
			{
				if ((this._HeadOfAccountId != value))
				{
					if (this._HeadOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._HeadOfAccountId = value;
					this.SendPropertyChanged("HeadOfAccountId");
					this.OnHeadOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					if (this._Contractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_VoucherDetail", Storage="_Voucher", ThisKey="VoucherId", OtherKey="VoucherId", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.VoucherDetails.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.VoucherDetails.Add(this);
						this._VoucherId = value.VoucherId;
					}
					else
					{
						this._VoucherId = default(int);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_VoucherDetail", Storage="_HeadOfAccount", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public HeadOfAccount HeadOfAccount
		{
			get
			{
				return this._HeadOfAccount.Entity;
			}
			set
			{
				HeadOfAccount previousValue = this._HeadOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._HeadOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HeadOfAccount.Entity = null;
						previousValue.VoucherDetails.Remove(this);
					}
					this._HeadOfAccount.Entity = value;
					if ((value != null))
					{
						value.VoucherDetails.Add(this);
						this._HeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._HeadOfAccountId = default(int);
					}
					this.SendPropertyChanged("HeadOfAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_VoucherDetail", Storage="_Job", ThisKey="JobId", OtherKey="JobId", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.VoucherDetails.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.VoucherDetails.Add(this);
						this._JobId = value.JobId;
					}
					else
					{
						this._JobId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_VoucherDetail", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.VoucherDetails.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.VoucherDetails.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_VoucherDetail", Storage="_Contractor", ThisKey="ContractorId", OtherKey="ContractorId", IsForeignKey=true)]
		public Contractor Contractor
		{
			get
			{
				return this._Contractor.Entity;
			}
			set
			{
				Contractor previousValue = this._Contractor.Entity;
				if (((previousValue != value) 
							|| (this._Contractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contractor.Entity = null;
						previousValue.VoucherDetails.Remove(this);
					}
					this._Contractor.Entity = value;
					if ((value != null))
					{
						value.VoucherDetails.Add(this);
						this._ContractorId = value.ContractorId;
					}
					else
					{
						this._ContractorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contractor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Division")]
	public partial class Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DivisionId;
		
		private string _DivisionGroup;
		
		private string _DivisionName;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedWorkstation;
		
		private string _ModifiedBy;
		
		private System.Data.Linq.Binary _Version;
		
		private string _DivisionShortName;
		
		private EntitySet<Voucher> _Vouchers;
		
		private EntitySet<Job> _Jobs;
		
		private EntitySet<BankGuarantee> _BankGuarantees;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnDivisionGroupChanging(string value);
    partial void OnDivisionGroupChanged();
    partial void OnDivisionNameChanging(string value);
    partial void OnDivisionNameChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnDivisionCodeChanging(string value);
    partial void OnDivisionCodeChanged();
    #endregion
		
		public Division()
		{
			this._Vouchers = new EntitySet<Voucher>(new Action<Voucher>(this.attach_Vouchers), new Action<Voucher>(this.detach_Vouchers));
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._BankGuarantees = new EntitySet<BankGuarantee>(new Action<BankGuarantee>(this.attach_BankGuarantees), new Action<BankGuarantee>(this.detach_BankGuarantees));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionGroup", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionGroup
		{
			get
			{
				return this._DivisionGroup;
			}
			set
			{
				if ((this._DivisionGroup != value))
				{
					this.OnDivisionGroupChanging(value);
					this.SendPropertyChanging();
					this._DivisionGroup = value;
					this.SendPropertyChanged("DivisionGroup");
					this.OnDivisionGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionName
		{
			get
			{
				return this._DivisionName;
			}
			set
			{
				if ((this._DivisionName != value))
				{
					this.OnDivisionNameChanging(value);
					this.SendPropertyChanging();
					this._DivisionName = value;
					this.SendPropertyChanged("DivisionName");
					this.OnDivisionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionShortName", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionCode
		{
			get
			{
				return this._DivisionShortName;
			}
			set
			{
				if ((this._DivisionShortName != value))
				{
					this.OnDivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._DivisionShortName = value;
					this.SendPropertyChanged("DivisionCode");
					this.OnDivisionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Voucher", Storage="_Vouchers", ThisKey="DivisionId", OtherKey="DivisionId")]
		public EntitySet<Voucher> Vouchers
		{
			get
			{
				return this._Vouchers;
			}
			set
			{
				this._Vouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Job", Storage="_Jobs", ThisKey="DivisionId", OtherKey="DivisionId")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_BankGuarantee", Storage="_BankGuarantees", ThisKey="DivisionId", OtherKey="DivisionId")]
		public EntitySet<BankGuarantee> BankGuarantees
		{
			get
			{
				return this._BankGuarantees;
			}
			set
			{
				this._BankGuarantees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Employee", Storage="_Employees", ThisKey="DivisionId", OtherKey="DivisionId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vouchers(Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_Vouchers(Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
		
		private void attach_BankGuarantees(BankGuarantee entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_BankGuarantees(BankGuarantee entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobId;
		
		private System.Nullable<char> _TypeFlag;
		
		private string _SanctionNumber;
		
		private System.Nullable<System.DateTime> _SanctionDate;
		
		private System.Nullable<decimal> _SanctionedAmount;
		
		private string _WorkOrderNumber;
		
		private System.Nullable<System.DateTime> _WorkOrderDate;
		
		private System.Nullable<System.DateTime> _CommencementDate;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private System.Nullable<int> _HeadOfAccountId;
		
		private int _DivisionId;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _AwardDate;
		
		private System.Nullable<decimal> _ContractAmount;
		
		private System.Nullable<int> _ContractorId;
		
		private System.Nullable<decimal> _RevisedSanction;
		
		private System.Nullable<decimal> _RevisedContract;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedWorkstation;
		
		private string _ModifiedBy;
		
		private System.Data.Linq.Binary _Version;
		
		private string _JobCode;
		
		private string _PackageName;
		
		private EntitySet<VoucherDetail> _VoucherDetails;
		
		private EntitySet<BankGuarantee> _BankGuarantees;
		
		private EntityRef<Division> _Division;
		
		private EntityRef<HeadOfAccount> _HeadOfAccount;
		
		private EntityRef<Contractor> _Contractor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIdChanging(int value);
    partial void OnJobIdChanged();
    partial void OnJobTypeCodeChanging(System.Nullable<char> value);
    partial void OnJobTypeCodeChanged();
    partial void OnSanctionNumberChanging(string value);
    partial void OnSanctionNumberChanged();
    partial void OnSanctionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSanctionDateChanged();
    partial void OnSanctionedAmountChanging(System.Nullable<decimal> value);
    partial void OnSanctionedAmountChanged();
    partial void OnWorkOrderNumberChanging(string value);
    partial void OnWorkOrderNumberChanged();
    partial void OnWorkOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWorkOrderDateChanged();
    partial void OnCommencementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCommencementDateChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    partial void OnHeadOfAccountIdChanging(System.Nullable<int> value);
    partial void OnHeadOfAccountIdChanged();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAwardDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAwardDateChanged();
    partial void OnContractAmountChanging(System.Nullable<decimal> value);
    partial void OnContractAmountChanged();
    partial void OnContractorIdChanging(System.Nullable<int> value);
    partial void OnContractorIdChanged();
    partial void OnRevisedSanctionChanging(System.Nullable<decimal> value);
    partial void OnRevisedSanctionChanged();
    partial void OnRevisedContractChanging(System.Nullable<decimal> value);
    partial void OnRevisedContractChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnPackageNameChanging(string value);
    partial void OnPackageNameChanged();
    #endregion
		
		public Job()
		{
			this._VoucherDetails = new EntitySet<VoucherDetail>(new Action<VoucherDetail>(this.attach_VoucherDetails), new Action<VoucherDetail>(this.detach_VoucherDetails));
			this._BankGuarantees = new EntitySet<BankGuarantee>(new Action<BankGuarantee>(this.attach_BankGuarantees), new Action<BankGuarantee>(this.detach_BankGuarantees));
			this._Division = default(EntityRef<Division>);
			this._HeadOfAccount = default(EntityRef<HeadOfAccount>);
			this._Contractor = default(EntityRef<Contractor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TypeFlag", Storage="_TypeFlag", DbType="NVarChar(1) ", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<char> JobTypeCode
		{
			get
			{
				return this._TypeFlag;
			}
			set
			{
				if ((this._TypeFlag != value))
				{
					this.OnJobTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeFlag = value;
					this.SendPropertyChanged("JobTypeCode");
					this.OnJobTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanctionNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SanctionNumber
		{
			get
			{
				return this._SanctionNumber;
			}
			set
			{
				if ((this._SanctionNumber != value))
				{
					this.OnSanctionNumberChanging(value);
					this.SendPropertyChanging();
					this._SanctionNumber = value;
					this.SendPropertyChanged("SanctionNumber");
					this.OnSanctionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanctionDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SanctionDate
		{
			get
			{
				return this._SanctionDate;
			}
			set
			{
				if ((this._SanctionDate != value))
				{
					this.OnSanctionDateChanging(value);
					this.SendPropertyChanging();
					this._SanctionDate = value;
					this.SendPropertyChanged("SanctionDate");
					this.OnSanctionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanctionedAmount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SanctionedAmount
		{
			get
			{
				return this._SanctionedAmount;
			}
			set
			{
				if ((this._SanctionedAmount != value))
				{
					this.OnSanctionedAmountChanging(value);
					this.SendPropertyChanging();
					this._SanctionedAmount = value;
					this.SendPropertyChanged("SanctionedAmount");
					this.OnSanctionedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string WorkOrderNumber
		{
			get
			{
				return this._WorkOrderNumber;
			}
			set
			{
				if ((this._WorkOrderNumber != value))
				{
					this.OnWorkOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNumber = value;
					this.SendPropertyChanged("WorkOrderNumber");
					this.OnWorkOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> WorkOrderDate
		{
			get
			{
				return this._WorkOrderDate;
			}
			set
			{
				if ((this._WorkOrderDate != value))
				{
					this.OnWorkOrderDateChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderDate = value;
					this.SendPropertyChanged("WorkOrderDate");
					this.OnWorkOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommencementDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CommencementDate
		{
			get
			{
				return this._CommencementDate;
			}
			set
			{
				if ((this._CommencementDate != value))
				{
					this.OnCommencementDateChanging(value);
					this.SendPropertyChanging();
					this._CommencementDate = value;
					this.SendPropertyChanged("CommencementDate");
					this.OnCommencementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
			set
			{
				if ((this._HeadOfAccountId != value))
				{
					if (this._HeadOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._HeadOfAccountId = value;
					this.SendPropertyChanged("HeadOfAccountId");
					this.OnHeadOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="nvarchar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwardDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AwardDate
		{
			get
			{
				return this._AwardDate;
			}
			set
			{
				if ((this._AwardDate != value))
				{
					this.OnAwardDateChanging(value);
					this.SendPropertyChanging();
					this._AwardDate = value;
					this.SendPropertyChanged("AwardDate");
					this.OnAwardDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractAmount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ContractAmount
		{
			get
			{
				return this._ContractAmount;
			}
			set
			{
				if ((this._ContractAmount != value))
				{
					this.OnContractAmountChanging(value);
					this.SendPropertyChanging();
					this._ContractAmount = value;
					this.SendPropertyChanged("ContractAmount");
					this.OnContractAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					if (this._Contractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisedSanction", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RevisedSanction
		{
			get
			{
				return this._RevisedSanction;
			}
			set
			{
				if ((this._RevisedSanction != value))
				{
					this.OnRevisedSanctionChanging(value);
					this.SendPropertyChanging();
					this._RevisedSanction = value;
					this.SendPropertyChanged("RevisedSanction");
					this.OnRevisedSanctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisedContract", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RevisedContract
		{
			get
			{
				return this._RevisedContract;
			}
			set
			{
				if ((this._RevisedContract != value))
				{
					this.OnRevisedContractChanging(value);
					this.SendPropertyChanging();
					this._RevisedContract = value;
					this.SendPropertyChanged("RevisedContract");
					this.OnRevisedContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="nvarchar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageName", DbType="nvarchar(60)", UpdateCheck=UpdateCheck.Never)]
		public string PackageName
		{
			get
			{
				return this._PackageName;
			}
			set
			{
				if ((this._PackageName != value))
				{
					this.OnPackageNameChanging(value);
					this.SendPropertyChanging();
					this._PackageName = value;
					this.SendPropertyChanged("PackageName");
					this.OnPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_VoucherDetail", Storage="_VoucherDetails", ThisKey="JobId", OtherKey="JobId")]
		public EntitySet<VoucherDetail> VoucherDetails
		{
			get
			{
				return this._VoucherDetails;
			}
			set
			{
				this._VoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_BankGuarantee", Storage="_BankGuarantees", ThisKey="JobId", OtherKey="JobId")]
		public EntitySet<BankGuarantee> BankGuarantees
		{
			get
			{
				return this._BankGuarantees;
			}
			set
			{
				this._BankGuarantees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Job", Storage="_Division", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._DivisionId = value.DivisionId;
					}
					else
					{
						this._DivisionId = default(int);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_Job", Storage="_HeadOfAccount", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public HeadOfAccount HeadOfAccount
		{
			get
			{
				return this._HeadOfAccount.Entity;
			}
			set
			{
				HeadOfAccount previousValue = this._HeadOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._HeadOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HeadOfAccount.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._HeadOfAccount.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._HeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._HeadOfAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("HeadOfAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_Job", Storage="_Contractor", ThisKey="ContractorId", OtherKey="ContractorId", IsForeignKey=true)]
		public Contractor Contractor
		{
			get
			{
				return this._Contractor.Entity;
			}
			set
			{
				Contractor previousValue = this._Contractor.Entity;
				if (((previousValue != value) 
							|| (this._Contractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contractor.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Contractor.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._ContractorId = value.ContractorId;
					}
					else
					{
						this._ContractorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contractor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_BankGuarantees(BankGuarantee entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_BankGuarantees(BankGuarantee entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Budget")]
	public partial class Budget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BudgetId;
		
		private System.Nullable<int> _HeadOfAccountId;
		
		private System.Nullable<short> _Year_Begining;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Revised_amount;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<HeadOfAccount> _HeadOfAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBudgetIdChanging(int value);
    partial void OnBudgetIdChanged();
    partial void OnHeadOfAccountIdChanging(System.Nullable<int> value);
    partial void OnHeadOfAccountIdChanged();
    partial void OnYear_BeginingChanging(System.Nullable<short> value);
    partial void OnYear_BeginingChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnRevised_amountChanging(System.Nullable<decimal> value);
    partial void OnRevised_amountChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Budget()
		{
			this._HeadOfAccount = default(EntityRef<HeadOfAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
			set
			{
				if ((this._HeadOfAccountId != value))
				{
					if (this._HeadOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._HeadOfAccountId = value;
					this.SendPropertyChanged("HeadOfAccountId");
					this.OnHeadOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year_Begining", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Year_Begining
		{
			get
			{
				return this._Year_Begining;
			}
			set
			{
				if ((this._Year_Begining != value))
				{
					this.OnYear_BeginingChanging(value);
					this.SendPropertyChanging();
					this._Year_Begining = value;
					this.SendPropertyChanged("Year_Begining");
					this.OnYear_BeginingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revised_amount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Revised_amount
		{
			get
			{
				return this._Revised_amount;
			}
			set
			{
				if ((this._Revised_amount != value))
				{
					this.OnRevised_amountChanging(value);
					this.SendPropertyChanging();
					this._Revised_amount = value;
					this.SendPropertyChanged("Revised_amount");
					this.OnRevised_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_Budget", Storage="_HeadOfAccount", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public HeadOfAccount HeadOfAccount
		{
			get
			{
				return this._HeadOfAccount.Entity;
			}
			set
			{
				HeadOfAccount previousValue = this._HeadOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._HeadOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HeadOfAccount.Entity = null;
						previousValue.Budgets.Remove(this);
					}
					this._HeadOfAccount.Entity = value;
					if ((value != null))
					{
						value.Budgets.Add(this);
						this._HeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._HeadOfAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("HeadOfAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contractor")]
	public partial class Contractor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractorId;
		
		private string _ContractorName;
		
		private string _ContractorCode;
		
		private string _Address;
		
		private string _City;
		
		private string _Country;
		
		private string _Postal_Code;
		
		private string _Contact_person;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Fax;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private System.Data.Linq.Binary _Version;
		
		private string _ModifiedWorkstation;
		
		private string _State;
		
		private string _Nationality;
		
		private EntitySet<VoucherDetail> _VoucherDetails;
		
		private EntitySet<Job> _Jobs;
		
		private EntitySet<BankGuarantee> _BankGuarantees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractorIdChanging(int value);
    partial void OnContractorIdChanged();
    partial void OnContractorNameChanging(string value);
    partial void OnContractorNameChanged();
    partial void OnContractorCodeChanging(string value);
    partial void OnContractorCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostal_CodeChanging(string value);
    partial void OnPostal_CodeChanged();
    partial void OnContact_personChanging(string value);
    partial void OnContact_personChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    #endregion
		
		public Contractor()
		{
			this._VoucherDetails = new EntitySet<VoucherDetail>(new Action<VoucherDetail>(this.attach_VoucherDetails), new Action<VoucherDetail>(this.detach_VoucherDetails));
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._BankGuarantees = new EntitySet<BankGuarantee>(new Action<BankGuarantee>(this.attach_BankGuarantees), new Action<BankGuarantee>(this.detach_BankGuarantees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContractorName
		{
			get
			{
				return this._ContractorName;
			}
			set
			{
				if ((this._ContractorName != value))
				{
					this.OnContractorNameChanging(value);
					this.SendPropertyChanging();
					this._ContractorName = value;
					this.SendPropertyChanged("ContractorName");
					this.OnContractorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContractorCode
		{
			get
			{
				return this._ContractorCode;
			}
			set
			{
				if ((this._ContractorCode != value))
				{
					this.OnContractorCodeChanging(value);
					this.SendPropertyChanging();
					this._ContractorCode = value;
					this.SendPropertyChanged("ContractorCode");
					this.OnContractorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Code", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Postal_Code
		{
			get
			{
				return this._Postal_Code;
			}
			set
			{
				if ((this._Postal_Code != value))
				{
					this.OnPostal_CodeChanging(value);
					this.SendPropertyChanging();
					this._Postal_Code = value;
					this.SendPropertyChanged("Postal_Code");
					this.OnPostal_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_person", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Contact_person
		{
			get
			{
				return this._Contact_person;
			}
			set
			{
				if ((this._Contact_person != value))
				{
					this.OnContact_personChanging(value);
					this.SendPropertyChanging();
					this._Contact_person = value;
					this.SendPropertyChanged("Contact_person");
					this.OnContact_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="nVarchar(30)", UpdateCheck=UpdateCheck.Never)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="nvarchar(2)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_VoucherDetail", Storage="_VoucherDetails", ThisKey="ContractorId", OtherKey="ContractorId")]
		public EntitySet<VoucherDetail> VoucherDetails
		{
			get
			{
				return this._VoucherDetails;
			}
			set
			{
				this._VoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_Job", Storage="_Jobs", ThisKey="ContractorId", OtherKey="ContractorId")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_BankGuarantee", Storage="_BankGuarantees", ThisKey="ContractorId", OtherKey="ContractorId")]
		public EntitySet<BankGuarantee> BankGuarantees
		{
			get
			{
				return this._BankGuarantees;
			}
			set
			{
				this._BankGuarantees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = this;
		}
		
		private void detach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = null;
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = null;
		}
		
		private void attach_BankGuarantees(BankGuarantee entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = this;
		}
		
		private void detach_BankGuarantees(BankGuarantee entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankGuarantee")]
	public partial class BankGuarantee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankGuaranteeId;
		
		private string _BankGuaranteeNumber;
		
		private decimal _Amount;
		
		private int _JobId;
		
		private int _ContractorId;
		
		private int _DivisionId;
		
		private System.DateTime _IssueDate;
		
		private System.DateTime _ReceiptDate;
		
		private System.DateTime _ExpiryDate;
		
		private string _IssuingBank;
		
		private string _BankAddress;
		
		private string _City;
		
		private string _Reason;
		
		private string _BasicEnteredBy;
		
		private string _BasicVerifiedBy;
		
		private System.Nullable<System.DateTime> _ExtendedExpiryDate;
		
		private System.Nullable<System.DateTime> _ReturnDate;
		
		private System.Nullable<System.DateTime> _EncashmentSentDate;
		
		private System.Nullable<System.DateTime> _EncashmentReceiptDate;
		
		private string _ExtensionEnteredBy;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<Contractor> _Contractor;
		
		private EntityRef<Division> _Division;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankGuaranteeIdChanging(int value);
    partial void OnBankGuaranteeIdChanged();
    partial void OnBankGuaranteeNumberChanging(string value);
    partial void OnBankGuaranteeNumberChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnJobIdChanging(int value);
    partial void OnJobIdChanged();
    partial void OnContractorIdChanging(int value);
    partial void OnContractorIdChanged();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnIssueDateChanging(System.DateTime value);
    partial void OnIssueDateChanged();
    partial void OnReceiptDateChanging(System.DateTime value);
    partial void OnReceiptDateChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnIssuingBankChanging(string value);
    partial void OnIssuingBankChanged();
    partial void OnBankAddressChanging(string value);
    partial void OnBankAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnBasicEnteredByChanging(string value);
    partial void OnBasicEnteredByChanged();
    partial void OnBasicVerifiedByChanging(string value);
    partial void OnBasicVerifiedByChanged();
    partial void OnExtendedExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExtendedExpiryDateChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    partial void OnEncashmentSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEncashmentSentDateChanged();
    partial void OnEncashmentReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEncashmentReceiptDateChanged();
    partial void OnExtensionEnteredByChanging(string value);
    partial void OnExtensionEnteredByChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public BankGuarantee()
		{
			this._Contractor = default(EntityRef<Contractor>);
			this._Division = default(EntityRef<Division>);
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankGuaranteeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int BankGuaranteeId
		{
			get
			{
				return this._BankGuaranteeId;
			}
			set
			{
				if ((this._BankGuaranteeId != value))
				{
					this.OnBankGuaranteeIdChanging(value);
					this.SendPropertyChanging();
					this._BankGuaranteeId = value;
					this.SendPropertyChanged("BankGuaranteeId");
					this.OnBankGuaranteeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankGuaranteeNumber", DbType="Char(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BankGuaranteeNumber
		{
			get
			{
				return this._BankGuaranteeNumber;
			}
			set
			{
				if ((this._BankGuaranteeNumber != value))
				{
					this.OnBankGuaranteeNumberChanging(value);
					this.SendPropertyChanging();
					this._BankGuaranteeNumber = value;
					this.SendPropertyChanged("BankGuaranteeNumber");
					this.OnBankGuaranteeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					if (this._Contractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this.OnReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDate = value;
					this.SendPropertyChanged("ReceiptDate");
					this.OnReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuingBank", DbType="Char(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string IssuingBank
		{
			get
			{
				return this._IssuingBank;
			}
			set
			{
				if ((this._IssuingBank != value))
				{
					this.OnIssuingBankChanging(value);
					this.SendPropertyChanging();
					this._IssuingBank = value;
					this.SendPropertyChanged("IssuingBank");
					this.OnIssuingBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAddress", DbType="Char(50)", UpdateCheck=UpdateCheck.Never)]
		public string BankAddress
		{
			get
			{
				return this._BankAddress;
			}
			set
			{
				if ((this._BankAddress != value))
				{
					this.OnBankAddressChanging(value);
					this.SendPropertyChanging();
					this._BankAddress = value;
					this.SendPropertyChanged("BankAddress");
					this.OnBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="Char(50)", UpdateCheck=UpdateCheck.Never)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicEnteredBy", DbType="Char(50) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public string BasicEnteredBy
		{
			get
			{
				return this._BasicEnteredBy;
			}
			set
			{
				if ((this._BasicEnteredBy != value))
				{
					this.OnBasicEnteredByChanging(value);
					this.SendPropertyChanging();
					this._BasicEnteredBy = value;
					this.SendPropertyChanged("BasicEnteredBy");
					this.OnBasicEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicVerifiedBy", DbType="Char(50)", UpdateCheck=UpdateCheck.Never)]
		public string BasicVerifiedBy
		{
			get
			{
				return this._BasicVerifiedBy;
			}
			set
			{
				if ((this._BasicVerifiedBy != value))
				{
					this.OnBasicVerifiedByChanging(value);
					this.SendPropertyChanging();
					this._BasicVerifiedBy = value;
					this.SendPropertyChanged("BasicVerifiedBy");
					this.OnBasicVerifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedExpiryDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExtendedExpiryDate
		{
			get
			{
				return this._ExtendedExpiryDate;
			}
			set
			{
				if ((this._ExtendedExpiryDate != value))
				{
					this.OnExtendedExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExtendedExpiryDate = value;
					this.SendPropertyChanged("ExtendedExpiryDate");
					this.OnExtendedExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this.OnReturnDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnDate = value;
					this.SendPropertyChanged("ReturnDate");
					this.OnReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncashmentSentDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EncashmentSentDate
		{
			get
			{
				return this._EncashmentSentDate;
			}
			set
			{
				if ((this._EncashmentSentDate != value))
				{
					this.OnEncashmentSentDateChanging(value);
					this.SendPropertyChanging();
					this._EncashmentSentDate = value;
					this.SendPropertyChanged("EncashmentSentDate");
					this.OnEncashmentSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncashmentReceiptDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EncashmentReceiptDate
		{
			get
			{
				return this._EncashmentReceiptDate;
			}
			set
			{
				if ((this._EncashmentReceiptDate != value))
				{
					this.OnEncashmentReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._EncashmentReceiptDate = value;
					this.SendPropertyChanged("EncashmentReceiptDate");
					this.OnEncashmentReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionEnteredBy", DbType="Char(50)", UpdateCheck=UpdateCheck.Never)]
		public string ExtensionEnteredBy
		{
			get
			{
				return this._ExtensionEnteredBy;
			}
			set
			{
				if ((this._ExtensionEnteredBy != value))
				{
					this.OnExtensionEnteredByChanging(value);
					this.SendPropertyChanging();
					this._ExtensionEnteredBy = value;
					this.SendPropertyChanged("ExtensionEnteredBy");
					this.OnExtensionEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", AutoSync=AutoSync.Always, DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", AutoSync=AutoSync.Always, DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_BankGuarantee", Storage="_Contractor", ThisKey="ContractorId", OtherKey="ContractorId", IsForeignKey=true)]
		public Contractor Contractor
		{
			get
			{
				return this._Contractor.Entity;
			}
			set
			{
				Contractor previousValue = this._Contractor.Entity;
				if (((previousValue != value) 
							|| (this._Contractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contractor.Entity = null;
						previousValue.BankGuarantees.Remove(this);
					}
					this._Contractor.Entity = value;
					if ((value != null))
					{
						value.BankGuarantees.Add(this);
						this._ContractorId = value.ContractorId;
					}
					else
					{
						this._ContractorId = default(int);
					}
					this.SendPropertyChanged("Contractor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_BankGuarantee", Storage="_Division", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.BankGuarantees.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.BankGuarantees.Add(this);
						this._DivisionId = value.DivisionId;
					}
					else
					{
						this._DivisionId = default(int);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_BankGuarantee", Storage="_Job", ThisKey="JobId", OtherKey="JobId", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.BankGuarantees.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.BankGuarantees.Add(this);
						this._JobId = value.JobId;
					}
					else
					{
						this._JobId = default(int);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountType")]
	public partial class AccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HeadOfAccountType = default(string);
		
		private string _Description = default(string);
		
		private string _Category;
		
		private EntitySet<HeadOfAccount> _HeadOfAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public AccountType()
		{
			this._HeadOfAccounts = new EntitySet<HeadOfAccount>(new Action<HeadOfAccount>(this.attach_HeadOfAccounts), new Action<HeadOfAccount>(this.detach_HeadOfAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountType", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string HeadOfAccountType
		{
			get
			{
				return this._HeadOfAccountType;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Type", Storage="_Category", DbType="VARCHAR(1)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_HeadOfAccount", Storage="_HeadOfAccounts", ThisKey="HeadOfAccountType", OtherKey="HeadOfAccountType")]
		public EntitySet<HeadOfAccount> HeadOfAccounts
		{
			get
			{
				return this._HeadOfAccounts;
			}
			set
			{
				this._HeadOfAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HeadOfAccounts(HeadOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = this;
		}
		
		private void detach_HeadOfAccounts(HeadOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payroll.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId = default(int);
		
		private string _EmployeeCode = default(string);
		
		private string _FirstName = default(string);
		
		private string _LastName = default(string);
		
		private System.Nullable<int> _DivisionId = default(System.Nullable<int>);
		
		private string _Designation = default(string);
		
		private EntitySet<VoucherDetail> _VoucherDetails;
		
		private EntityRef<Division> _Division;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Employee()
		{
			this._VoucherDetails = new EntitySet<VoucherDetail>(new Action<VoucherDetail>(this.attach_VoucherDetails), new Action<VoucherDetail>(this.detach_VoucherDetails));
			this._Division = default(EntityRef<Division>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", UpdateCheck=UpdateCheck.Never)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_VoucherDetail", Storage="_VoucherDetails", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<VoucherDetail> VoucherDetails
		{
			get
			{
				return this._VoucherDetails;
			}
			set
			{
				this._VoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Employee", Storage="_Division", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DivisionId = value.DivisionId;
					}
					else
					{
						this._DivisionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_VoucherDetails(VoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.Station")]
	public partial class Station : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StationId;
		
		private string _StationName;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<HeadOfAccount> _HeadOfAccounts;
		
		private EntitySet<Voucher> _Vouchers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStationIdChanging(int value);
    partial void OnStationIdChanged();
    partial void OnStationNameChanging(string value);
    partial void OnStationNameChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Station()
		{
			this._HeadOfAccounts = new EntitySet<HeadOfAccount>(new Action<HeadOfAccount>(this.attach_HeadOfAccounts), new Action<HeadOfAccount>(this.detach_HeadOfAccounts));
			this._Vouchers = new EntitySet<Voucher>(new Action<Voucher>(this.attach_Vouchers), new Action<Voucher>(this.detach_Vouchers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StationName
		{
			get
			{
				return this._StationName;
			}
			set
			{
				if ((this._StationName != value))
				{
					this.OnStationNameChanging(value);
					this.SendPropertyChanging();
					this._StationName = value;
					this.SendPropertyChanged("StationName");
					this.OnStationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_HeadOfAccount", Storage="_HeadOfAccounts", ThisKey="StationId", OtherKey="StationId")]
		public EntitySet<HeadOfAccount> HeadOfAccounts
		{
			get
			{
				return this._HeadOfAccounts;
			}
			set
			{
				this._HeadOfAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Voucher", Storage="_Vouchers", ThisKey="StationId", OtherKey="StationId")]
		public EntitySet<Voucher> Vouchers
		{
			get
			{
				return this._Vouchers;
			}
			set
			{
				this._Vouchers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HeadOfAccounts(HeadOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.Station1 = this;
		}
		
		private void detach_HeadOfAccounts(HeadOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.Station1 = null;
		}
		
		private void attach_Vouchers(Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Station1 = this;
		}
		
		private void detach_Vouchers(Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Station1 = null;
		}
	}
}
#pragma warning restore 1591
