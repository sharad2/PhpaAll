#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eclipse.PhpaLibrary.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Dev")]
	public partial class PackageActivityDataContext : Eclipse.PhpaLibrary.Database.DataContextBase
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPackage(Package instance);
    partial void UpdatePackage(Package instance);
    partial void DeletePackage(Package instance);
    partial void InsertPackageReport(PackageReport instance);
    partial void UpdatePackageReport(PackageReport instance);
    partial void DeletePackageReport(PackageReport instance);
    partial void InsertPackageActivityTransaction(PackageActivityTransaction instance);
    partial void UpdatePackageActivityTransaction(PackageActivityTransaction instance);
    partial void DeletePackageActivityTransaction(PackageActivityTransaction instance);
    partial void InsertPackageActivityTransactionDetail(PackageActivityTransactionDetail instance);
    partial void UpdatePackageActivityTransactionDetail(PackageActivityTransactionDetail instance);
    partial void DeletePackageActivityTransactionDetail(PackageActivityTransactionDetail instance);
    partial void InsertPackageActivity(PackageActivity instance);
    partial void UpdatePackageActivity(PackageActivity instance);
    partial void DeletePackageActivity(PackageActivity instance);
    partial void InsertPackageActivityGroup(PackageActivityGroup instance);
    partial void UpdatePackageActivityGroup(PackageActivityGroup instance);
    partial void DeletePackageActivityGroup(PackageActivityGroup instance);
    #endregion
		
		public PackageActivityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PackageActivityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PackageActivityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PackageActivityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Package> Packages
		{
			get
			{
				return this.GetTable<Package>();
			}
		}
		
		public System.Data.Linq.Table<PackageReport> PackageReports
		{
			get
			{
				return this.GetTable<PackageReport>();
			}
		}
		
		public System.Data.Linq.Table<PackageActivityTransaction> PackageActivityTransactions
		{
			get
			{
				return this.GetTable<PackageActivityTransaction>();
			}
		}
		
		public System.Data.Linq.Table<PackageActivityTransactionDetail> PackageActivityTransactionDetails
		{
			get
			{
				return this.GetTable<PackageActivityTransactionDetail>();
			}
		}
		
		public System.Data.Linq.Table<PackageActivity> PackageActivities
		{
			get
			{
				return this.GetTable<PackageActivity>();
			}
		}
		
		public System.Data.Linq.Table<PackageActivityGroup> PackageActivityGroups
		{
			get
			{
				return this.GetTable<PackageActivityGroup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MIS.Package")]
	public partial class Package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageId;
		
		private string _PackageName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<PackageActivityTransaction> _PackageActivityTransactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageIdChanging(int value);
    partial void OnPackageIdChanged();
    partial void OnPackageNameChanging(string value);
    partial void OnPackageNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Package()
		{
			this._PackageActivityTransactions = new EntitySet<PackageActivityTransaction>(new Action<PackageActivityTransaction>(this.attach_PackageActivityTransactions), new Action<PackageActivityTransaction>(this.detach_PackageActivityTransactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PackageId
		{
			get
			{
				return this._PackageId;
			}
			set
			{
				if ((this._PackageId != value))
				{
					this.OnPackageIdChanging(value);
					this.SendPropertyChanging();
					this._PackageId = value;
					this.SendPropertyChanged("PackageId");
					this.OnPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PackageName
		{
			get
			{
				return this._PackageName;
			}
			set
			{
				if ((this._PackageName != value))
				{
					this.OnPackageNameChanging(value);
					this.SendPropertyChanging();
					this._PackageName = value;
					this.SendPropertyChanged("PackageName");
					this.OnPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_PackageActivityTransaction", Storage="_PackageActivityTransactions", ThisKey="PackageId", OtherKey="PackageId")]
		public EntitySet<PackageActivityTransaction> PackageActivityTransactions
		{
			get
			{
				return this._PackageActivityTransactions;
			}
			set
			{
				this._PackageActivityTransactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageActivityTransactions(PackageActivityTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_PackageActivityTransactions(PackageActivityTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MIS.PackageReport")]
	public partial class PackageReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageReportId;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<PackageActivityTransaction> _PackageActivityTransactions;
		
		private EntitySet<PackageActivityGroup> _PackageActivityGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageReportIdChanging(int value);
    partial void OnPackageReportIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public PackageReport()
		{
			this._PackageActivityTransactions = new EntitySet<PackageActivityTransaction>(new Action<PackageActivityTransaction>(this.attach_PackageActivityTransactions), new Action<PackageActivityTransaction>(this.detach_PackageActivityTransactions));
			this._PackageActivityGroups = new EntitySet<PackageActivityGroup>(new Action<PackageActivityGroup>(this.attach_PackageActivityGroups), new Action<PackageActivityGroup>(this.detach_PackageActivityGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageReportId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PackageReportId
		{
			get
			{
				return this._PackageReportId;
			}
			set
			{
				if ((this._PackageReportId != value))
				{
					this.OnPackageReportIdChanging(value);
					this.SendPropertyChanging();
					this._PackageReportId = value;
					this.SendPropertyChanged("PackageReportId");
					this.OnPackageReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageReport_PackageActivityTransaction", Storage="_PackageActivityTransactions", ThisKey="PackageReportId", OtherKey="PackageReportId")]
		public EntitySet<PackageActivityTransaction> PackageActivityTransactions
		{
			get
			{
				return this._PackageActivityTransactions;
			}
			set
			{
				this._PackageActivityTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageReport_PackageActivityGroup", Storage="_PackageActivityGroups", ThisKey="PackageReportId", OtherKey="PackageReportId")]
		public EntitySet<PackageActivityGroup> PackageActivityGroups
		{
			get
			{
				return this._PackageActivityGroups;
			}
			set
			{
				this._PackageActivityGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageActivityTransactions(PackageActivityTransaction entity)
		{
			this.SendPropertyChanging();
			entity.PackageReport = this;
		}
		
		private void detach_PackageActivityTransactions(PackageActivityTransaction entity)
		{
			this.SendPropertyChanging();
			entity.PackageReport = null;
		}
		
		private void attach_PackageActivityGroups(PackageActivityGroup entity)
		{
			this.SendPropertyChanging();
			entity.PackageReport = this;
		}
		
		private void detach_PackageActivityGroups(PackageActivityGroup entity)
		{
			this.SendPropertyChanging();
			entity.PackageReport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MIS.PackageActivityTransaction")]
	public partial class PackageActivityTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityTransactionId;
		
		private System.DateTime _PackageActivityDate;
		
		private int _PackageId;
		
		private int _PackageReportId;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<PackageActivityTransactionDetail> _PackageActivityTransactionDetails;
		
		private EntityRef<Package> _Package;
		
		private EntityRef<PackageReport> _PackageReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityTransactionIdChanging(int value);
    partial void OnActivityTransactionIdChanged();
    partial void OnPackageActivityDateChanging(System.DateTime value);
    partial void OnPackageActivityDateChanged();
    partial void OnPackageIdChanging(int value);
    partial void OnPackageIdChanged();
    partial void OnPackageReportIdChanging(int value);
    partial void OnPackageReportIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public PackageActivityTransaction()
		{
			this._PackageActivityTransactionDetails = new EntitySet<PackageActivityTransactionDetail>(new Action<PackageActivityTransactionDetail>(this.attach_PackageActivityTransactionDetails), new Action<PackageActivityTransactionDetail>(this.detach_PackageActivityTransactionDetails));
			this._Package = default(EntityRef<Package>);
			this._PackageReport = default(EntityRef<PackageReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityTransactionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ActivityTransactionId
		{
			get
			{
				return this._ActivityTransactionId;
			}
			set
			{
				if ((this._ActivityTransactionId != value))
				{
					this.OnActivityTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityTransactionId = value;
					this.SendPropertyChanged("ActivityTransactionId");
					this.OnActivityTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageActivityDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime PackageActivityDate
		{
			get
			{
				return this._PackageActivityDate;
			}
			set
			{
				if ((this._PackageActivityDate != value))
				{
					this.OnPackageActivityDateChanging(value);
					this.SendPropertyChanging();
					this._PackageActivityDate = value;
					this.SendPropertyChanged("PackageActivityDate");
					this.OnPackageActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PackageId
		{
			get
			{
				return this._PackageId;
			}
			set
			{
				if ((this._PackageId != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIdChanging(value);
					this.SendPropertyChanging();
					this._PackageId = value;
					this.SendPropertyChanged("PackageId");
					this.OnPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageReportId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PackageReportId
		{
			get
			{
				return this._PackageReportId;
			}
			set
			{
				if ((this._PackageReportId != value))
				{
					if (this._PackageReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageReportIdChanging(value);
					this.SendPropertyChanging();
					this._PackageReportId = value;
					this.SendPropertyChanged("PackageReportId");
					this.OnPackageReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageActivityTransaction_PackageActivityTransactionDetail", Storage="_PackageActivityTransactionDetails", ThisKey="ActivityTransactionId", OtherKey="ActivityTransactionId")]
		public EntitySet<PackageActivityTransactionDetail> PackageActivityTransactionDetails
		{
			get
			{
				return this._PackageActivityTransactionDetails;
			}
			set
			{
				this._PackageActivityTransactionDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_PackageActivityTransaction", Storage="_Package", ThisKey="PackageId", OtherKey="PackageId", IsForeignKey=true)]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.PackageActivityTransactions.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.PackageActivityTransactions.Add(this);
						this._PackageId = value.PackageId;
					}
					else
					{
						this._PackageId = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageReport_PackageActivityTransaction", Storage="_PackageReport", ThisKey="PackageReportId", OtherKey="PackageReportId", IsForeignKey=true)]
		public PackageReport PackageReport
		{
			get
			{
				return this._PackageReport.Entity;
			}
			set
			{
				PackageReport previousValue = this._PackageReport.Entity;
				if (((previousValue != value) 
							|| (this._PackageReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageReport.Entity = null;
						previousValue.PackageActivityTransactions.Remove(this);
					}
					this._PackageReport.Entity = value;
					if ((value != null))
					{
						value.PackageActivityTransactions.Add(this);
						this._PackageReportId = value.PackageReportId;
					}
					else
					{
						this._PackageReportId = default(int);
					}
					this.SendPropertyChanged("PackageReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageActivityTransactionDetails(PackageActivityTransactionDetail entity)
		{
			this.SendPropertyChanging();
			entity.PackageActivityTransaction = this;
		}
		
		private void detach_PackageActivityTransactionDetails(PackageActivityTransactionDetail entity)
		{
			this.SendPropertyChanging();
			entity.PackageActivityTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MIS.PackageActivityTransactionDetail")]
	public partial class PackageActivityTransactionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityTransactionDetailId;
		
		private System.Nullable<decimal> _PackageActivtiyData;
		
		private int _ActivityTransactionId;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private int _PackageActivityId;
		
		private EntityRef<PackageActivityTransaction> _PackageActivityTransaction;
		
		private EntityRef<PackageActivity> _PackageActivity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityTransactionDetailIdChanging(int value);
    partial void OnActivityTransactionDetailIdChanged();
    partial void OnPackageActivtiyDataChanging(System.Nullable<decimal> value);
    partial void OnPackageActivtiyDataChanged();
    partial void OnActivityTransactionIdChanging(int value);
    partial void OnActivityTransactionIdChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnPackageActivityIdChanging(int value);
    partial void OnPackageActivityIdChanged();
    #endregion
		
		public PackageActivityTransactionDetail()
		{
			this._PackageActivityTransaction = default(EntityRef<PackageActivityTransaction>);
			this._PackageActivity = default(EntityRef<PackageActivity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityTransactionDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ActivityTransactionDetailId
		{
			get
			{
				return this._ActivityTransactionDetailId;
			}
			set
			{
				if ((this._ActivityTransactionDetailId != value))
				{
					this.OnActivityTransactionDetailIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityTransactionDetailId = value;
					this.SendPropertyChanged("ActivityTransactionDetailId");
					this.OnActivityTransactionDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageActivtiyData", DbType="Decimal(18,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PackageActivtiyData
		{
			get
			{
				return this._PackageActivtiyData;
			}
			set
			{
				if ((this._PackageActivtiyData != value))
				{
					this.OnPackageActivtiyDataChanging(value);
					this.SendPropertyChanging();
					this._PackageActivtiyData = value;
					this.SendPropertyChanged("PackageActivtiyData");
					this.OnPackageActivtiyDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityTransactionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ActivityTransactionId
		{
			get
			{
				return this._ActivityTransactionId;
			}
			set
			{
				if ((this._ActivityTransactionId != value))
				{
					if (this._PackageActivityTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityTransactionId = value;
					this.SendPropertyChanged("ActivityTransactionId");
					this.OnActivityTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageActivityId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PackageActivityId
		{
			get
			{
				return this._PackageActivityId;
			}
			set
			{
				if ((this._PackageActivityId != value))
				{
					if (this._PackageActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageActivityIdChanging(value);
					this.SendPropertyChanging();
					this._PackageActivityId = value;
					this.SendPropertyChanged("PackageActivityId");
					this.OnPackageActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageActivityTransaction_PackageActivityTransactionDetail", Storage="_PackageActivityTransaction", ThisKey="ActivityTransactionId", OtherKey="ActivityTransactionId", IsForeignKey=true)]
		public PackageActivityTransaction PackageActivityTransaction
		{
			get
			{
				return this._PackageActivityTransaction.Entity;
			}
			set
			{
				PackageActivityTransaction previousValue = this._PackageActivityTransaction.Entity;
				if (((previousValue != value) 
							|| (this._PackageActivityTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageActivityTransaction.Entity = null;
						previousValue.PackageActivityTransactionDetails.Remove(this);
					}
					this._PackageActivityTransaction.Entity = value;
					if ((value != null))
					{
						value.PackageActivityTransactionDetails.Add(this);
						this._ActivityTransactionId = value.ActivityTransactionId;
					}
					else
					{
						this._ActivityTransactionId = default(int);
					}
					this.SendPropertyChanged("PackageActivityTransaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageActivity_PackageActivityTransactionDetail", Storage="_PackageActivity", ThisKey="PackageActivityId", OtherKey="PackageActivityId", IsForeignKey=true)]
		public PackageActivity PackageActivity
		{
			get
			{
				return this._PackageActivity.Entity;
			}
			set
			{
				PackageActivity previousValue = this._PackageActivity.Entity;
				if (((previousValue != value) 
							|| (this._PackageActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageActivity.Entity = null;
						previousValue.PackageActivityTransactionDetails.Remove(this);
					}
					this._PackageActivity.Entity = value;
					if ((value != null))
					{
						value.PackageActivityTransactionDetails.Add(this);
						this._PackageActivityId = value.PackageActivityId;
					}
					else
					{
						this._PackageActivityId = default(int);
					}
					this.SendPropertyChanged("PackageActivity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MIS.PackageActivity")]
	public partial class PackageActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageActivityId;
		
		private string _Description;
		
		private System.Nullable<int> _ColumnNumber;
		
		private System.Nullable<int> _PackageActivityGroupId;
		
		private string _CalculatedFormula;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<PackageActivityTransactionDetail> _PackageActivityTransactionDetails;
		
		private EntityRef<PackageActivityGroup> _PackageActivityGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageActivityIdChanging(int value);
    partial void OnPackageActivityIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnColumnNumberChanging(System.Nullable<int> value);
    partial void OnColumnNumberChanged();
    partial void OnPackageActivityGroupIdChanging(System.Nullable<int> value);
    partial void OnPackageActivityGroupIdChanged();
    partial void OnCalculatedFormulaChanging(string value);
    partial void OnCalculatedFormulaChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public PackageActivity()
		{
			this._PackageActivityTransactionDetails = new EntitySet<PackageActivityTransactionDetail>(new Action<PackageActivityTransactionDetail>(this.attach_PackageActivityTransactionDetails), new Action<PackageActivityTransactionDetail>(this.detach_PackageActivityTransactionDetails));
			this._PackageActivityGroup = default(EntityRef<PackageActivityGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageActivityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PackageActivityId
		{
			get
			{
				return this._PackageActivityId;
			}
			set
			{
				if ((this._PackageActivityId != value))
				{
					this.OnPackageActivityIdChanging(value);
					this.SendPropertyChanging();
					this._PackageActivityId = value;
					this.SendPropertyChanged("PackageActivityId");
					this.OnPackageActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ColumnNumber
		{
			get
			{
				return this._ColumnNumber;
			}
			set
			{
				if ((this._ColumnNumber != value))
				{
					this.OnColumnNumberChanging(value);
					this.SendPropertyChanging();
					this._ColumnNumber = value;
					this.SendPropertyChanged("ColumnNumber");
					this.OnColumnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageActivityGroupId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PackageActivityGroupId
		{
			get
			{
				return this._PackageActivityGroupId;
			}
			set
			{
				if ((this._PackageActivityGroupId != value))
				{
					if (this._PackageActivityGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageActivityGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PackageActivityGroupId = value;
					this.SendPropertyChanged("PackageActivityGroupId");
					this.OnPackageActivityGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedFormula", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CalculatedFormula
		{
			get
			{
				return this._CalculatedFormula;
			}
			set
			{
				if ((this._CalculatedFormula != value))
				{
					this.OnCalculatedFormulaChanging(value);
					this.SendPropertyChanging();
					this._CalculatedFormula = value;
					this.SendPropertyChanged("CalculatedFormula");
					this.OnCalculatedFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageActivity_PackageActivityTransactionDetail", Storage="_PackageActivityTransactionDetails", ThisKey="PackageActivityId", OtherKey="PackageActivityId")]
		public EntitySet<PackageActivityTransactionDetail> PackageActivityTransactionDetails
		{
			get
			{
				return this._PackageActivityTransactionDetails;
			}
			set
			{
				this._PackageActivityTransactionDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageActivityGroup_PackageActivity", Storage="_PackageActivityGroup", ThisKey="PackageActivityGroupId", OtherKey="PackageActivityGroupId", IsForeignKey=true)]
		public PackageActivityGroup PackageActivityGroup
		{
			get
			{
				return this._PackageActivityGroup.Entity;
			}
			set
			{
				PackageActivityGroup previousValue = this._PackageActivityGroup.Entity;
				if (((previousValue != value) 
							|| (this._PackageActivityGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageActivityGroup.Entity = null;
						previousValue.PackageActivities.Remove(this);
					}
					this._PackageActivityGroup.Entity = value;
					if ((value != null))
					{
						value.PackageActivities.Add(this);
						this._PackageActivityGroupId = value.PackageActivityGroupId;
					}
					else
					{
						this._PackageActivityGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PackageActivityGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageActivityTransactionDetails(PackageActivityTransactionDetail entity)
		{
			this.SendPropertyChanging();
			entity.PackageActivity = this;
		}
		
		private void detach_PackageActivityTransactionDetails(PackageActivityTransactionDetail entity)
		{
			this.SendPropertyChanging();
			entity.PackageActivity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MIS.PackageActivityGroup")]
	public partial class PackageActivityGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageActivityGroupId;
		
		private string _Description;
		
		private System.Nullable<int> _PackageReportId;
		
		private System.Nullable<int> _ColumnNumber;
		
		private bool _HeaderTextVisible;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<PackageActivity> _PackageActivities;
		
		private EntityRef<PackageReport> _PackageReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageActivityGroupIdChanging(int value);
    partial void OnPackageActivityGroupIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPackageReportIdChanging(System.Nullable<int> value);
    partial void OnPackageReportIdChanged();
    partial void OnColumnNumberChanging(System.Nullable<int> value);
    partial void OnColumnNumberChanged();
    partial void OnHeaderTextVisibleChanging(bool value);
    partial void OnHeaderTextVisibleChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public PackageActivityGroup()
		{
			this._PackageActivities = new EntitySet<PackageActivity>(new Action<PackageActivity>(this.attach_PackageActivities), new Action<PackageActivity>(this.detach_PackageActivities));
			this._PackageReport = default(EntityRef<PackageReport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageActivityGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PackageActivityGroupId
		{
			get
			{
				return this._PackageActivityGroupId;
			}
			set
			{
				if ((this._PackageActivityGroupId != value))
				{
					this.OnPackageActivityGroupIdChanging(value);
					this.SendPropertyChanging();
					this._PackageActivityGroupId = value;
					this.SendPropertyChanged("PackageActivityGroupId");
					this.OnPackageActivityGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageReportId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PackageReportId
		{
			get
			{
				return this._PackageReportId;
			}
			set
			{
				if ((this._PackageReportId != value))
				{
					if (this._PackageReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageReportIdChanging(value);
					this.SendPropertyChanging();
					this._PackageReportId = value;
					this.SendPropertyChanged("PackageReportId");
					this.OnPackageReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ColumnNumber
		{
			get
			{
				return this._ColumnNumber;
			}
			set
			{
				if ((this._ColumnNumber != value))
				{
					this.OnColumnNumberChanging(value);
					this.SendPropertyChanging();
					this._ColumnNumber = value;
					this.SendPropertyChanged("ColumnNumber");
					this.OnColumnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderTextVisible", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public bool HeaderTextVisible
		{
			get
			{
				return this._HeaderTextVisible;
			}
			set
			{
				if ((this._HeaderTextVisible != value))
				{
					this.OnHeaderTextVisibleChanging(value);
					this.SendPropertyChanging();
					this._HeaderTextVisible = value;
					this.SendPropertyChanged("HeaderTextVisible");
					this.OnHeaderTextVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageActivityGroup_PackageActivity", Storage="_PackageActivities", ThisKey="PackageActivityGroupId", OtherKey="PackageActivityGroupId")]
		public EntitySet<PackageActivity> PackageActivities
		{
			get
			{
				return this._PackageActivities;
			}
			set
			{
				this._PackageActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageReport_PackageActivityGroup", Storage="_PackageReport", ThisKey="PackageReportId", OtherKey="PackageReportId", IsForeignKey=true)]
		public PackageReport PackageReport
		{
			get
			{
				return this._PackageReport.Entity;
			}
			set
			{
				PackageReport previousValue = this._PackageReport.Entity;
				if (((previousValue != value) 
							|| (this._PackageReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageReport.Entity = null;
						previousValue.PackageActivityGroups.Remove(this);
					}
					this._PackageReport.Entity = value;
					if ((value != null))
					{
						value.PackageActivityGroups.Add(this);
						this._PackageReportId = value.PackageReportId;
					}
					else
					{
						this._PackageReportId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PackageReport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageActivities(PackageActivity entity)
		{
			this.SendPropertyChanging();
			entity.PackageActivityGroup = this;
		}
		
		private void detach_PackageActivities(PackageActivity entity)
		{
			this.SendPropertyChanging();
			entity.PackageActivityGroup = null;
		}
	}
}
#pragma warning restore 1591
