#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eclipse.PhpaLibrary.Database.PIS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PHPA2Fortest")]
	public partial class PISDataContext : Eclipse.PhpaLibrary.Database.DataContextBase
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBloodGroup(BloodGroup instance);
    partial void UpdateBloodGroup(BloodGroup instance);
    partial void DeleteBloodGroup(BloodGroup instance);
    partial void InsertEmployeeStatus(EmployeeStatus instance);
    partial void UpdateEmployeeStatus(EmployeeStatus instance);
    partial void DeleteEmployeeStatus(EmployeeStatus instance);
    partial void InsertMaritalStatus(MaritalStatus instance);
    partial void UpdateMaritalStatus(MaritalStatus instance);
    partial void DeleteMaritalStatus(MaritalStatus instance);
    partial void InsertEntitlementType(EntitlementType instance);
    partial void UpdateEntitlementType(EntitlementType instance);
    partial void DeleteEntitlementType(EntitlementType instance);
    partial void InsertDivision(Division instance);
    partial void UpdateDivision(Division instance);
    partial void DeleteDivision(Division instance);
    partial void InsertFamilyMember(FamilyMember instance);
    partial void UpdateFamilyMember(FamilyMember instance);
    partial void DeleteFamilyMember(FamilyMember instance);
    partial void InsertQualificationDivision(QualificationDivision instance);
    partial void UpdateQualificationDivision(QualificationDivision instance);
    partial void DeleteQualificationDivision(QualificationDivision instance);
    partial void InsertTrainingType(TrainingType instance);
    partial void UpdateTrainingType(TrainingType instance);
    partial void DeleteTrainingType(TrainingType instance);
    partial void InsertLeaveType(LeaveType instance);
    partial void UpdateLeaveType(LeaveType instance);
    partial void DeleteLeaveType(LeaveType instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertQualification(Qualification instance);
    partial void UpdateQualification(Qualification instance);
    partial void DeleteQualification(Qualification instance);
    partial void InsertEmployeeType(EmployeeType instance);
    partial void UpdateEmployeeType(EmployeeType instance);
    partial void DeleteEmployeeType(EmployeeType instance);
    partial void InsertTraining(Training instance);
    partial void UpdateTraining(Training instance);
    partial void DeleteTraining(Training instance);
    partial void InsertMedicalRecord(MedicalRecord instance);
    partial void UpdateMedicalRecord(MedicalRecord instance);
    partial void DeleteMedicalRecord(MedicalRecord instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertLeaveRecord(LeaveRecord instance);
    partial void UpdateLeaveRecord(LeaveRecord instance);
    partial void DeleteLeaveRecord(LeaveRecord instance);
    partial void InsertServicePeriod(ServicePeriod instance);
    partial void UpdateServicePeriod(ServicePeriod instance);
    partial void DeleteServicePeriod(ServicePeriod instance);
    partial void InsertPromotionType(PromotionType instance);
    partial void UpdatePromotionType(PromotionType instance);
    partial void DeletePromotionType(PromotionType instance);
    partial void InsertNominee(Nominee instance);
    partial void UpdateNominee(Nominee instance);
    partial void DeleteNominee(Nominee instance);
    partial void InsertEmployeeGrant(EmployeeGrant instance);
    partial void UpdateEmployeeGrant(EmployeeGrant instance);
    partial void DeleteEmployeeGrant(EmployeeGrant instance);
    partial void InsertSubDivision(SubDivision instance);
    partial void UpdateSubDivision(SubDivision instance);
    partial void DeleteSubDivision(SubDivision instance);
    partial void InsertOffice(Office instance);
    partial void UpdateOffice(Office instance);
    partial void DeleteOffice(Office instance);
    partial void InsertStation(Station instance);
    partial void UpdateStation(Station instance);
    partial void DeleteStation(Station instance);
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    #endregion

		public PISDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PISDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PISDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PISDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BloodGroup> BloodGroups
		{
			get
			{
				return this.GetTable<BloodGroup>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeStatus> EmployeeStatus
		{
			get
			{
				return this.GetTable<EmployeeStatus>();
			}
		}
		
		public System.Data.Linq.Table<MaritalStatus> MaritalStatus
		{
			get
			{
				return this.GetTable<MaritalStatus>();
			}
		}
		
		public System.Data.Linq.Table<EntitlementType> EntitlementTypes
		{
			get
			{
				return this.GetTable<EntitlementType>();
			}
		}
		
		public System.Data.Linq.Table<Division> Divisions
		{
			get
			{
				return this.GetTable<Division>();
			}
		}
		
		public System.Data.Linq.Table<FamilyMember> FamilyMembers
		{
			get
			{
				return this.GetTable<FamilyMember>();
			}
		}
		
		public System.Data.Linq.Table<QualificationDivision> QualificationDivisions
		{
			get
			{
				return this.GetTable<QualificationDivision>();
			}
		}
		
		public System.Data.Linq.Table<TrainingType> TrainingTypes
		{
			get
			{
				return this.GetTable<TrainingType>();
			}
		}
		
		public System.Data.Linq.Table<LeaveType> LeaveTypes
		{
			get
			{
				return this.GetTable<LeaveType>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Qualification> Qualifications
		{
			get
			{
				return this.GetTable<Qualification>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeType> EmployeeTypes
		{
			get
			{
				return this.GetTable<EmployeeType>();
			}
		}
		
		public System.Data.Linq.Table<Training> Trainings
		{
			get
			{
				return this.GetTable<Training>();
			}
		}
		
		public System.Data.Linq.Table<MedicalRecord> MedicalRecords
		{
			get
			{
				return this.GetTable<MedicalRecord>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<LeaveRecord> LeaveRecords
		{
			get
			{
				return this.GetTable<LeaveRecord>();
			}
		}
		
		public System.Data.Linq.Table<ServicePeriod> ServicePeriods
		{
			get
			{
				return this.GetTable<ServicePeriod>();
			}
		}
		
		public System.Data.Linq.Table<PromotionType> PromotionTypes
		{
			get
			{
				return this.GetTable<PromotionType>();
			}
		}
		
		public System.Data.Linq.Table<Nominee> Nominees
		{
			get
			{
				return this.GetTable<Nominee>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeGrant> EmployeeGrants
		{
			get
			{
				return this.GetTable<EmployeeGrant>();
			}
		}
		
		public System.Data.Linq.Table<SubDivision> SubDivisions
		{
			get
			{
				return this.GetTable<SubDivision>();
			}
		}
		
		public System.Data.Linq.Table<Office> Offices
		{
			get
			{
				return this.GetTable<Office>();
			}
		}
		
		public System.Data.Linq.Table<Station> Stations
		{
			get
			{
				return this.GetTable<Station>();
			}
		}
		
		public System.Data.Linq.Table<Bank> Banks
		{
			get
			{
				return this.GetTable<Bank>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.BloodGroup")]
	public partial class BloodGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BloodGroupId;
		
		private string _BloodGroupType;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBloodGroupIdChanging(int value);
    partial void OnBloodGroupIdChanged();
    partial void OnBloodGroupTypeChanging(string value);
    partial void OnBloodGroupTypeChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public BloodGroup()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int BloodGroupId
		{
			get
			{
				return this._BloodGroupId;
			}
			set
			{
				if ((this._BloodGroupId != value))
				{
					this.OnBloodGroupIdChanging(value);
					this.SendPropertyChanging();
					this._BloodGroupId = value;
					this.SendPropertyChanged("BloodGroupId");
					this.OnBloodGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodGroupType", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BloodGroupType
		{
			get
			{
				return this._BloodGroupType;
			}
			set
			{
				if ((this._BloodGroupType != value))
				{
					this.OnBloodGroupTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodGroupType = value;
					this.SendPropertyChanged("BloodGroupType");
					this.OnBloodGroupTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BloodGroup_Employee", Storage="_Employees", ThisKey="BloodGroupId", OtherKey="BloodGroupId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.BloodGroup = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.BloodGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.EmployeeStatus")]
	public partial class EmployeeStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeStatusId;
		
		private string _EmployeeStatusType;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeStatusIdChanging(int value);
    partial void OnEmployeeStatusIdChanged();
    partial void OnEmployeeStatusTypeChanging(string value);
    partial void OnEmployeeStatusTypeChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EmployeeStatus()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeStatusId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EmployeeStatusId
		{
			get
			{
				return this._EmployeeStatusId;
			}
			set
			{
				if ((this._EmployeeStatusId != value))
				{
					this.OnEmployeeStatusIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeStatusId = value;
					this.SendPropertyChanged("EmployeeStatusId");
					this.OnEmployeeStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeStatusType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EmployeeStatusType
		{
			get
			{
				return this._EmployeeStatusType;
			}
			set
			{
				if ((this._EmployeeStatusType != value))
				{
					this.OnEmployeeStatusTypeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeStatusType = value;
					this.SendPropertyChanged("EmployeeStatusType");
					this.OnEmployeeStatusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeStatus_Employee", Storage="_Employees", ThisKey="EmployeeStatusId", OtherKey="EmployeeStatusId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeStatus = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.MaritalStatus")]
	public partial class MaritalStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaritalStatusId;
		
		private string _MaritalStatusType;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaritalStatusIdChanging(int value);
    partial void OnMaritalStatusIdChanged();
    partial void OnMaritalStatusTypeChanging(string value);
    partial void OnMaritalStatusTypeChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public MaritalStatus()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatusId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int MaritalStatusId
		{
			get
			{
				return this._MaritalStatusId;
			}
			set
			{
				if ((this._MaritalStatusId != value))
				{
					this.OnMaritalStatusIdChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatusId = value;
					this.SendPropertyChanged("MaritalStatusId");
					this.OnMaritalStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatusType", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MaritalStatusType
		{
			get
			{
				return this._MaritalStatusType;
			}
			set
			{
				if ((this._MaritalStatusType != value))
				{
					this.OnMaritalStatusTypeChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatusType = value;
					this.SendPropertyChanged("MaritalStatusType");
					this.OnMaritalStatusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaritalStatus_Employee", Storage="_Employees", ThisKey="MaritalStatusId", OtherKey="MaritalStatusId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.MaritalStatus = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.MaritalStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.EntitlementType")]
	public partial class EntitlementType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntitlementTypeId;
		
		private string _EntitlementDesc;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Nominee> _Nominees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntitlementTypeIdChanging(int value);
    partial void OnEntitlementTypeIdChanged();
    partial void OnEntitlementDescriptionChanging(string value);
    partial void OnEntitlementDescriptionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EntitlementType()
		{
			this._Nominees = new EntitySet<Nominee>(new Action<Nominee>(this.attach_Nominees), new Action<Nominee>(this.detach_Nominees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitlementTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EntitlementTypeId
		{
			get
			{
				return this._EntitlementTypeId;
			}
			set
			{
				if ((this._EntitlementTypeId != value))
				{
					this.OnEntitlementTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EntitlementTypeId = value;
					this.SendPropertyChanged("EntitlementTypeId");
					this.OnEntitlementTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitlementDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EntitlementDescription
		{
			get
			{
				return this._EntitlementDesc;
			}
			set
			{
				if ((this._EntitlementDesc != value))
				{
					this.OnEntitlementDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EntitlementDesc = value;
					this.SendPropertyChanged("EntitlementDescription");
					this.OnEntitlementDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntitlementType_Nominee", Storage="_Nominees", ThisKey="EntitlementTypeId", OtherKey="EntitlementTypeId")]
		public EntitySet<Nominee> Nominees
		{
			get
			{
				return this._Nominees;
			}
			set
			{
				this._Nominees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nominees(Nominee entity)
		{
			this.SendPropertyChanging();
			entity.EntitlementType = this;
		}
		
		private void detach_Nominees(Nominee entity)
		{
			this.SendPropertyChanging();
			entity.EntitlementType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Division")]
	public partial class Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DivisionId;
		
		private string _DivisionCode;
		
		private string _DivisionGroup;
		
		private string _DivisionName;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedWorkstation;
		
		private string _ModifiedBy;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<SubDivision> _SubDivisions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnDivisionCodeChanging(string value);
    partial void OnDivisionCodeChanged();
    partial void OnDivisionGroupChanging(string value);
    partial void OnDivisionGroupChanged();
    partial void OnDivisionNameChanging(string value);
    partial void OnDivisionNameChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Division()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._SubDivisions = new EntitySet<SubDivision>(new Action<SubDivision>(this.attach_SubDivisions), new Action<SubDivision>(this.detach_SubDivisions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
			set
			{
				if ((this._DivisionCode != value))
				{
					this.OnDivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._DivisionCode = value;
					this.SendPropertyChanged("DivisionCode");
					this.OnDivisionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionGroup", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionGroup
		{
			get
			{
				return this._DivisionGroup;
			}
			set
			{
				if ((this._DivisionGroup != value))
				{
					this.OnDivisionGroupChanging(value);
					this.SendPropertyChanging();
					this._DivisionGroup = value;
					this.SendPropertyChanged("DivisionGroup");
					this.OnDivisionGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionName
		{
			get
			{
				return this._DivisionName;
			}
			set
			{
				if ((this._DivisionName != value))
				{
					this.OnDivisionNameChanging(value);
					this.SendPropertyChanging();
					this._DivisionName = value;
					this.SendPropertyChanged("DivisionName");
					this.OnDivisionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Employee", Storage="_Employees", ThisKey="DivisionId", OtherKey="DivisionId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_SubDivision", Storage="_SubDivisions", ThisKey="DivisionId", OtherKey="DivisionId")]
		public EntitySet<SubDivision> SubDivisions
		{
			get
			{
				return this._SubDivisions;
			}
			set
			{
				this._SubDivisions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
		
		private void attach_SubDivisions(SubDivision entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_SubDivisions(SubDivision entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.FamilyMember")]
	public partial class FamilyMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FamilyMemberId;
		
		private int _EmployeeId;
		
		private string _Relationship;
		
		private string _FullName;
		
		private int _CountryId;
		
		private string _Address;
		
		private string _Occupation;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<MedicalRecord> _MedicalRecords;
		
		private EntitySet<Nominee> _Nominees;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFamilyMemberIdChanging(int value);
    partial void OnFamilyMemberIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnRelationshipChanging(string value);
    partial void OnRelationshipChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public FamilyMember()
		{
			this._MedicalRecords = new EntitySet<MedicalRecord>(new Action<MedicalRecord>(this.attach_MedicalRecords), new Action<MedicalRecord>(this.detach_MedicalRecords));
			this._Nominees = new EntitySet<Nominee>(new Action<Nominee>(this.attach_Nominees), new Action<Nominee>(this.detach_Nominees));
			this._Country = default(EntityRef<Country>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyMemberId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int FamilyMemberId
		{
			get
			{
				return this._FamilyMemberId;
			}
			set
			{
				if ((this._FamilyMemberId != value))
				{
					this.OnFamilyMemberIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyMemberId = value;
					this.SendPropertyChanged("FamilyMemberId");
					this.OnFamilyMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relationship", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Relationship
		{
			get
			{
				return this._Relationship;
			}
			set
			{
				if ((this._Relationship != value))
				{
					this.OnRelationshipChanging(value);
					this.SendPropertyChanging();
					this._Relationship = value;
					this.SendPropertyChanged("Relationship");
					this.OnRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FamilyMember_MedicalRecord", Storage="_MedicalRecords", ThisKey="FamilyMemberId", OtherKey="FamilyMemberId")]
		public EntitySet<MedicalRecord> MedicalRecords
		{
			get
			{
				return this._MedicalRecords;
			}
			set
			{
				this._MedicalRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FamilyMember_Nominee", Storage="_Nominees", ThisKey="FamilyMemberId", OtherKey="FamilyMemberId")]
		public EntitySet<Nominee> Nominees
		{
			get
			{
				return this._Nominees;
			}
			set
			{
				this._Nominees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_FamilyMember", Storage="_Country", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.FamilyMembers.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.FamilyMembers.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FamilyMember", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.FamilyMembers.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.FamilyMembers.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.FamilyMember = this;
		}
		
		private void detach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.FamilyMember = null;
		}
		
		private void attach_Nominees(Nominee entity)
		{
			this.SendPropertyChanging();
			entity.FamilyMember = this;
		}
		
		private void detach_Nominees(Nominee entity)
		{
			this.SendPropertyChanging();
			entity.FamilyMember = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.QualificationDivision")]
	public partial class QualificationDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QualificationDivisionId;
		
		private string _DivisionName;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Qualification> _Qualifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualificationDivisionIdChanging(int value);
    partial void OnQualificationDivisionIdChanged();
    partial void OnDivisionNameChanging(string value);
    partial void OnDivisionNameChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public QualificationDivision()
		{
			this._Qualifications = new EntitySet<Qualification>(new Action<Qualification>(this.attach_Qualifications), new Action<Qualification>(this.detach_Qualifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationDivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int QualificationDivisionId
		{
			get
			{
				return this._QualificationDivisionId;
			}
			set
			{
				if ((this._QualificationDivisionId != value))
				{
					this.OnQualificationDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._QualificationDivisionId = value;
					this.SendPropertyChanged("QualificationDivisionId");
					this.OnQualificationDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionName
		{
			get
			{
				return this._DivisionName;
			}
			set
			{
				if ((this._DivisionName != value))
				{
					this.OnDivisionNameChanging(value);
					this.SendPropertyChanging();
					this._DivisionName = value;
					this.SendPropertyChanged("DivisionName");
					this.OnDivisionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QualificationDivision_Qualification", Storage="_Qualifications", ThisKey="QualificationDivisionId", OtherKey="QualificationDivisionId")]
		public EntitySet<Qualification> Qualifications
		{
			get
			{
				return this._Qualifications;
			}
			set
			{
				this._Qualifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Qualifications(Qualification entity)
		{
			this.SendPropertyChanging();
			entity.QualificationDivision = this;
		}
		
		private void detach_Qualifications(Qualification entity)
		{
			this.SendPropertyChanging();
			entity.QualificationDivision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.TrainingType")]
	public partial class TrainingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrainingTypeId;
		
		private string _TrainingDesc;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Training> _Trainings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingTypeIdChanging(int value);
    partial void OnTrainingTypeIdChanged();
    partial void OnTrainingDescriptionChanging(string value);
    partial void OnTrainingDescriptionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public TrainingType()
		{
			this._Trainings = new EntitySet<Training>(new Action<Training>(this.attach_Trainings), new Action<Training>(this.detach_Trainings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int TrainingTypeId
		{
			get
			{
				return this._TrainingTypeId;
			}
			set
			{
				if ((this._TrainingTypeId != value))
				{
					this.OnTrainingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingTypeId = value;
					this.SendPropertyChanged("TrainingTypeId");
					this.OnTrainingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TrainingDescription
		{
			get
			{
				return this._TrainingDesc;
			}
			set
			{
				if ((this._TrainingDesc != value))
				{
					this.OnTrainingDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TrainingDesc = value;
					this.SendPropertyChanged("TrainingDescription");
					this.OnTrainingDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrainingType_Training", Storage="_Trainings", ThisKey="TrainingTypeId", OtherKey="TrainingTypeId")]
		public EntitySet<Training> Trainings
		{
			get
			{
				return this._Trainings;
			}
			set
			{
				this._Trainings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trainings(Training entity)
		{
			this.SendPropertyChanging();
			entity.TrainingType = this;
		}
		
		private void detach_Trainings(Training entity)
		{
			this.SendPropertyChanging();
			entity.TrainingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.LeaveType")]
	public partial class LeaveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveTypeId;
		
		private string _LeaveDesc;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<LeaveRecord> _LeaveRecords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnLeaveDescriptionChanging(string value);
    partial void OnLeaveDescriptionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public LeaveType()
		{
			this._LeaveRecords = new EntitySet<LeaveRecord>(new Action<LeaveRecord>(this.attach_LeaveRecords), new Action<LeaveRecord>(this.detach_LeaveRecords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LeaveDescription
		{
			get
			{
				return this._LeaveDesc;
			}
			set
			{
				if ((this._LeaveDesc != value))
				{
					this.OnLeaveDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LeaveDesc = value;
					this.SendPropertyChanged("LeaveDescription");
					this.OnLeaveDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeaveType_LeaveRecord", Storage="_LeaveRecords", ThisKey="LeaveTypeId", OtherKey="LeaveTypeId")]
		public EntitySet<LeaveRecord> LeaveRecords
		{
			get
			{
				return this._LeaveRecords;
			}
			set
			{
				this._LeaveRecords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LeaveRecords(LeaveRecord entity)
		{
			this.SendPropertyChanging();
			entity.LeaveType = this;
		}
		
		private void detach_LeaveRecords(LeaveRecord entity)
		{
			this.SendPropertyChanging();
			entity.LeaveType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryId;
		
		private string _CountryName;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<FamilyMember> _FamilyMembers;
		
		private EntitySet<Qualification> _Qualifications;
		
		private EntitySet<Training> _Trainings;
		
		private EntitySet<MedicalRecord> _MedicalRecords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Country()
		{
			this._FamilyMembers = new EntitySet<FamilyMember>(new Action<FamilyMember>(this.attach_FamilyMembers), new Action<FamilyMember>(this.detach_FamilyMembers));
			this._Qualifications = new EntitySet<Qualification>(new Action<Qualification>(this.attach_Qualifications), new Action<Qualification>(this.detach_Qualifications));
			this._Trainings = new EntitySet<Training>(new Action<Training>(this.attach_Trainings), new Action<Training>(this.detach_Trainings));
			this._MedicalRecords = new EntitySet<MedicalRecord>(new Action<MedicalRecord>(this.attach_MedicalRecords), new Action<MedicalRecord>(this.detach_MedicalRecords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_FamilyMember", Storage="_FamilyMembers", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<FamilyMember> FamilyMembers
		{
			get
			{
				return this._FamilyMembers;
			}
			set
			{
				this._FamilyMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Qualification", Storage="_Qualifications", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<Qualification> Qualifications
		{
			get
			{
				return this._Qualifications;
			}
			set
			{
				this._Qualifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Training", Storage="_Trainings", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<Training> Trainings
		{
			get
			{
				return this._Trainings;
			}
			set
			{
				this._Trainings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_MedicalRecord", Storage="_MedicalRecords", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<MedicalRecord> MedicalRecords
		{
			get
			{
				return this._MedicalRecords;
			}
			set
			{
				this._MedicalRecords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FamilyMembers(FamilyMember entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_FamilyMembers(FamilyMember entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Qualifications(Qualification entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Qualifications(Qualification entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Trainings(Training entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Trainings(Training entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.Qualification")]
	public partial class Qualification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QualificationId;
		
		private int _EmployeeId;
		
		private string _Subject;
		
		private string _Result;
		
		private string _Institute;
		
		private string _InstituteAddress;
		
		private string _StudyField;
		
		private int _CompletionYear;
		
		private System.Nullable<int> _QualificationDivisionId;
		
		private string _QualificationType;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<int> _CountryId;
		
		private EntityRef<QualificationDivision> _QualificationDivision;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualificationIdChanging(int value);
    partial void OnQualificationIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnInstituteChanging(string value);
    partial void OnInstituteChanged();
    partial void OnInstituteAddressChanging(string value);
    partial void OnInstituteAddressChanged();
    partial void OnStudyFieldChanging(string value);
    partial void OnStudyFieldChanged();
    partial void OnCompletionYearChanging(int value);
    partial void OnCompletionYearChanged();
    partial void OnQualificationDivisionIdChanging(System.Nullable<int> value);
    partial void OnQualificationDivisionIdChanged();
    partial void OnQualificationTypeChanging(string value);
    partial void OnQualificationTypeChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnCountryIdChanging(System.Nullable<int> value);
    partial void OnCountryIdChanged();
    #endregion
		
		public Qualification()
		{
			this._QualificationDivision = default(EntityRef<QualificationDivision>);
			this._Employee = default(EntityRef<Employee>);
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int QualificationId
		{
			get
			{
				return this._QualificationId;
			}
			set
			{
				if ((this._QualificationId != value))
				{
					this.OnQualificationIdChanging(value);
					this.SendPropertyChanging();
					this._QualificationId = value;
					this.SendPropertyChanged("QualificationId");
					this.OnQualificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Institute", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Institute
		{
			get
			{
				return this._Institute;
			}
			set
			{
				if ((this._Institute != value))
				{
					this.OnInstituteChanging(value);
					this.SendPropertyChanging();
					this._Institute = value;
					this.SendPropertyChanged("Institute");
					this.OnInstituteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteAddress", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string InstituteAddress
		{
			get
			{
				return this._InstituteAddress;
			}
			set
			{
				if ((this._InstituteAddress != value))
				{
					this.OnInstituteAddressChanging(value);
					this.SendPropertyChanging();
					this._InstituteAddress = value;
					this.SendPropertyChanged("InstituteAddress");
					this.OnInstituteAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyField", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string StudyField
		{
			get
			{
				return this._StudyField;
			}
			set
			{
				if ((this._StudyField != value))
				{
					this.OnStudyFieldChanging(value);
					this.SendPropertyChanging();
					this._StudyField = value;
					this.SendPropertyChanged("StudyField");
					this.OnStudyFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionYear", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CompletionYear
		{
			get
			{
				return this._CompletionYear;
			}
			set
			{
				if ((this._CompletionYear != value))
				{
					this.OnCompletionYearChanging(value);
					this.SendPropertyChanging();
					this._CompletionYear = value;
					this.SendPropertyChanged("CompletionYear");
					this.OnCompletionYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationDivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> QualificationDivisionId
		{
			get
			{
				return this._QualificationDivisionId;
			}
			set
			{
				if ((this._QualificationDivisionId != value))
				{
					if (this._QualificationDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQualificationDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._QualificationDivisionId = value;
					this.SendPropertyChanged("QualificationDivisionId");
					this.OnQualificationDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string QualificationType
		{
			get
			{
				return this._QualificationType;
			}
			set
			{
				if ((this._QualificationType != value))
				{
					this.OnQualificationTypeChanging(value);
					this.SendPropertyChanging();
					this._QualificationType = value;
					this.SendPropertyChanged("QualificationType");
					this.OnQualificationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QualificationDivision_Qualification", Storage="_QualificationDivision", ThisKey="QualificationDivisionId", OtherKey="QualificationDivisionId", IsForeignKey=true)]
		public QualificationDivision QualificationDivision
		{
			get
			{
				return this._QualificationDivision.Entity;
			}
			set
			{
				QualificationDivision previousValue = this._QualificationDivision.Entity;
				if (((previousValue != value) 
							|| (this._QualificationDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QualificationDivision.Entity = null;
						previousValue.Qualifications.Remove(this);
					}
					this._QualificationDivision.Entity = value;
					if ((value != null))
					{
						value.Qualifications.Add(this);
						this._QualificationDivisionId = value.QualificationDivisionId;
					}
					else
					{
						this._QualificationDivisionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("QualificationDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Qualification", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Qualifications.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Qualifications.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Qualification", Storage="_Country", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Qualifications.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Qualifications.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payroll.EmployeeType")]
	public partial class EmployeeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeTypeId;
		
		private string _EmployeeTypeCode;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedWorkstation;
		
		private string _ModifiedBy;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeTypeIdChanging(int value);
    partial void OnEmployeeTypeIdChanged();
    partial void OnEmployeeTypeCodeChanging(string value);
    partial void OnEmployeeTypeCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EmployeeType()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EmployeeTypeId
		{
			get
			{
				return this._EmployeeTypeId;
			}
			set
			{
				if ((this._EmployeeTypeId != value))
				{
					this.OnEmployeeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeId = value;
					this.SendPropertyChanged("EmployeeTypeId");
					this.OnEmployeeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EmployeeTypeCode
		{
			get
			{
				return this._EmployeeTypeCode;
			}
			set
			{
				if ((this._EmployeeTypeCode != value))
				{
					this.OnEmployeeTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeCode = value;
					this.SendPropertyChanged("EmployeeTypeCode");
					this.OnEmployeeTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeType_Employee", Storage="_Employees", ThisKey="EmployeeTypeId", OtherKey="EmployeeTypeId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeType = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.Training")]
	public partial class Training : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrainingId;
		
		private int _ServicePeriodId;
		
		private int _TrainingTypeId;
		
		private string _InstituteName;
		
		private string _InstituteAddress;
		
		private int _CountryId;
		
		private string _StudyField;
		
		private string _Subject;
		
		private System.DateTime _TrainingStartFrom;
		
		private System.Nullable<System.DateTime> _TrainingEndTo;
		
		private string _CourseLevel;
		
		private string _FundingAgency;
		
		private string _GovtApprovalNo;
		
		private string _Result;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<TrainingType> _TrainingType;
		
		private EntityRef<ServicePeriod> _ServicePeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingIdChanging(int value);
    partial void OnTrainingIdChanged();
    partial void OnServicePeriodIdChanging(int value);
    partial void OnServicePeriodIdChanged();
    partial void OnTrainingTypeIdChanging(int value);
    partial void OnTrainingTypeIdChanged();
    partial void OnInstituteNameChanging(string value);
    partial void OnInstituteNameChanged();
    partial void OnInstituteAddressChanging(string value);
    partial void OnInstituteAddressChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnStudyFieldChanging(string value);
    partial void OnStudyFieldChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnTrainingStartFromChanging(System.DateTime value);
    partial void OnTrainingStartFromChanged();
    partial void OnTrainingEndToChanging(System.Nullable<System.DateTime> value);
    partial void OnTrainingEndToChanged();
    partial void OnCourseLevelChanging(string value);
    partial void OnCourseLevelChanged();
    partial void OnFundingAgencyChanging(string value);
    partial void OnFundingAgencyChanged();
    partial void OnGovtApprovalNoChanging(string value);
    partial void OnGovtApprovalNoChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Training()
		{
			this._Country = default(EntityRef<Country>);
			this._TrainingType = default(EntityRef<TrainingType>);
			this._ServicePeriod = default(EntityRef<ServicePeriod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePeriodId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ServicePeriodId
		{
			get
			{
				return this._ServicePeriodId;
			}
			set
			{
				if ((this._ServicePeriodId != value))
				{
					if (this._ServicePeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicePeriodIdChanging(value);
					this.SendPropertyChanging();
					this._ServicePeriodId = value;
					this.SendPropertyChanged("ServicePeriodId");
					this.OnServicePeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingTypeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TrainingTypeId
		{
			get
			{
				return this._TrainingTypeId;
			}
			set
			{
				if ((this._TrainingTypeId != value))
				{
					if (this._TrainingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingTypeId = value;
					this.SendPropertyChanged("TrainingTypeId");
					this.OnTrainingTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string InstituteName
		{
			get
			{
				return this._InstituteName;
			}
			set
			{
				if ((this._InstituteName != value))
				{
					this.OnInstituteNameChanging(value);
					this.SendPropertyChanging();
					this._InstituteName = value;
					this.SendPropertyChanged("InstituteName");
					this.OnInstituteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteAddress", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string InstituteAddress
		{
			get
			{
				return this._InstituteAddress;
			}
			set
			{
				if ((this._InstituteAddress != value))
				{
					this.OnInstituteAddressChanging(value);
					this.SendPropertyChanging();
					this._InstituteAddress = value;
					this.SendPropertyChanged("InstituteAddress");
					this.OnInstituteAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyField", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string StudyField
		{
			get
			{
				return this._StudyField;
			}
			set
			{
				if ((this._StudyField != value))
				{
					this.OnStudyFieldChanging(value);
					this.SendPropertyChanging();
					this._StudyField = value;
					this.SendPropertyChanged("StudyField");
					this.OnStudyFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingStartFrom", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TrainingStartFrom
		{
			get
			{
				return this._TrainingStartFrom;
			}
			set
			{
				if ((this._TrainingStartFrom != value))
				{
					this.OnTrainingStartFromChanging(value);
					this.SendPropertyChanging();
					this._TrainingStartFrom = value;
					this.SendPropertyChanged("TrainingStartFrom");
					this.OnTrainingStartFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingEndTo", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TrainingEndTo
		{
			get
			{
				return this._TrainingEndTo;
			}
			set
			{
				if ((this._TrainingEndTo != value))
				{
					this.OnTrainingEndToChanging(value);
					this.SendPropertyChanging();
					this._TrainingEndTo = value;
					this.SendPropertyChanged("TrainingEndTo");
					this.OnTrainingEndToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseLevel", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CourseLevel
		{
			get
			{
				return this._CourseLevel;
			}
			set
			{
				if ((this._CourseLevel != value))
				{
					this.OnCourseLevelChanging(value);
					this.SendPropertyChanging();
					this._CourseLevel = value;
					this.SendPropertyChanged("CourseLevel");
					this.OnCourseLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundingAgency", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string FundingAgency
		{
			get
			{
				return this._FundingAgency;
			}
			set
			{
				if ((this._FundingAgency != value))
				{
					this.OnFundingAgencyChanging(value);
					this.SendPropertyChanging();
					this._FundingAgency = value;
					this.SendPropertyChanged("FundingAgency");
					this.OnFundingAgencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovtApprovalNo", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string GovtApprovalNo
		{
			get
			{
				return this._GovtApprovalNo;
			}
			set
			{
				if ((this._GovtApprovalNo != value))
				{
					this.OnGovtApprovalNoChanging(value);
					this.SendPropertyChanging();
					this._GovtApprovalNo = value;
					this.SendPropertyChanged("GovtApprovalNo");
					this.OnGovtApprovalNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Training", Storage="_Country", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Trainings.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Trainings.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrainingType_Training", Storage="_TrainingType", ThisKey="TrainingTypeId", OtherKey="TrainingTypeId", IsForeignKey=true)]
		public TrainingType TrainingType
		{
			get
			{
				return this._TrainingType.Entity;
			}
			set
			{
				TrainingType previousValue = this._TrainingType.Entity;
				if (((previousValue != value) 
							|| (this._TrainingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrainingType.Entity = null;
						previousValue.Trainings.Remove(this);
					}
					this._TrainingType.Entity = value;
					if ((value != null))
					{
						value.Trainings.Add(this);
						this._TrainingTypeId = value.TrainingTypeId;
					}
					else
					{
						this._TrainingTypeId = default(int);
					}
					this.SendPropertyChanged("TrainingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePeriod_Training", Storage="_ServicePeriod", ThisKey="ServicePeriodId", OtherKey="ServicePeriodId", IsForeignKey=true)]
		public ServicePeriod ServicePeriod
		{
			get
			{
				return this._ServicePeriod.Entity;
			}
			set
			{
				ServicePeriod previousValue = this._ServicePeriod.Entity;
				if (((previousValue != value) 
							|| (this._ServicePeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePeriod.Entity = null;
						previousValue.Trainings.Remove(this);
					}
					this._ServicePeriod.Entity = value;
					if ((value != null))
					{
						value.Trainings.Add(this);
						this._ServicePeriodId = value.ServicePeriodId;
					}
					else
					{
						this._ServicePeriodId = default(int);
					}
					this.SendPropertyChanged("ServicePeriod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.MedicalRecord")]
	public partial class MedicalRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MedicalRecordId;
		
		private int _ServicePeriodId;
		
		private System.Nullable<int> _FamilyMemberId;
		
		private string _ReferalNo;
		
		private System.Nullable<decimal> _GrantedAmount;
		
		private System.Nullable<decimal> _AdvanceAdjusted;
		
		private string _HospitalName;
		
		private string _HospitalAddress;
		
		private int _CountryId;
		
		private string _OfficeOrderNo;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private string _CashMemoNo;
		
		private EntityRef<FamilyMember> _FamilyMember;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<ServicePeriod> _ServicePeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicalRecordIdChanging(int value);
    partial void OnMedicalRecordIdChanged();
    partial void OnServicePeriodIdChanging(int value);
    partial void OnServicePeriodIdChanged();
    partial void OnFamilyMemberIdChanging(System.Nullable<int> value);
    partial void OnFamilyMemberIdChanged();
    partial void OnReferalNoChanging(string value);
    partial void OnReferalNoChanged();
    partial void OnGrantedAmountChanging(System.Nullable<decimal> value);
    partial void OnGrantedAmountChanged();
    partial void OnAdvanceAdjustedChanging(System.Nullable<decimal> value);
    partial void OnAdvanceAdjustedChanged();
    partial void OnHospitalNameChanging(string value);
    partial void OnHospitalNameChanged();
    partial void OnHospitalAddressChanging(string value);
    partial void OnHospitalAddressChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnOfficeOrderNoChanging(string value);
    partial void OnOfficeOrderNoChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnCashMemoNoChanging(string value);
    partial void OnCashMemoNoChanged();
    #endregion
		
		public MedicalRecord()
		{
			this._FamilyMember = default(EntityRef<FamilyMember>);
			this._Country = default(EntityRef<Country>);
			this._ServicePeriod = default(EntityRef<ServicePeriod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalRecordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int MedicalRecordId
		{
			get
			{
				return this._MedicalRecordId;
			}
			set
			{
				if ((this._MedicalRecordId != value))
				{
					this.OnMedicalRecordIdChanging(value);
					this.SendPropertyChanging();
					this._MedicalRecordId = value;
					this.SendPropertyChanged("MedicalRecordId");
					this.OnMedicalRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePeriodId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ServicePeriodId
		{
			get
			{
				return this._ServicePeriodId;
			}
			set
			{
				if ((this._ServicePeriodId != value))
				{
					if (this._ServicePeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicePeriodIdChanging(value);
					this.SendPropertyChanging();
					this._ServicePeriodId = value;
					this.SendPropertyChanged("ServicePeriodId");
					this.OnServicePeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyMemberId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FamilyMemberId
		{
			get
			{
				return this._FamilyMemberId;
			}
			set
			{
				if ((this._FamilyMemberId != value))
				{
					if (this._FamilyMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyMemberIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyMemberId = value;
					this.SendPropertyChanged("FamilyMemberId");
					this.OnFamilyMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferalNo", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ReferalNo
		{
			get
			{
				return this._ReferalNo;
			}
			set
			{
				if ((this._ReferalNo != value))
				{
					this.OnReferalNoChanging(value);
					this.SendPropertyChanging();
					this._ReferalNo = value;
					this.SendPropertyChanged("ReferalNo");
					this.OnReferalNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrantedAmount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> GrantedAmount
		{
			get
			{
				return this._GrantedAmount;
			}
			set
			{
				if ((this._GrantedAmount != value))
				{
					this.OnGrantedAmountChanging(value);
					this.SendPropertyChanging();
					this._GrantedAmount = value;
					this.SendPropertyChanged("GrantedAmount");
					this.OnGrantedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceAdjusted", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AdvanceAdjusted
		{
			get
			{
				return this._AdvanceAdjusted;
			}
			set
			{
				if ((this._AdvanceAdjusted != value))
				{
					this.OnAdvanceAdjustedChanging(value);
					this.SendPropertyChanging();
					this._AdvanceAdjusted = value;
					this.SendPropertyChanged("AdvanceAdjusted");
					this.OnAdvanceAdjustedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HospitalName
		{
			get
			{
				return this._HospitalName;
			}
			set
			{
				if ((this._HospitalName != value))
				{
					this.OnHospitalNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalName = value;
					this.SendPropertyChanged("HospitalName");
					this.OnHospitalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalAddress", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string HospitalAddress
		{
			get
			{
				return this._HospitalAddress;
			}
			set
			{
				if ((this._HospitalAddress != value))
				{
					this.OnHospitalAddressChanging(value);
					this.SendPropertyChanging();
					this._HospitalAddress = value;
					this.SendPropertyChanged("HospitalAddress");
					this.OnHospitalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeOrderNo", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string OfficeOrderNo
		{
			get
			{
				return this._OfficeOrderNo;
			}
			set
			{
				if ((this._OfficeOrderNo != value))
				{
					this.OnOfficeOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OfficeOrderNo = value;
					this.SendPropertyChanged("OfficeOrderNo");
					this.OnOfficeOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashMemoNo", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string CashMemoNo
		{
			get
			{
				return this._CashMemoNo;
			}
			set
			{
				if ((this._CashMemoNo != value))
				{
					this.OnCashMemoNoChanging(value);
					this.SendPropertyChanging();
					this._CashMemoNo = value;
					this.SendPropertyChanged("CashMemoNo");
					this.OnCashMemoNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FamilyMember_MedicalRecord", Storage="_FamilyMember", ThisKey="FamilyMemberId", OtherKey="FamilyMemberId", IsForeignKey=true)]
		public FamilyMember FamilyMember
		{
			get
			{
				return this._FamilyMember.Entity;
			}
			set
			{
				FamilyMember previousValue = this._FamilyMember.Entity;
				if (((previousValue != value) 
							|| (this._FamilyMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FamilyMember.Entity = null;
						previousValue.MedicalRecords.Remove(this);
					}
					this._FamilyMember.Entity = value;
					if ((value != null))
					{
						value.MedicalRecords.Add(this);
						this._FamilyMemberId = value.FamilyMemberId;
					}
					else
					{
						this._FamilyMemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FamilyMember");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_MedicalRecord", Storage="_Country", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.MedicalRecords.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.MedicalRecords.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePeriod_MedicalRecord", Storage="_ServicePeriod", ThisKey="ServicePeriodId", OtherKey="ServicePeriodId", IsForeignKey=true)]
		public ServicePeriod ServicePeriod
		{
			get
			{
				return this._ServicePeriod.Entity;
			}
			set
			{
				ServicePeriod previousValue = this._ServicePeriod.Entity;
				if (((previousValue != value) 
							|| (this._ServicePeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePeriod.Entity = null;
						previousValue.MedicalRecords.Remove(this);
					}
					this._ServicePeriod.Entity = value;
					if ((value != null))
					{
						value.MedicalRecords.Add(this);
						this._ServicePeriodId = value.ServicePeriodId;
					}
					else
					{
						this._ServicePeriodId = default(int);
					}
					this.SendPropertyChanged("ServicePeriod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payroll.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private bool _IsForeigner;
		
		private System.Nullable<int> _EmployeeTypeId;
		
		private string _EmployeeCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _JoiningDate;
		
		private string _HomeTown;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _Gender;
		
		private string _ParentOrganization;
		
		private string _Designation;
		
		private System.Nullable<int> _DivisionId;
		
		private string _CitizenCardNo;
		
		private System.Nullable<decimal> _BasicSalary;
		
		private string _BankName;
		
		private string _BankPlace;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private System.Data.Linq.Binary _Version;
		
		private string _ModifiedWorkstation;
		
		private string _IdentificationMark;
		
		private System.Nullable<int> _Height;
		
		private string _CadreNo;
		
		private string _Remarks;
		
		private System.Nullable<int> _BloodGroupId;
		
		private System.Nullable<int> _EmployeeStatusId;
		
		private System.Nullable<int> _MaritalStatusId;
		
		private string _Religion;
		
		private string _LeavingReason;
		
		private string _RelieveOrderNo;
		
		private System.Nullable<System.DateTime> _RelieveOrderDate;
		
		private System.Nullable<System.DateTime> _DateOfRelieve;
		
		private System.Nullable<int> _OfficeId;
		
		private System.Nullable<int> _SubDivisionId;
		
		private System.Nullable<System.DateTime> _ProbationEndDate;
		
		private System.Nullable<System.DateTime> _ACRDate;
		
		private string _BankAccountNo;
		
		private string _GISAccountNumber;
		
		private string _GPFAccountNo;
		
		private string _BankLoanAccountNo;
		
		private string _NPPFPNo;
		
		private string _Tpn;
		
		private string _GISGroup;
		
		private string _BDFCAccountNo;
		
		private System.Nullable<int> _Grade;
		
		private string _EmployeeNumber;
		
		private string _NPPFType;
		
		private string _PostedAt;
		
		private System.Nullable<int> _StationId;
		
		private System.Nullable<int> _BankId;
		
		private EntitySet<FamilyMember> _FamilyMembers;
		
		private EntitySet<Qualification> _Qualifications;
		
		private EntitySet<ServicePeriod> _ServicePeriods;
		
		private EntitySet<Nominee> _Nominees;
		
		private EntitySet<EmployeeGrant> _EmployeeGrants;
		
		private EntityRef<BloodGroup> _BloodGroup;
		
		private EntityRef<EmployeeStatus> _EmployeeStatus;
		
		private EntityRef<EmployeeType> _EmployeeType;
		
		private EntityRef<MaritalStatus> _MaritalStatus;
		
		private EntityRef<Division> _Division;
		
		private EntityRef<SubDivision> _SubDivision;
		
		private EntityRef<Office> _Office;
		
		private EntityRef<Station> _Station;
		
		private EntityRef<Bank> _Bank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnIsBhutaneseChanging(bool value);
    partial void OnIsBhutaneseChanged();
    partial void OnEmployeeTypeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeTypeIdChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnJoiningDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJoiningDateChanged();
    partial void OnHomeTownChanging(string value);
    partial void OnHomeTownChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnParentOrganizationChanging(string value);
    partial void OnParentOrganizationChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    partial void OnCitizenCardNoChanging(string value);
    partial void OnCitizenCardNoChanged();
    partial void OnBasicSalaryChanging(System.Nullable<decimal> value);
    partial void OnBasicSalaryChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankPlaceChanging(string value);
    partial void OnBankPlaceChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnIdentificationMarkChanging(string value);
    partial void OnIdentificationMarkChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnFileindexNoChanging(string value);
    partial void OnFileindexNoChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnBloodGroupIdChanging(System.Nullable<int> value);
    partial void OnBloodGroupIdChanged();
    partial void OnEmployeeStatusIdChanging(System.Nullable<int> value);
    partial void OnEmployeeStatusIdChanged();
    partial void OnMaritalStatusIdChanging(System.Nullable<int> value);
    partial void OnMaritalStatusIdChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnLeavingReasonChanging(string value);
    partial void OnLeavingReasonChanged();
    partial void OnRelieveOrderNoChanging(string value);
    partial void OnRelieveOrderNoChanged();
    partial void OnRelieveOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRelieveOrderDateChanged();
    partial void OnDateOfRelieveChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfRelieveChanged();
    partial void OnOfficeIdChanging(System.Nullable<int> value);
    partial void OnOfficeIdChanged();
    partial void OnSubDivisionIdChanging(System.Nullable<int> value);
    partial void OnSubDivisionIdChanged();
    partial void OnProbationEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProbationEndDateChanged();
    partial void OnACRDateChanging(System.Nullable<System.DateTime> value);
    partial void OnACRDateChanged();
    partial void OnBankAccountNoChanging(string value);
    partial void OnBankAccountNoChanged();
    partial void OnGISAccountNumberChanging(string value);
    partial void OnGISAccountNumberChanged();
    partial void OnGPFAccountNoChanging(string value);
    partial void OnGPFAccountNoChanged();
    partial void OnBankLoanAccountNoChanging(string value);
    partial void OnBankLoanAccountNoChanged();
    partial void OnNPPFPNoChanging(string value);
    partial void OnNPPFPNoChanged();
    partial void OnTpnChanging(string value);
    partial void OnTpnChanged();
    partial void OnGISGroupChanging(string value);
    partial void OnGISGroupChanged();
    partial void OnBDFCAccountNoChanging(string value);
    partial void OnBDFCAccountNoChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnEmployeeNumberChanging(string value);
    partial void OnEmployeeNumberChanged();
    partial void OnNPPFTypeChanging(string value);
    partial void OnNPPFTypeChanged();
    partial void OnPostedAtChanging(string value);
    partial void OnPostedAtChanged();
    partial void OnStationIdChanging(System.Nullable<int> value);
    partial void OnStationIdChanged();
    partial void OnBankIdChanging(System.Nullable<int> value);
    partial void OnBankIdChanged();
    #endregion
		
		public Employee()
		{
			this._FamilyMembers = new EntitySet<FamilyMember>(new Action<FamilyMember>(this.attach_FamilyMembers), new Action<FamilyMember>(this.detach_FamilyMembers));
			this._Qualifications = new EntitySet<Qualification>(new Action<Qualification>(this.attach_Qualifications), new Action<Qualification>(this.detach_Qualifications));
			this._ServicePeriods = new EntitySet<ServicePeriod>(new Action<ServicePeriod>(this.attach_ServicePeriods), new Action<ServicePeriod>(this.detach_ServicePeriods));
			this._Nominees = new EntitySet<Nominee>(new Action<Nominee>(this.attach_Nominees), new Action<Nominee>(this.detach_Nominees));
			this._EmployeeGrants = new EntitySet<EmployeeGrant>(new Action<EmployeeGrant>(this.attach_EmployeeGrants), new Action<EmployeeGrant>(this.detach_EmployeeGrants));
			this._BloodGroup = default(EntityRef<BloodGroup>);
			this._EmployeeStatus = default(EntityRef<EmployeeStatus>);
			this._EmployeeType = default(EntityRef<EmployeeType>);
			this._MaritalStatus = default(EntityRef<MaritalStatus>);
			this._Division = default(EntityRef<Division>);
			this._SubDivision = default(EntityRef<SubDivision>);
			this._Office = default(EntityRef<Office>);
			this._Station = default(EntityRef<Station>);
			this._Bank = default(EntityRef<Bank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeigner", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsBhutanese
		{
			get
			{
				return this._IsForeigner;
			}
			set
			{
				if ((this._IsForeigner != value))
				{
					this.OnIsBhutaneseChanging(value);
					this.SendPropertyChanging();
					this._IsForeigner = value;
					this.SendPropertyChanged("IsBhutanese");
					this.OnIsBhutaneseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EmployeeTypeId
		{
			get
			{
				return this._EmployeeTypeId;
			}
			set
			{
				if ((this._EmployeeTypeId != value))
				{
					if (this._EmployeeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeId = value;
					this.SendPropertyChanged("EmployeeTypeId");
					this.OnEmployeeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoiningDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> JoiningDate
		{
			get
			{
				return this._JoiningDate;
			}
			set
			{
				if ((this._JoiningDate != value))
				{
					this.OnJoiningDateChanging(value);
					this.SendPropertyChanging();
					this._JoiningDate = value;
					this.SendPropertyChanged("JoiningDate");
					this.OnJoiningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeTown", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string HomeTown
		{
			get
			{
				return this._HomeTown;
			}
			set
			{
				if ((this._HomeTown != value))
				{
					this.OnHomeTownChanging(value);
					this.SendPropertyChanging();
					this._HomeTown = value;
					this.SendPropertyChanged("HomeTown");
					this.OnHomeTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentOrganization", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ParentOrganization
		{
			get
			{
				return this._ParentOrganization;
			}
			set
			{
				if ((this._ParentOrganization != value))
				{
					this.OnParentOrganizationChanging(value);
					this.SendPropertyChanging();
					this._ParentOrganization = value;
					this.SendPropertyChanged("ParentOrganization");
					this.OnParentOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitizenCardNo", DbType="NVarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string CitizenCardNo
		{
			get
			{
				return this._CitizenCardNo;
			}
			set
			{
				if ((this._CitizenCardNo != value))
				{
					this.OnCitizenCardNoChanging(value);
					this.SendPropertyChanging();
					this._CitizenCardNo = value;
					this.SendPropertyChanged("CitizenCardNo");
					this.OnCitizenCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicSalary", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BasicSalary
		{
			get
			{
				return this._BasicSalary;
			}
			set
			{
				if ((this._BasicSalary != value))
				{
					this.OnBasicSalaryChanging(value);
					this.SendPropertyChanging();
					this._BasicSalary = value;
					this.SendPropertyChanged("BasicSalary");
					this.OnBasicSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankPlace", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string BankPlace
		{
			get
			{
				return this._BankPlace;
			}
			set
			{
				if ((this._BankPlace != value))
				{
					this.OnBankPlaceChanging(value);
					this.SendPropertyChanging();
					this._BankPlace = value;
					this.SendPropertyChanged("BankPlace");
					this.OnBankPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationMark", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string IdentificationMark
		{
			get
			{
				return this._IdentificationMark;
			}
			set
			{
				if ((this._IdentificationMark != value))
				{
					this.OnIdentificationMarkChanging(value);
					this.SendPropertyChanging();
					this._IdentificationMark = value;
					this.SendPropertyChanged("IdentificationMark");
					this.OnIdentificationMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CadreNo", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string FileindexNo
		{
			get
			{
				return this._CadreNo;
			}
			set
			{
				if ((this._CadreNo != value))
				{
					this.OnFileindexNoChanging(value);
					this.SendPropertyChanging();
					this._CadreNo = value;
					this.SendPropertyChanged("FileindexNo");
					this.OnFileindexNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodGroupId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BloodGroupId
		{
			get
			{
				return this._BloodGroupId;
			}
			set
			{
				if ((this._BloodGroupId != value))
				{
					if (this._BloodGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBloodGroupIdChanging(value);
					this.SendPropertyChanging();
					this._BloodGroupId = value;
					this.SendPropertyChanged("BloodGroupId");
					this.OnBloodGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeStatusId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EmployeeStatusId
		{
			get
			{
				return this._EmployeeStatusId;
			}
			set
			{
				if ((this._EmployeeStatusId != value))
				{
					if (this._EmployeeStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeStatusIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeStatusId = value;
					this.SendPropertyChanged("EmployeeStatusId");
					this.OnEmployeeStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatusId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaritalStatusId
		{
			get
			{
				return this._MaritalStatusId;
			}
			set
			{
				if ((this._MaritalStatusId != value))
				{
					if (this._MaritalStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaritalStatusIdChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatusId = value;
					this.SendPropertyChanged("MaritalStatusId");
					this.OnMaritalStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeavingReason", DbType="NVarChar(50)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LeavingReason
		{
			get
			{
				return this._LeavingReason;
			}
			set
			{
				if ((this._LeavingReason != value))
				{
					this.OnLeavingReasonChanging(value);
					this.SendPropertyChanging();
					this._LeavingReason = value;
					this.SendPropertyChanged("LeavingReason");
					this.OnLeavingReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelieveOrderNo", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string RelieveOrderNo
		{
			get
			{
				return this._RelieveOrderNo;
			}
			set
			{
				if ((this._RelieveOrderNo != value))
				{
					this.OnRelieveOrderNoChanging(value);
					this.SendPropertyChanging();
					this._RelieveOrderNo = value;
					this.SendPropertyChanged("RelieveOrderNo");
					this.OnRelieveOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelieveOrderDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RelieveOrderDate
		{
			get
			{
				return this._RelieveOrderDate;
			}
			set
			{
				if ((this._RelieveOrderDate != value))
				{
					this.OnRelieveOrderDateChanging(value);
					this.SendPropertyChanging();
					this._RelieveOrderDate = value;
					this.SendPropertyChanged("RelieveOrderDate");
					this.OnRelieveOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfRelieve", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateOfRelieve
		{
			get
			{
				return this._DateOfRelieve;
			}
			set
			{
				if ((this._DateOfRelieve != value))
				{
					this.OnDateOfRelieveChanging(value);
					this.SendPropertyChanging();
					this._DateOfRelieve = value;
					this.SendPropertyChanged("DateOfRelieve");
					this.OnDateOfRelieveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> OfficeId
		{
			get
			{
				return this._OfficeId;
			}
			set
			{
				if ((this._OfficeId != value))
				{
					if (this._Office.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfficeIdChanging(value);
					this.SendPropertyChanging();
					this._OfficeId = value;
					this.SendPropertyChanged("OfficeId");
					this.OnOfficeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SubDivisionId
		{
			get
			{
				return this._SubDivisionId;
			}
			set
			{
				if ((this._SubDivisionId != value))
				{
					if (this._SubDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._SubDivisionId = value;
					this.SendPropertyChanged("SubDivisionId");
					this.OnSubDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbationEndDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ProbationEndDate
		{
			get
			{
				return this._ProbationEndDate;
			}
			set
			{
				if ((this._ProbationEndDate != value))
				{
					this.OnProbationEndDateChanging(value);
					this.SendPropertyChanging();
					this._ProbationEndDate = value;
					this.SendPropertyChanged("ProbationEndDate");
					this.OnProbationEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACRDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ACRDate
		{
			get
			{
				return this._ACRDate;
			}
			set
			{
				if ((this._ACRDate != value))
				{
					this.OnACRDateChanging(value);
					this.SendPropertyChanging();
					this._ACRDate = value;
					this.SendPropertyChanged("ACRDate");
					this.OnACRDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountNo", DbType="NVarChar(30)")]
		public string BankAccountNo
		{
			get
			{
				return this._BankAccountNo;
			}
			set
			{
				if ((this._BankAccountNo != value))
				{
					this.OnBankAccountNoChanging(value);
					this.SendPropertyChanging();
					this._BankAccountNo = value;
					this.SendPropertyChanged("BankAccountNo");
					this.OnBankAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GISAccountNumber", DbType="NVarChar(20)")]
		public string GISAccountNumber
		{
			get
			{
				return this._GISAccountNumber;
			}
			set
			{
				if ((this._GISAccountNumber != value))
				{
					this.OnGISAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._GISAccountNumber = value;
					this.SendPropertyChanged("GISAccountNumber");
					this.OnGISAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPFAccountNo", DbType="NVarChar(30)")]
		public string GPFAccountNo
		{
			get
			{
				return this._GPFAccountNo;
			}
			set
			{
				if ((this._GPFAccountNo != value))
				{
					this.OnGPFAccountNoChanging(value);
					this.SendPropertyChanging();
					this._GPFAccountNo = value;
					this.SendPropertyChanged("GPFAccountNo");
					this.OnGPFAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankLoanAccountNo", DbType="NVarChar(30)")]
		public string BankLoanAccountNo
		{
			get
			{
				return this._BankLoanAccountNo;
			}
			set
			{
				if ((this._BankLoanAccountNo != value))
				{
					this.OnBankLoanAccountNoChanging(value);
					this.SendPropertyChanging();
					this._BankLoanAccountNo = value;
					this.SendPropertyChanged("BankLoanAccountNo");
					this.OnBankLoanAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPPFPNo", DbType="NVarChar(30)")]
		public string NPPFPNo
		{
			get
			{
				return this._NPPFPNo;
			}
			set
			{
				if ((this._NPPFPNo != value))
				{
					this.OnNPPFPNoChanging(value);
					this.SendPropertyChanging();
					this._NPPFPNo = value;
					this.SendPropertyChanged("NPPFPNo");
					this.OnNPPFPNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tpn", DbType="NVarChar(15)")]
		public string Tpn
		{
			get
			{
				return this._Tpn;
			}
			set
			{
				if ((this._Tpn != value))
				{
					this.OnTpnChanging(value);
					this.SendPropertyChanging();
					this._Tpn = value;
					this.SendPropertyChanged("Tpn");
					this.OnTpnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GISGroup", DbType="NVarChar(5)")]
		public string GISGroup
		{
			get
			{
				return this._GISGroup;
			}
			set
			{
				if ((this._GISGroup != value))
				{
					this.OnGISGroupChanging(value);
					this.SendPropertyChanging();
					this._GISGroup = value;
					this.SendPropertyChanged("GISGroup");
					this.OnGISGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDFCAccountNo", DbType="NVarChar(30)")]
		public string BDFCAccountNo
		{
			get
			{
				return this._BDFCAccountNo;
			}
			set
			{
				if ((this._BDFCAccountNo != value))
				{
					this.OnBDFCAccountNoChanging(value);
					this.SendPropertyChanging();
					this._BDFCAccountNo = value;
					this.SendPropertyChanged("BDFCAccountNo");
					this.OnBDFCAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNumber", DbType="NVarChar(20)")]
		public string EmployeeNumber
		{
			get
			{
				return this._EmployeeNumber;
			}
			set
			{
				if ((this._EmployeeNumber != value))
				{
					this.OnEmployeeNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNumber = value;
					this.SendPropertyChanged("EmployeeNumber");
					this.OnEmployeeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPPFType", CanBeNull=false)]
		public string NPPFType
		{
			get
			{
				return this._NPPFType;
			}
			set
			{
				if ((this._NPPFType != value))
				{
					this.OnNPPFTypeChanging(value);
					this.SendPropertyChanging();
					this._NPPFType = value;
					this.SendPropertyChanged("NPPFType");
					this.OnNPPFTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedAt", CanBeNull=false)]
		public string PostedAt
		{
			get
			{
				return this._PostedAt;
			}
			set
			{
				if ((this._PostedAt != value))
				{
					this.OnPostedAtChanging(value);
					this.SendPropertyChanging();
					this._PostedAt = value;
					this.SendPropertyChanged("PostedAt");
					this.OnPostedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId")]
		public System.Nullable<int> StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					if (this._Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId")]
		public System.Nullable<int> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					if (this._Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_FamilyMember", Storage="_FamilyMembers", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<FamilyMember> FamilyMembers
		{
			get
			{
				return this._FamilyMembers;
			}
			set
			{
				this._FamilyMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Qualification", Storage="_Qualifications", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<Qualification> Qualifications
		{
			get
			{
				return this._Qualifications;
			}
			set
			{
				this._Qualifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServicePeriod", Storage="_ServicePeriods", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<ServicePeriod> ServicePeriods
		{
			get
			{
				return this._ServicePeriods;
			}
			set
			{
				this._ServicePeriods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Nominee", Storage="_Nominees", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<Nominee> Nominees
		{
			get
			{
				return this._Nominees;
			}
			set
			{
				this._Nominees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeGrant", Storage="_EmployeeGrants", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<EmployeeGrant> EmployeeGrants
		{
			get
			{
				return this._EmployeeGrants;
			}
			set
			{
				this._EmployeeGrants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BloodGroup_Employee", Storage="_BloodGroup", ThisKey="BloodGroupId", OtherKey="BloodGroupId", IsForeignKey=true)]
		public BloodGroup BloodGroup
		{
			get
			{
				return this._BloodGroup.Entity;
			}
			set
			{
				BloodGroup previousValue = this._BloodGroup.Entity;
				if (((previousValue != value) 
							|| (this._BloodGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BloodGroup.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._BloodGroup.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._BloodGroupId = value.BloodGroupId;
					}
					else
					{
						this._BloodGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BloodGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeStatus_Employee", Storage="_EmployeeStatus", ThisKey="EmployeeStatusId", OtherKey="EmployeeStatusId", IsForeignKey=true)]
		public EmployeeStatus EmployeeStatus
		{
			get
			{
				return this._EmployeeStatus.Entity;
			}
			set
			{
				EmployeeStatus previousValue = this._EmployeeStatus.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeStatus.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._EmployeeStatus.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._EmployeeStatusId = value.EmployeeStatusId;
					}
					else
					{
						this._EmployeeStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EmployeeStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeType_Employee", Storage="_EmployeeType", ThisKey="EmployeeTypeId", OtherKey="EmployeeTypeId", IsForeignKey=true)]
		public EmployeeType EmployeeType
		{
			get
			{
				return this._EmployeeType.Entity;
			}
			set
			{
				EmployeeType previousValue = this._EmployeeType.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeType.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._EmployeeType.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._EmployeeTypeId = value.EmployeeTypeId;
					}
					else
					{
						this._EmployeeTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EmployeeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaritalStatus_Employee", Storage="_MaritalStatus", ThisKey="MaritalStatusId", OtherKey="MaritalStatusId", IsForeignKey=true)]
		public MaritalStatus MaritalStatus
		{
			get
			{
				return this._MaritalStatus.Entity;
			}
			set
			{
				MaritalStatus previousValue = this._MaritalStatus.Entity;
				if (((previousValue != value) 
							|| (this._MaritalStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaritalStatus.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._MaritalStatus.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._MaritalStatusId = value.MaritalStatusId;
					}
					else
					{
						this._MaritalStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MaritalStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Employee", Storage="_Division", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DivisionId = value.DivisionId;
					}
					else
					{
						this._DivisionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubDivision_Employee", Storage="_SubDivision", ThisKey="SubDivisionId", OtherKey="SubDivisionId", IsForeignKey=true)]
		public SubDivision SubDivision
		{
			get
			{
				return this._SubDivision.Entity;
			}
			set
			{
				SubDivision previousValue = this._SubDivision.Entity;
				if (((previousValue != value) 
							|| (this._SubDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubDivision.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._SubDivision.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._SubDivisionId = value.SubDivisionId;
					}
					else
					{
						this._SubDivisionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SubDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Employee", Storage="_Office", ThisKey="OfficeId", OtherKey="OfficeId", IsForeignKey=true)]
		public Office Office
		{
			get
			{
				return this._Office.Entity;
			}
			set
			{
				Office previousValue = this._Office.Entity;
				if (((previousValue != value) 
							|| (this._Office.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Office.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Office.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._OfficeId = value.OfficeId;
					}
					else
					{
						this._OfficeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Office");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Employee", Storage="_Station", ThisKey="StationId", OtherKey="StationId", IsForeignKey=true)]
		public Station Station
		{
			get
			{
				return this._Station.Entity;
			}
			set
			{
				Station previousValue = this._Station.Entity;
				if (((previousValue != value) 
							|| (this._Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Station.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Station.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._StationId = value.StationId;
					}
					else
					{
						this._StationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Station");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Employee", Storage="_Bank", ThisKey="BankId", OtherKey="BankId", IsForeignKey=true)]
		public Bank Bank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				Bank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._BankId = value.BankId;
					}
					else
					{
						this._BankId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FamilyMembers(FamilyMember entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_FamilyMembers(FamilyMember entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Qualifications(Qualification entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Qualifications(Qualification entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_ServicePeriods(ServicePeriod entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_ServicePeriods(ServicePeriod entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Nominees(Nominee entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Nominees(Nominee entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeeGrants(EmployeeGrant entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeGrants(EmployeeGrant entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.LeaveRecord")]
	public partial class LeaveRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveRecordId;
		
		private int _ServicePeriodId;
		
		private int _LeaveTypeId;
		
		private System.DateTime _LeaveStartFrom;
		
		private System.Nullable<System.DateTime> _LeaveEndTo;
		
		private System.Nullable<int> _NoOfLeaves;
		
		private string _LeaveOrderNo;
		
		private string _MedicalCertificateNo;
		
		private string _CertificateIssuingAuthority;
		
		private string _LeavePurpose;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<System.DateTime> _LeaveOrderDate;
		
		private EntityRef<LeaveType> _LeaveType;
		
		private EntityRef<ServicePeriod> _ServicePeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveRecordIdChanging(int value);
    partial void OnLeaveRecordIdChanged();
    partial void OnServicePeriodIdChanging(int value);
    partial void OnServicePeriodIdChanged();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnLeaveStartFromChanging(System.DateTime value);
    partial void OnLeaveStartFromChanged();
    partial void OnLeaveEndToChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveEndToChanged();
    partial void OnNoOfLeavesChanging(System.Nullable<int> value);
    partial void OnNoOfLeavesChanged();
    partial void OnLeaveOrderNoChanging(string value);
    partial void OnLeaveOrderNoChanged();
    partial void OnMedicalCertificateNoChanging(string value);
    partial void OnMedicalCertificateNoChanged();
    partial void OnCertificateIssuingAuthorityChanging(string value);
    partial void OnCertificateIssuingAuthorityChanged();
    partial void OnLeavePurposeChanging(string value);
    partial void OnLeavePurposeChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnLeaveOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveOrderDateChanged();
    #endregion
		
		public LeaveRecord()
		{
			this._LeaveType = default(EntityRef<LeaveType>);
			this._ServicePeriod = default(EntityRef<ServicePeriod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveRecordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int LeaveRecordId
		{
			get
			{
				return this._LeaveRecordId;
			}
			set
			{
				if ((this._LeaveRecordId != value))
				{
					this.OnLeaveRecordIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveRecordId = value;
					this.SendPropertyChanged("LeaveRecordId");
					this.OnLeaveRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePeriodId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ServicePeriodId
		{
			get
			{
				return this._ServicePeriodId;
			}
			set
			{
				if ((this._ServicePeriodId != value))
				{
					if (this._ServicePeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicePeriodIdChanging(value);
					this.SendPropertyChanging();
					this._ServicePeriodId = value;
					this.SendPropertyChanged("ServicePeriodId");
					this.OnServicePeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					if (this._LeaveType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveStartFrom", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LeaveStartFrom
		{
			get
			{
				return this._LeaveStartFrom;
			}
			set
			{
				if ((this._LeaveStartFrom != value))
				{
					this.OnLeaveStartFromChanging(value);
					this.SendPropertyChanging();
					this._LeaveStartFrom = value;
					this.SendPropertyChanged("LeaveStartFrom");
					this.OnLeaveStartFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveEndTo", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LeaveEndTo
		{
			get
			{
				return this._LeaveEndTo;
			}
			set
			{
				if ((this._LeaveEndTo != value))
				{
					this.OnLeaveEndToChanging(value);
					this.SendPropertyChanging();
					this._LeaveEndTo = value;
					this.SendPropertyChanged("LeaveEndTo");
					this.OnLeaveEndToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfLeaves", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NoOfLeaves
		{
			get
			{
				return this._NoOfLeaves;
			}
			set
			{
				if ((this._NoOfLeaves != value))
				{
					this.OnNoOfLeavesChanging(value);
					this.SendPropertyChanging();
					this._NoOfLeaves = value;
					this.SendPropertyChanged("NoOfLeaves");
					this.OnNoOfLeavesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOrderNo", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string LeaveOrderNo
		{
			get
			{
				return this._LeaveOrderNo;
			}
			set
			{
				if ((this._LeaveOrderNo != value))
				{
					this.OnLeaveOrderNoChanging(value);
					this.SendPropertyChanging();
					this._LeaveOrderNo = value;
					this.SendPropertyChanged("LeaveOrderNo");
					this.OnLeaveOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCertificateNo", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string MedicalCertificateNo
		{
			get
			{
				return this._MedicalCertificateNo;
			}
			set
			{
				if ((this._MedicalCertificateNo != value))
				{
					this.OnMedicalCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._MedicalCertificateNo = value;
					this.SendPropertyChanged("MedicalCertificateNo");
					this.OnMedicalCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateIssuingAuthority", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CertificateIssuingAuthority
		{
			get
			{
				return this._CertificateIssuingAuthority;
			}
			set
			{
				if ((this._CertificateIssuingAuthority != value))
				{
					this.OnCertificateIssuingAuthorityChanging(value);
					this.SendPropertyChanging();
					this._CertificateIssuingAuthority = value;
					this.SendPropertyChanged("CertificateIssuingAuthority");
					this.OnCertificateIssuingAuthorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeavePurpose", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LeavePurpose
		{
			get
			{
				return this._LeavePurpose;
			}
			set
			{
				if ((this._LeavePurpose != value))
				{
					this.OnLeavePurposeChanging(value);
					this.SendPropertyChanging();
					this._LeavePurpose = value;
					this.SendPropertyChanged("LeavePurpose");
					this.OnLeavePurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOrderDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LeaveOrderDate
		{
			get
			{
				return this._LeaveOrderDate;
			}
			set
			{
				if ((this._LeaveOrderDate != value))
				{
					this.OnLeaveOrderDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveOrderDate = value;
					this.SendPropertyChanged("LeaveOrderDate");
					this.OnLeaveOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeaveType_LeaveRecord", Storage="_LeaveType", ThisKey="LeaveTypeId", OtherKey="LeaveTypeId", IsForeignKey=true)]
		public LeaveType LeaveType
		{
			get
			{
				return this._LeaveType.Entity;
			}
			set
			{
				LeaveType previousValue = this._LeaveType.Entity;
				if (((previousValue != value) 
							|| (this._LeaveType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeaveType.Entity = null;
						previousValue.LeaveRecords.Remove(this);
					}
					this._LeaveType.Entity = value;
					if ((value != null))
					{
						value.LeaveRecords.Add(this);
						this._LeaveTypeId = value.LeaveTypeId;
					}
					else
					{
						this._LeaveTypeId = default(int);
					}
					this.SendPropertyChanged("LeaveType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePeriod_LeaveRecord", Storage="_ServicePeriod", ThisKey="ServicePeriodId", OtherKey="ServicePeriodId", IsForeignKey=true)]
		public ServicePeriod ServicePeriod
		{
			get
			{
				return this._ServicePeriod.Entity;
			}
			set
			{
				ServicePeriod previousValue = this._ServicePeriod.Entity;
				if (((previousValue != value) 
							|| (this._ServicePeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePeriod.Entity = null;
						previousValue.LeaveRecords.Remove(this);
					}
					this._ServicePeriod.Entity = value;
					if ((value != null))
					{
						value.LeaveRecords.Add(this);
						this._ServicePeriodId = value.ServicePeriodId;
					}
					else
					{
						this._ServicePeriodId = default(int);
					}
					this.SendPropertyChanged("ServicePeriod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.ServicePeriod")]
	public partial class ServicePeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServicePeriodId;
		
		private int _EmployeeId;
		
		private System.DateTime _PeriodStartDate;
		
		private System.Nullable<System.DateTime> _PeriodEndDate;
		
		private string _Designation;
		
		private System.Nullable<int> _Grade;
		
		private System.Nullable<decimal> _BasicPay;
		
		private System.Nullable<decimal> _MinPayScaleAmount;
		
		private System.Nullable<decimal> _MaxPayScaleAmount;
		
		private System.Nullable<System.DateTime> _IncrementDate;
		
		private System.Nullable<decimal> _IncrementAmount;
		
		private System.Nullable<System.DateTime> _PromotionDate;
		
		private System.Nullable<int> _PromotionTypeId;
		
		private System.Nullable<System.DateTime> _ExtGrantedFor;
		
		private string _PostedAt;
		
		private string _GovtOrderNo;
		
		private System.Nullable<System.DateTime> _GovtOrderDate;
		
		private string _InitialTerm;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private bool _IsConsolidated;
		
		private System.Nullable<System.DateTime> _DateOfNextIncrement;
		
		private System.Nullable<System.DateTime> _NextPromotionDate;
		
		private EntitySet<Training> _Trainings;
		
		private EntitySet<MedicalRecord> _MedicalRecords;
		
		private EntitySet<LeaveRecord> _LeaveRecords;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<PromotionType> _PromotionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServicePeriodIdChanging(int value);
    partial void OnServicePeriodIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnPeriodStartDateChanging(System.DateTime value);
    partial void OnPeriodStartDateChanged();
    partial void OnPeriodEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPeriodEndDateChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnBasicSalaryChanging(System.Nullable<decimal> value);
    partial void OnBasicSalaryChanged();
    partial void OnMinPayScaleAmountChanging(System.Nullable<decimal> value);
    partial void OnMinPayScaleAmountChanged();
    partial void OnMaxPayScaleAmountChanging(System.Nullable<decimal> value);
    partial void OnMaxPayScaleAmountChanged();
    partial void OnDateOfIncrementChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfIncrementChanged();
    partial void OnIncrementAmountChanging(System.Nullable<decimal> value);
    partial void OnIncrementAmountChanged();
    partial void OnPromotionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPromotionDateChanged();
    partial void OnPromotionTypeIdChanging(System.Nullable<int> value);
    partial void OnPromotionTypeIdChanged();
    partial void OnExtensionUptoChanging(System.Nullable<System.DateTime> value);
    partial void OnExtensionUptoChanged();
    partial void OnPostedAtChanging(string value);
    partial void OnPostedAtChanged();
    partial void OnGovtOrderNoChanging(string value);
    partial void OnGovtOrderNoChanged();
    partial void OnGovtOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGovtOrderDateChanged();
    partial void OnInitialTermChanging(string value);
    partial void OnInitialTermChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnIsConsolidatedChanging(bool value);
    partial void OnIsConsolidatedChanged();
    partial void OnDateOfNextIncrementChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfNextIncrementChanged();
    partial void OnNextPromotionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextPromotionDateChanged();
    #endregion
		
		public ServicePeriod()
		{
			this._Trainings = new EntitySet<Training>(new Action<Training>(this.attach_Trainings), new Action<Training>(this.detach_Trainings));
			this._MedicalRecords = new EntitySet<MedicalRecord>(new Action<MedicalRecord>(this.attach_MedicalRecords), new Action<MedicalRecord>(this.detach_MedicalRecords));
			this._LeaveRecords = new EntitySet<LeaveRecord>(new Action<LeaveRecord>(this.attach_LeaveRecords), new Action<LeaveRecord>(this.detach_LeaveRecords));
			this._Employee = default(EntityRef<Employee>);
			this._PromotionType = default(EntityRef<PromotionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePeriodId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ServicePeriodId
		{
			get
			{
				return this._ServicePeriodId;
			}
			set
			{
				if ((this._ServicePeriodId != value))
				{
					this.OnServicePeriodIdChanging(value);
					this.SendPropertyChanging();
					this._ServicePeriodId = value;
					this.SendPropertyChanged("ServicePeriodId");
					this.OnServicePeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodStartDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime PeriodStartDate
		{
			get
			{
				return this._PeriodStartDate;
			}
			set
			{
				if ((this._PeriodStartDate != value))
				{
					this.OnPeriodStartDateChanging(value);
					this.SendPropertyChanging();
					this._PeriodStartDate = value;
					this.SendPropertyChanged("PeriodStartDate");
					this.OnPeriodStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodEndDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PeriodEndDate
		{
			get
			{
				return this._PeriodEndDate;
			}
			set
			{
				if ((this._PeriodEndDate != value))
				{
					this.OnPeriodEndDateChanging(value);
					this.SendPropertyChanging();
					this._PeriodEndDate = value;
					this.SendPropertyChanged("PeriodEndDate");
					this.OnPeriodEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicPay", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BasicSalary
		{
			get
			{
				return this._BasicPay;
			}
			set
			{
				if ((this._BasicPay != value))
				{
					this.OnBasicSalaryChanging(value);
					this.SendPropertyChanging();
					this._BasicPay = value;
					this.SendPropertyChanged("BasicSalary");
					this.OnBasicSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPayScaleAmount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> MinPayScaleAmount
		{
			get
			{
				return this._MinPayScaleAmount;
			}
			set
			{
				if ((this._MinPayScaleAmount != value))
				{
					this.OnMinPayScaleAmountChanging(value);
					this.SendPropertyChanging();
					this._MinPayScaleAmount = value;
					this.SendPropertyChanged("MinPayScaleAmount");
					this.OnMinPayScaleAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPayScaleAmount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> MaxPayScaleAmount
		{
			get
			{
				return this._MaxPayScaleAmount;
			}
			set
			{
				if ((this._MaxPayScaleAmount != value))
				{
					this.OnMaxPayScaleAmountChanging(value);
					this.SendPropertyChanging();
					this._MaxPayScaleAmount = value;
					this.SendPropertyChanged("MaxPayScaleAmount");
					this.OnMaxPayScaleAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncrementDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateOfIncrement
		{
			get
			{
				return this._IncrementDate;
			}
			set
			{
				if ((this._IncrementDate != value))
				{
					this.OnDateOfIncrementChanging(value);
					this.SendPropertyChanging();
					this._IncrementDate = value;
					this.SendPropertyChanged("DateOfIncrement");
					this.OnDateOfIncrementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncrementAmount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> IncrementAmount
		{
			get
			{
				return this._IncrementAmount;
			}
			set
			{
				if ((this._IncrementAmount != value))
				{
					this.OnIncrementAmountChanging(value);
					this.SendPropertyChanging();
					this._IncrementAmount = value;
					this.SendPropertyChanged("IncrementAmount");
					this.OnIncrementAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PromotionDate
		{
			get
			{
				return this._PromotionDate;
			}
			set
			{
				if ((this._PromotionDate != value))
				{
					this.OnPromotionDateChanging(value);
					this.SendPropertyChanging();
					this._PromotionDate = value;
					this.SendPropertyChanged("PromotionDate");
					this.OnPromotionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionTypeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PromotionTypeId
		{
			get
			{
				return this._PromotionTypeId;
			}
			set
			{
				if ((this._PromotionTypeId != value))
				{
					if (this._PromotionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionTypeId = value;
					this.SendPropertyChanged("PromotionTypeId");
					this.OnPromotionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtGrantedFor", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExtensionUpto
		{
			get
			{
				return this._ExtGrantedFor;
			}
			set
			{
				if ((this._ExtGrantedFor != value))
				{
					this.OnExtensionUptoChanging(value);
					this.SendPropertyChanging();
					this._ExtGrantedFor = value;
					this.SendPropertyChanged("ExtensionUpto");
					this.OnExtensionUptoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedAt", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PostedAt
		{
			get
			{
				return this._PostedAt;
			}
			set
			{
				if ((this._PostedAt != value))
				{
					this.OnPostedAtChanging(value);
					this.SendPropertyChanging();
					this._PostedAt = value;
					this.SendPropertyChanged("PostedAt");
					this.OnPostedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovtOrderNo", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string GovtOrderNo
		{
			get
			{
				return this._GovtOrderNo;
			}
			set
			{
				if ((this._GovtOrderNo != value))
				{
					this.OnGovtOrderNoChanging(value);
					this.SendPropertyChanging();
					this._GovtOrderNo = value;
					this.SendPropertyChanged("GovtOrderNo");
					this.OnGovtOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovtOrderDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> GovtOrderDate
		{
			get
			{
				return this._GovtOrderDate;
			}
			set
			{
				if ((this._GovtOrderDate != value))
				{
					this.OnGovtOrderDateChanging(value);
					this.SendPropertyChanging();
					this._GovtOrderDate = value;
					this.SendPropertyChanged("GovtOrderDate");
					this.OnGovtOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialTerm", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string InitialTerm
		{
			get
			{
				return this._InitialTerm;
			}
			set
			{
				if ((this._InitialTerm != value))
				{
					this.OnInitialTermChanging(value);
					this.SendPropertyChanging();
					this._InitialTerm = value;
					this.SendPropertyChanged("InitialTerm");
					this.OnInitialTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConsolidated", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsConsolidated
		{
			get
			{
				return this._IsConsolidated;
			}
			set
			{
				if ((this._IsConsolidated != value))
				{
					this.OnIsConsolidatedChanging(value);
					this.SendPropertyChanging();
					this._IsConsolidated = value;
					this.SendPropertyChanged("IsConsolidated");
					this.OnIsConsolidatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfNextIncrement", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateOfNextIncrement
		{
			get
			{
				return this._DateOfNextIncrement;
			}
			set
			{
				if ((this._DateOfNextIncrement != value))
				{
					this.OnDateOfNextIncrementChanging(value);
					this.SendPropertyChanging();
					this._DateOfNextIncrement = value;
					this.SendPropertyChanged("DateOfNextIncrement");
					this.OnDateOfNextIncrementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPromotionDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> NextPromotionDate
		{
			get
			{
				return this._NextPromotionDate;
			}
			set
			{
				if ((this._NextPromotionDate != value))
				{
					this.OnNextPromotionDateChanging(value);
					this.SendPropertyChanging();
					this._NextPromotionDate = value;
					this.SendPropertyChanged("NextPromotionDate");
					this.OnNextPromotionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePeriod_Training", Storage="_Trainings", ThisKey="ServicePeriodId", OtherKey="ServicePeriodId")]
		public EntitySet<Training> Trainings
		{
			get
			{
				return this._Trainings;
			}
			set
			{
				this._Trainings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePeriod_MedicalRecord", Storage="_MedicalRecords", ThisKey="ServicePeriodId", OtherKey="ServicePeriodId")]
		public EntitySet<MedicalRecord> MedicalRecords
		{
			get
			{
				return this._MedicalRecords;
			}
			set
			{
				this._MedicalRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePeriod_LeaveRecord", Storage="_LeaveRecords", ThisKey="ServicePeriodId", OtherKey="ServicePeriodId")]
		public EntitySet<LeaveRecord> LeaveRecords
		{
			get
			{
				return this._LeaveRecords;
			}
			set
			{
				this._LeaveRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServicePeriod", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ServicePeriods.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ServicePeriods.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PromotionType_ServicePeriod", Storage="_PromotionType", ThisKey="PromotionTypeId", OtherKey="PromotionTypeId", IsForeignKey=true)]
		public PromotionType PromotionType
		{
			get
			{
				return this._PromotionType.Entity;
			}
			set
			{
				PromotionType previousValue = this._PromotionType.Entity;
				if (((previousValue != value) 
							|| (this._PromotionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PromotionType.Entity = null;
						previousValue.ServicePeriods.Remove(this);
					}
					this._PromotionType.Entity = value;
					if ((value != null))
					{
						value.ServicePeriods.Add(this);
						this._PromotionTypeId = value.PromotionTypeId;
					}
					else
					{
						this._PromotionTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PromotionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trainings(Training entity)
		{
			this.SendPropertyChanging();
			entity.ServicePeriod = this;
		}
		
		private void detach_Trainings(Training entity)
		{
			this.SendPropertyChanging();
			entity.ServicePeriod = null;
		}
		
		private void attach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.ServicePeriod = this;
		}
		
		private void detach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.ServicePeriod = null;
		}
		
		private void attach_LeaveRecords(LeaveRecord entity)
		{
			this.SendPropertyChanging();
			entity.ServicePeriod = this;
		}
		
		private void detach_LeaveRecords(LeaveRecord entity)
		{
			this.SendPropertyChanging();
			entity.ServicePeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.PromotionType")]
	public partial class PromotionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromotionTypeId;
		
		private string _PromotionDesc;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<ServicePeriod> _ServicePeriods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotionTypeIdChanging(int value);
    partial void OnPromotionTypeIdChanged();
    partial void OnPromotionDescriptionChanging(string value);
    partial void OnPromotionDescriptionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public PromotionType()
		{
			this._ServicePeriods = new EntitySet<ServicePeriod>(new Action<ServicePeriod>(this.attach_ServicePeriods), new Action<ServicePeriod>(this.detach_ServicePeriods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PromotionTypeId
		{
			get
			{
				return this._PromotionTypeId;
			}
			set
			{
				if ((this._PromotionTypeId != value))
				{
					this.OnPromotionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PromotionTypeId = value;
					this.SendPropertyChanged("PromotionTypeId");
					this.OnPromotionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PromotionDescription
		{
			get
			{
				return this._PromotionDesc;
			}
			set
			{
				if ((this._PromotionDesc != value))
				{
					this.OnPromotionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PromotionDesc = value;
					this.SendPropertyChanged("PromotionDescription");
					this.OnPromotionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PromotionType_ServicePeriod", Storage="_ServicePeriods", ThisKey="PromotionTypeId", OtherKey="PromotionTypeId")]
		public EntitySet<ServicePeriod> ServicePeriods
		{
			get
			{
				return this._ServicePeriods;
			}
			set
			{
				this._ServicePeriods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServicePeriods(ServicePeriod entity)
		{
			this.SendPropertyChanging();
			entity.PromotionType = this;
		}
		
		private void detach_ServicePeriods(ServicePeriod entity)
		{
			this.SendPropertyChanging();
			entity.PromotionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.Nominee")]
	public partial class Nominee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NomineeId;
		
		private int _FamilyMemberId;
		
		private int _EmployeeId;
		
		private string _Description;
		
		private int _EntitlementTypeId;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<EntitlementType> _EntitlementType;
		
		private EntityRef<FamilyMember> _FamilyMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomineeIdChanging(int value);
    partial void OnNomineeIdChanged();
    partial void OnFamilyMemberIdChanging(int value);
    partial void OnFamilyMemberIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEntitlementTypeIdChanging(int value);
    partial void OnEntitlementTypeIdChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Nominee()
		{
			this._Employee = default(EntityRef<Employee>);
			this._EntitlementType = default(EntityRef<EntitlementType>);
			this._FamilyMember = default(EntityRef<FamilyMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomineeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int NomineeId
		{
			get
			{
				return this._NomineeId;
			}
			set
			{
				if ((this._NomineeId != value))
				{
					this.OnNomineeIdChanging(value);
					this.SendPropertyChanging();
					this._NomineeId = value;
					this.SendPropertyChanged("NomineeId");
					this.OnNomineeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyMemberId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int FamilyMemberId
		{
			get
			{
				return this._FamilyMemberId;
			}
			set
			{
				if ((this._FamilyMemberId != value))
				{
					if (this._FamilyMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyMemberIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyMemberId = value;
					this.SendPropertyChanged("FamilyMemberId");
					this.OnFamilyMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitlementTypeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EntitlementTypeId
		{
			get
			{
				return this._EntitlementTypeId;
			}
			set
			{
				if ((this._EntitlementTypeId != value))
				{
					if (this._EntitlementType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntitlementTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EntitlementTypeId = value;
					this.SendPropertyChanged("EntitlementTypeId");
					this.OnEntitlementTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Nominee", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Nominees.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Nominees.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntitlementType_Nominee", Storage="_EntitlementType", ThisKey="EntitlementTypeId", OtherKey="EntitlementTypeId", IsForeignKey=true)]
		public EntitlementType EntitlementType
		{
			get
			{
				return this._EntitlementType.Entity;
			}
			set
			{
				EntitlementType previousValue = this._EntitlementType.Entity;
				if (((previousValue != value) 
							|| (this._EntitlementType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntitlementType.Entity = null;
						previousValue.Nominees.Remove(this);
					}
					this._EntitlementType.Entity = value;
					if ((value != null))
					{
						value.Nominees.Add(this);
						this._EntitlementTypeId = value.EntitlementTypeId;
					}
					else
					{
						this._EntitlementTypeId = default(int);
					}
					this.SendPropertyChanged("EntitlementType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FamilyMember_Nominee", Storage="_FamilyMember", ThisKey="FamilyMemberId", OtherKey="FamilyMemberId", IsForeignKey=true)]
		public FamilyMember FamilyMember
		{
			get
			{
				return this._FamilyMember.Entity;
			}
			set
			{
				FamilyMember previousValue = this._FamilyMember.Entity;
				if (((previousValue != value) 
							|| (this._FamilyMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FamilyMember.Entity = null;
						previousValue.Nominees.Remove(this);
					}
					this._FamilyMember.Entity = value;
					if ((value != null))
					{
						value.Nominees.Add(this);
						this._FamilyMemberId = value.FamilyMemberId;
					}
					else
					{
						this._FamilyMemberId = default(int);
					}
					this.SendPropertyChanged("FamilyMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.EmployeeGrant")]
	public partial class EmployeeGrant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeGrantId;
		
		private int _EmployeeId;
		
		private string _GrantType;
		
		private string _MeritoriousService;
		
		private string _GrantName;
		
		private System.Nullable<System.DateTime> _GrantReceivedDate;
		
		private string _GrantingAuthority;
		
		private string _PenalityImposed;
		
		private string _EnquiryDetails;
		
		private string _OrderNo;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeGrantIdChanging(int value);
    partial void OnEmployeeGrantIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnGrantTypeChanging(string value);
    partial void OnGrantTypeChanged();
    partial void OnMeritoriousServiceChanging(string value);
    partial void OnMeritoriousServiceChanged();
    partial void OnGrantNameChanging(string value);
    partial void OnGrantNameChanged();
    partial void OnGrantReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGrantReceivedDateChanged();
    partial void OnGrantingAuthorityChanging(string value);
    partial void OnGrantingAuthorityChanged();
    partial void OnPenalityImposedChanging(string value);
    partial void OnPenalityImposedChanged();
    partial void OnEnquiryDetailsChanging(string value);
    partial void OnEnquiryDetailsChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EmployeeGrant()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeGrantId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EmployeeGrantId
		{
			get
			{
				return this._EmployeeGrantId;
			}
			set
			{
				if ((this._EmployeeGrantId != value))
				{
					this.OnEmployeeGrantIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeGrantId = value;
					this.SendPropertyChanged("EmployeeGrantId");
					this.OnEmployeeGrantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrantType", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GrantType
		{
			get
			{
				return this._GrantType;
			}
			set
			{
				if ((this._GrantType != value))
				{
					this.OnGrantTypeChanging(value);
					this.SendPropertyChanging();
					this._GrantType = value;
					this.SendPropertyChanged("GrantType");
					this.OnGrantTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeritoriousService", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MeritoriousService
		{
			get
			{
				return this._MeritoriousService;
			}
			set
			{
				if ((this._MeritoriousService != value))
				{
					this.OnMeritoriousServiceChanging(value);
					this.SendPropertyChanging();
					this._MeritoriousService = value;
					this.SendPropertyChanged("MeritoriousService");
					this.OnMeritoriousServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrantName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GrantName
		{
			get
			{
				return this._GrantName;
			}
			set
			{
				if ((this._GrantName != value))
				{
					this.OnGrantNameChanging(value);
					this.SendPropertyChanging();
					this._GrantName = value;
					this.SendPropertyChanged("GrantName");
					this.OnGrantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrantReceivedDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> GrantReceivedDate
		{
			get
			{
				return this._GrantReceivedDate;
			}
			set
			{
				if ((this._GrantReceivedDate != value))
				{
					this.OnGrantReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._GrantReceivedDate = value;
					this.SendPropertyChanged("GrantReceivedDate");
					this.OnGrantReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrantingAuthority", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string GrantingAuthority
		{
			get
			{
				return this._GrantingAuthority;
			}
			set
			{
				if ((this._GrantingAuthority != value))
				{
					this.OnGrantingAuthorityChanging(value);
					this.SendPropertyChanging();
					this._GrantingAuthority = value;
					this.SendPropertyChanged("GrantingAuthority");
					this.OnGrantingAuthorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenalityImposed", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PenalityImposed
		{
			get
			{
				return this._PenalityImposed;
			}
			set
			{
				if ((this._PenalityImposed != value))
				{
					this.OnPenalityImposedChanging(value);
					this.SendPropertyChanging();
					this._PenalityImposed = value;
					this.SendPropertyChanged("PenalityImposed");
					this.OnPenalityImposedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnquiryDetails", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EnquiryDetails
		{
			get
			{
				return this._EnquiryDetails;
			}
			set
			{
				if ((this._EnquiryDetails != value))
				{
					this.OnEnquiryDetailsChanging(value);
					this.SendPropertyChanging();
					this._EnquiryDetails = value;
					this.SendPropertyChanged("EnquiryDetails");
					this.OnEnquiryDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeGrant", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeGrants.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeGrants.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.SubDivision")]
	public partial class SubDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubDivisionId;
		
		private string _SubDivisionName;
		
		private int _DivisionId;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Office> _Offices;
		
		private EntityRef<Division> _Division;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubDivisionIdChanging(int value);
    partial void OnSubDivisionIdChanged();
    partial void OnSubDivisionNameChanging(string value);
    partial void OnSubDivisionNameChanged();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public SubDivision()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Offices = new EntitySet<Office>(new Action<Office>(this.attach_Offices), new Action<Office>(this.detach_Offices));
			this._Division = default(EntityRef<Division>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int SubDivisionId
		{
			get
			{
				return this._SubDivisionId;
			}
			set
			{
				if ((this._SubDivisionId != value))
				{
					this.OnSubDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._SubDivisionId = value;
					this.SendPropertyChanged("SubDivisionId");
					this.OnSubDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDivisionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SubDivisionName
		{
			get
			{
				return this._SubDivisionName;
			}
			set
			{
				if ((this._SubDivisionName != value))
				{
					this.OnSubDivisionNameChanging(value);
					this.SendPropertyChanging();
					this._SubDivisionName = value;
					this.SendPropertyChanged("SubDivisionName");
					this.OnSubDivisionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubDivision_Employee", Storage="_Employees", ThisKey="SubDivisionId", OtherKey="SubDivisionId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubDivision_Office", Storage="_Offices", ThisKey="SubDivisionId", OtherKey="SubDivisionId")]
		public EntitySet<Office> Offices
		{
			get
			{
				return this._Offices;
			}
			set
			{
				this._Offices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_SubDivision", Storage="_Division", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.SubDivisions.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.SubDivisions.Add(this);
						this._DivisionId = value.DivisionId;
					}
					else
					{
						this._DivisionId = default(int);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.SubDivision = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.SubDivision = null;
		}
		
		private void attach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.SubDivision = this;
		}
		
		private void detach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.SubDivision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.Office")]
	public partial class Office : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfficeId;
		
		private string _OfficeName;
		
		private int _SubDivisionId;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<SubDivision> _SubDivision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfficeIdChanging(int value);
    partial void OnOfficeIdChanged();
    partial void OnOfficeNameChanging(string value);
    partial void OnOfficeNameChanged();
    partial void OnSubDivisionIdChanging(int value);
    partial void OnSubDivisionIdChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Office()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._SubDivision = default(EntityRef<SubDivision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int OfficeId
		{
			get
			{
				return this._OfficeId;
			}
			set
			{
				if ((this._OfficeId != value))
				{
					this.OnOfficeIdChanging(value);
					this.SendPropertyChanging();
					this._OfficeId = value;
					this.SendPropertyChanged("OfficeId");
					this.OnOfficeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this.OnOfficeNameChanging(value);
					this.SendPropertyChanging();
					this._OfficeName = value;
					this.SendPropertyChanged("OfficeName");
					this.OnOfficeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDivisionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SubDivisionId
		{
			get
			{
				return this._SubDivisionId;
			}
			set
			{
				if ((this._SubDivisionId != value))
				{
					if (this._SubDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._SubDivisionId = value;
					this.SendPropertyChanged("SubDivisionId");
					this.OnSubDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Employee", Storage="_Employees", ThisKey="OfficeId", OtherKey="OfficeId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubDivision_Office", Storage="_SubDivision", ThisKey="SubDivisionId", OtherKey="SubDivisionId", IsForeignKey=true)]
		public SubDivision SubDivision
		{
			get
			{
				return this._SubDivision.Entity;
			}
			set
			{
				SubDivision previousValue = this._SubDivision.Entity;
				if (((previousValue != value) 
							|| (this._SubDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubDivision.Entity = null;
						previousValue.Offices.Remove(this);
					}
					this._SubDivision.Entity = value;
					if ((value != null))
					{
						value.Offices.Add(this);
						this._SubDivisionId = value.SubDivisionId;
					}
					else
					{
						this._SubDivisionId = default(int);
					}
					this.SendPropertyChanged("SubDivision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Office = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Office = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.Station")]
	public partial class Station : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StationId;
		
		private string _StationName;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Bank> _Banks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStationIdChanging(int value);
    partial void OnStationIdChanged();
    partial void OnStationNameChanging(string value);
    partial void OnStationNameChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Station()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Banks = new EntitySet<Bank>(new Action<Bank>(this.attach_Banks), new Action<Bank>(this.detach_Banks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StationName
		{
			get
			{
				return this._StationName;
			}
			set
			{
				if ((this._StationName != value))
				{
					this.OnStationNameChanging(value);
					this.SendPropertyChanging();
					this._StationName = value;
					this.SendPropertyChanged("StationName");
					this.OnStationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Employee", Storage="_Employees", ThisKey="StationId", OtherKey="StationId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Bank", Storage="_Banks", ThisKey="StationId", OtherKey="StationId")]
		public EntitySet<Bank> Banks
		{
			get
			{
				return this._Banks;
			}
			set
			{
				this._Banks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Station = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Station = null;
		}
		
		private void attach_Banks(Bank entity)
		{
			this.SendPropertyChanging();
			entity.Station = this;
		}
		
		private void detach_Banks(Bank entity)
		{
			this.SendPropertyChanging();
			entity.Station = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.Bank")]
	public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankId;
		
		private string _BankName;
		
		private string _BranchName;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<int> _StationId;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<Station> _Station;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankIdChanging(int value);
    partial void OnBankIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnStationIdChanging(System.Nullable<int> value);
    partial void OnStationIdChanged();
    #endregion
		
		public Bank()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Station = default(EntityRef<Station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId")]
		public System.Nullable<int> StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					if (this._Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Employee", Storage="_Employees", ThisKey="BankId", OtherKey="BankId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Bank", Storage="_Station", ThisKey="StationId", OtherKey="StationId", IsForeignKey=true)]
		public Station Station
		{
			get
			{
				return this._Station.Entity;
			}
			set
			{
				Station previousValue = this._Station.Entity;
				if (((previousValue != value) 
							|| (this._Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Station.Entity = null;
						previousValue.Banks.Remove(this);
					}
					this._Station.Entity = value;
					if ((value != null))
					{
						value.Banks.Add(this);
						this._StationId = value.StationId;
					}
					else
					{
						this._StationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Station");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Bank = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Bank = null;
		}
	}
}
#pragma warning restore 1591
