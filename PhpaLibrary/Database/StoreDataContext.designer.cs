#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eclipse.PhpaLibrary.Database.Store
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="phpa15october")]
	public partial class StoreDataContext : Eclipse.PhpaLibrary.Database.DataContextBase
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRoContractor(RoContractor instance);
    partial void UpdateRoContractor(RoContractor instance);
    partial void DeleteRoContractor(RoContractor instance);
    partial void InsertRoDivision(RoDivision instance);
    partial void UpdateRoDivision(RoDivision instance);
    partial void DeleteRoDivision(RoDivision instance);
    partial void InsertRoEmployee(RoEmployee instance);
    partial void UpdateRoEmployee(RoEmployee instance);
    partial void DeleteRoEmployee(RoEmployee instance);
    partial void InsertGRN(GRN instance);
    partial void UpdateGRN(GRN instance);
    partial void DeleteGRN(GRN instance);
    partial void InsertItemCategory(ItemCategory instance);
    partial void UpdateItemCategory(ItemCategory instance);
    partial void DeleteItemCategory(ItemCategory instance);
    partial void InsertUOM(UOM instance);
    partial void UpdateUOM(UOM instance);
    partial void DeleteUOM(UOM instance);
    partial void InsertSRSItem(SRSItem instance);
    partial void UpdateSRSItem(SRSItem instance);
    partial void DeleteSRSItem(SRSItem instance);
    partial void InsertSRS(SRS instance);
    partial void UpdateSRS(SRS instance);
    partial void DeleteSRS(SRS instance);
    partial void InsertHeadOfAccount(HeadOfAccount instance);
    partial void UpdateHeadOfAccount(HeadOfAccount instance);
    partial void DeleteHeadOfAccount(HeadOfAccount instance);
    partial void InsertGRNItem(GRNItem instance);
    partial void UpdateGRNItem(GRNItem instance);
    partial void DeleteGRNItem(GRNItem instance);
    partial void InsertSRSIssueItem(SRSIssueItem instance);
    partial void UpdateSRSIssueItem(SRSIssueItem instance);
    partial void DeleteSRSIssueItem(SRSIssueItem instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    #endregion
		
		public StoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RoContractor> RoContractors
		{
			get
			{
				return this.GetTable<RoContractor>();
			}
		}
		
		public System.Data.Linq.Table<RoDivision> RoDivisions
		{
			get
			{
				return this.GetTable<RoDivision>();
			}
		}
		
		public System.Data.Linq.Table<RoEmployee> RoEmployees
		{
			get
			{
				return this.GetTable<RoEmployee>();
			}
		}
		
		public System.Data.Linq.Table<GRN> GRNs
		{
			get
			{
				return this.GetTable<GRN>();
			}
		}
		
		public System.Data.Linq.Table<ItemCategory> ItemCategories
		{
			get
			{
				return this.GetTable<ItemCategory>();
			}
		}
		
		public System.Data.Linq.Table<UOM> UOMs
		{
			get
			{
				return this.GetTable<UOM>();
			}
		}
		
		public System.Data.Linq.Table<SRSItem> SRSItems
		{
			get
			{
				return this.GetTable<SRSItem>();
			}
		}
		
		public System.Data.Linq.Table<SRS> SRS
		{
			get
			{
				return this.GetTable<SRS>();
			}
		}
		
		public System.Data.Linq.Table<HeadOfAccount> HeadOfAccounts
		{
			get
			{
				return this.GetTable<HeadOfAccount>();
			}
		}
		
		public System.Data.Linq.Table<GRNItem> GRNItems
		{
			get
			{
				return this.GetTable<GRNItem>();
			}
		}
		
		public System.Data.Linq.Table<SRSIssueItem> SRSIssueItems
		{
			get
			{
				return this.GetTable<SRSIssueItem>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contractor")]
	public partial class RoContractor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractorId;
		
		private string _ContractorName;
		
		private string _ContractorCode;
		
		private string _Nationality;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _Postal_Code;
		
		private string _Contact_person;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Fax;
		
		private EntitySet<GRN> _GRNs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractorIdChanging(int value);
    partial void OnContractorIdChanged();
    partial void OnContractorNameChanging(string value);
    partial void OnContractorNameChanged();
    partial void OnContractorCodeChanging(string value);
    partial void OnContractorCodeChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostal_CodeChanging(string value);
    partial void OnPostal_CodeChanged();
    partial void OnContact_personChanging(string value);
    partial void OnContact_personChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    #endregion
		
		public RoContractor()
		{
			this._GRNs = new EntitySet<GRN>(new Action<GRN>(this.attach_GRNs), new Action<GRN>(this.detach_GRNs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContractorName
		{
			get
			{
				return this._ContractorName;
			}
			set
			{
				if ((this._ContractorName != value))
				{
					this.OnContractorNameChanging(value);
					this.SendPropertyChanging();
					this._ContractorName = value;
					this.SendPropertyChanged("ContractorName");
					this.OnContractorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContractorCode
		{
			get
			{
				return this._ContractorCode;
			}
			set
			{
				if ((this._ContractorCode != value))
				{
					this.OnContractorCodeChanging(value);
					this.SendPropertyChanging();
					this._ContractorCode = value;
					this.SendPropertyChanged("ContractorCode");
					this.OnContractorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(2) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Code", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Postal_Code
		{
			get
			{
				return this._Postal_Code;
			}
			set
			{
				if ((this._Postal_Code != value))
				{
					this.OnPostal_CodeChanging(value);
					this.SendPropertyChanging();
					this._Postal_Code = value;
					this.SendPropertyChanged("Postal_Code");
					this.OnPostal_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_person", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Contact_person
		{
			get
			{
				return this._Contact_person;
			}
			set
			{
				if ((this._Contact_person != value))
				{
					this.OnContact_personChanging(value);
					this.SendPropertyChanging();
					this._Contact_person = value;
					this.SendPropertyChanged("Contact_person");
					this.OnContact_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoContractor_GRN", Storage="_GRNs", ThisKey="ContractorId", OtherKey="ContractorId")]
		public EntitySet<GRN> GRNs
		{
			get
			{
				return this._GRNs;
			}
			set
			{
				this._GRNs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GRNs(GRN entity)
		{
			this.SendPropertyChanging();
			entity.RoContractor = this;
		}
		
		private void detach_GRNs(GRN entity)
		{
			this.SendPropertyChanging();
			entity.RoContractor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Division")]
	public partial class RoDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DivisionId;
		
		private string _DivisionCode;
		
		private string _DivisionGroup;
		
		private string _DivisionName;
		
		private EntitySet<SRS> _SRs1;
		
		private EntitySet<SRS> _SRS2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivisionIdChanging(int value);
    partial void OnDivisionIdChanged();
    partial void OnDivisionCodeChanging(string value);
    partial void OnDivisionCodeChanged();
    partial void OnDivisionGroupChanging(string value);
    partial void OnDivisionGroupChanged();
    partial void OnDivisionNameChanging(string value);
    partial void OnDivisionNameChanged();
    #endregion
		
		public RoDivision()
		{
			this._SRs1 = new EntitySet<SRS>(new Action<SRS>(this.attach_SRs1), new Action<SRS>(this.detach_SRs1));
			this._SRS2 = new EntitySet<SRS>(new Action<SRS>(this.attach_SRS2), new Action<SRS>(this.detach_SRS2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
			set
			{
				if ((this._DivisionCode != value))
				{
					this.OnDivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._DivisionCode = value;
					this.SendPropertyChanged("DivisionCode");
					this.OnDivisionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionGroup", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionGroup
		{
			get
			{
				return this._DivisionGroup;
			}
			set
			{
				if ((this._DivisionGroup != value))
				{
					this.OnDivisionGroupChanging(value);
					this.SendPropertyChanging();
					this._DivisionGroup = value;
					this.SendPropertyChanged("DivisionGroup");
					this.OnDivisionGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionName
		{
			get
			{
				return this._DivisionName;
			}
			set
			{
				if ((this._DivisionName != value))
				{
					this.OnDivisionNameChanging(value);
					this.SendPropertyChanging();
					this._DivisionName = value;
					this.SendPropertyChanged("DivisionName");
					this.OnDivisionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_SRS", Storage="_SRs1", ThisKey="DivisionId", OtherKey="SRSFrom")]
		public EntitySet<SRS> SRs1
		{
			get
			{
				return this._SRs1;
			}
			set
			{
				this._SRs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_SRS1", Storage="_SRS2", ThisKey="DivisionId", OtherKey="SRSTo")]
		public EntitySet<SRS> SRS2
		{
			get
			{
				return this._SRS2;
			}
			set
			{
				this._SRS2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SRs1(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision1 = this;
		}
		
		private void detach_SRs1(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision1 = null;
		}
		
		private void attach_SRS2(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision2 = this;
		}
		
		private void detach_SRS2(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payroll.Employee")]
	public partial class RoEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private string _EmployeeCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Designation;
		
		private System.Nullable<int> _DivisionId;
		
		private EntitySet<SRS> _SRs;
		
		private EntitySet<SRS> _SRs1;
		
		private EntitySet<SRS> _SRs3;
		
		private EntitySet<SRS> _SRS4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    #endregion
		
		public RoEmployee()
		{
			this._SRs = new EntitySet<SRS>(new Action<SRS>(this.attach_SRs), new Action<SRS>(this.detach_SRs));
			this._SRs1 = new EntitySet<SRS>(new Action<SRS>(this.attach_SRs1), new Action<SRS>(this.detach_SRs1));
			this._SRs3 = new EntitySet<SRS>(new Action<SRS>(this.attach_SRs3), new Action<SRS>(this.detach_SRs3));
			this._SRS4 = new EntitySet<SRS>(new Action<SRS>(this.attach_SRS4), new Action<SRS>(this.detach_SRS4));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_SRS", Storage="_SRs", ThisKey="EmployeeId", OtherKey="ApplyingOfficer")]
		public EntitySet<SRS> SRs
		{
			get
			{
				return this._SRs;
			}
			set
			{
				this._SRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_SRS1", Storage="_SRs1", ThisKey="EmployeeId", OtherKey="IntendingOfficer")]
		public EntitySet<SRS> SRs1
		{
			get
			{
				return this._SRs1;
			}
			set
			{
				this._SRs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_SRS2", Storage="_SRs3", ThisKey="EmployeeId", OtherKey="IssuingOfficer")]
		public EntitySet<SRS> SRs3
		{
			get
			{
				return this._SRs3;
			}
			set
			{
				this._SRs3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_SRS3", Storage="_SRS4", ThisKey="EmployeeId", OtherKey="ReceivingOfficer")]
		public EntitySet<SRS> SRS4
		{
			get
			{
				return this._SRS4;
			}
			set
			{
				this._SRS4.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SRs(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee = this;
		}
		
		private void detach_SRs(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee = null;
		}
		
		private void attach_SRs1(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee1 = this;
		}
		
		private void detach_SRs1(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee1 = null;
		}
		
		private void attach_SRs3(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee3 = this;
		}
		
		private void detach_SRs3(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee3 = null;
		}
		
		private void attach_SRS4(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee4 = this;
		}
		
		private void detach_SRS4(SRS entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.GRN")]
	public partial class GRN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GRNId;
		
		private string _GRNCode;
		
		private string _TransportationMode;
		
		private string _ConveyenceReceiptNo;
		
		private string _PONumber;
		
		private System.Nullable<System.DateTime> _PODate;
		
		private string _DeliveryChallanNumber;
		
		private System.Nullable<System.DateTime> _DeliveryChallanDate;
		
		private string _OtherReferenceNumber;
		
		private string _NameofCarrier;
		
		private string _AddressOfCarrier;
		
		private string _OrderPlaced;
		
		private System.Nullable<int> _ContractorId;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<System.DateTime> _GRNReceiveDate;
		
		private System.Nullable<System.DateTime> _GoodsReceiveDate;
		
		private string _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _Remarks;
		
		private string _AmendmentNo;
		
		private System.Nullable<System.DateTime> _AmendmentDate;
		
		private EntitySet<GRNItem> _GRNItems;
		
		private EntityRef<RoContractor> _RoContractor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGRNIdChanging(int value);
    partial void OnGRNIdChanged();
    partial void OnGRNCodeChanging(string value);
    partial void OnGRNCodeChanged();
    partial void OnTransportationModeChanging(string value);
    partial void OnTransportationModeChanged();
    partial void OnConveyenceReceiptNoChanging(string value);
    partial void OnConveyenceReceiptNoChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPODateChanging(System.Nullable<System.DateTime> value);
    partial void OnPODateChanged();
    partial void OnDeliveryChallanNumberChanging(string value);
    partial void OnDeliveryChallanNumberChanged();
    partial void OnDeliveryChallanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryChallanDateChanged();
    partial void OnOtherReferenceNumberChanging(string value);
    partial void OnOtherReferenceNumberChanged();
    partial void OnNameofCarrierChanging(string value);
    partial void OnNameofCarrierChanged();
    partial void OnAddressOfCarrierChanging(string value);
    partial void OnAddressOfCarrierChanged();
    partial void OnOrderPlacedChanging(string value);
    partial void OnOrderPlacedChanged();
    partial void OnContractorIdChanging(System.Nullable<int> value);
    partial void OnContractorIdChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnGRNReceiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGRNReceiveDateChanged();
    partial void OnGRNCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGRNCreateDateChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnAmendmentNoChanging(string value);
    partial void OnAmendmentNoChanged();
    partial void OnAmendmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAmendmentDateChanged();
    #endregion
		
		public GRN()
		{
			this._GRNItems = new EntitySet<GRNItem>(new Action<GRNItem>(this.attach_GRNItems), new Action<GRNItem>(this.detach_GRNItems));
			this._RoContractor = default(EntityRef<RoContractor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRNId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int GRNId
		{
			get
			{
				return this._GRNId;
			}
			set
			{
				if ((this._GRNId != value))
				{
					this.OnGRNIdChanging(value);
					this.SendPropertyChanging();
					this._GRNId = value;
					this.SendPropertyChanged("GRNId");
					this.OnGRNIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRNCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GRNCode
		{
			get
			{
				return this._GRNCode;
			}
			set
			{
				if ((this._GRNCode != value))
				{
					this.OnGRNCodeChanging(value);
					this.SendPropertyChanging();
					this._GRNCode = value;
					this.SendPropertyChanged("GRNCode");
					this.OnGRNCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportationMode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TransportationMode
		{
			get
			{
				return this._TransportationMode;
			}
			set
			{
				if ((this._TransportationMode != value))
				{
					this.OnTransportationModeChanging(value);
					this.SendPropertyChanging();
					this._TransportationMode = value;
					this.SendPropertyChanged("TransportationMode");
					this.OnTransportationModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConveyenceReceiptNo", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ConveyenceReceiptNo
		{
			get
			{
				return this._ConveyenceReceiptNo;
			}
			set
			{
				if ((this._ConveyenceReceiptNo != value))
				{
					this.OnConveyenceReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ConveyenceReceiptNo = value;
					this.SendPropertyChanged("ConveyenceReceiptNo");
					this.OnConveyenceReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PODate
		{
			get
			{
				return this._PODate;
			}
			set
			{
				if ((this._PODate != value))
				{
					this.OnPODateChanging(value);
					this.SendPropertyChanging();
					this._PODate = value;
					this.SendPropertyChanged("PODate");
					this.OnPODateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryChallanNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DeliveryChallanNumber
		{
			get
			{
				return this._DeliveryChallanNumber;
			}
			set
			{
				if ((this._DeliveryChallanNumber != value))
				{
					this.OnDeliveryChallanNumberChanging(value);
					this.SendPropertyChanging();
					this._DeliveryChallanNumber = value;
					this.SendPropertyChanged("DeliveryChallanNumber");
					this.OnDeliveryChallanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryChallanDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeliveryChallanDate
		{
			get
			{
				return this._DeliveryChallanDate;
			}
			set
			{
				if ((this._DeliveryChallanDate != value))
				{
					this.OnDeliveryChallanDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryChallanDate = value;
					this.SendPropertyChanged("DeliveryChallanDate");
					this.OnDeliveryChallanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherReferenceNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string OtherReferenceNumber
		{
			get
			{
				return this._OtherReferenceNumber;
			}
			set
			{
				if ((this._OtherReferenceNumber != value))
				{
					this.OnOtherReferenceNumberChanging(value);
					this.SendPropertyChanging();
					this._OtherReferenceNumber = value;
					this.SendPropertyChanged("OtherReferenceNumber");
					this.OnOtherReferenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameofCarrier", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string NameofCarrier
		{
			get
			{
				return this._NameofCarrier;
			}
			set
			{
				if ((this._NameofCarrier != value))
				{
					this.OnNameofCarrierChanging(value);
					this.SendPropertyChanging();
					this._NameofCarrier = value;
					this.SendPropertyChanged("NameofCarrier");
					this.OnNameofCarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressOfCarrier", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AddressOfCarrier
		{
			get
			{
				return this._AddressOfCarrier;
			}
			set
			{
				if ((this._AddressOfCarrier != value))
				{
					this.OnAddressOfCarrierChanging(value);
					this.SendPropertyChanging();
					this._AddressOfCarrier = value;
					this.SendPropertyChanged("AddressOfCarrier");
					this.OnAddressOfCarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPlaced", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string OrderPlaced
		{
			get
			{
				return this._OrderPlaced;
			}
			set
			{
				if ((this._OrderPlaced != value))
				{
					this.OnOrderPlacedChanging(value);
					this.SendPropertyChanging();
					this._OrderPlaced = value;
					this.SendPropertyChanged("OrderPlaced");
					this.OnOrderPlacedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					if (this._RoContractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRNReceiveDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> GRNReceiveDate
		{
			get
			{
				return this._GRNReceiveDate;
			}
			set
			{
				if ((this._GRNReceiveDate != value))
				{
					this.OnGRNReceiveDateChanging(value);
					this.SendPropertyChanging();
					this._GRNReceiveDate = value;
					this.SendPropertyChanged("GRNReceiveDate");
					this.OnGRNReceiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsReceiveDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> GRNCreateDate
		{
			get
			{
				return this._GoodsReceiveDate;
			}
			set
			{
				if ((this._GoodsReceiveDate != value))
				{
					this.OnGRNCreateDateChanging(value);
					this.SendPropertyChanging();
					this._GoodsReceiveDate = value;
					this.SendPropertyChanged("GRNCreateDate");
					this.OnGRNCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendmentNo", DbType="Nvarchar(100)")]
		public string AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendmentDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AmendmentDate
		{
			get
			{
				return this._AmendmentDate;
			}
			set
			{
				if ((this._AmendmentDate != value))
				{
					this.OnAmendmentDateChanging(value);
					this.SendPropertyChanging();
					this._AmendmentDate = value;
					this.SendPropertyChanged("AmendmentDate");
					this.OnAmendmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRN_GRNItem", Storage="_GRNItems", ThisKey="GRNId", OtherKey="GRNId")]
		public EntitySet<GRNItem> GRNItems
		{
			get
			{
				return this._GRNItems;
			}
			set
			{
				this._GRNItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoContractor_GRN", Storage="_RoContractor", ThisKey="ContractorId", OtherKey="ContractorId", IsForeignKey=true)]
		public RoContractor RoContractor
		{
			get
			{
				return this._RoContractor.Entity;
			}
			set
			{
				RoContractor previousValue = this._RoContractor.Entity;
				if (((previousValue != value) 
							|| (this._RoContractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoContractor.Entity = null;
						previousValue.GRNs.Remove(this);
					}
					this._RoContractor.Entity = value;
					if ((value != null))
					{
						value.GRNs.Add(this);
						this._ContractorId = value.ContractorId;
					}
					else
					{
						this._ContractorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoContractor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GRNItems(GRNItem entity)
		{
			this.SendPropertyChanging();
			entity.GRN = this;
		}
		
		private void detach_GRNItems(GRNItem entity)
		{
			this.SendPropertyChanging();
			entity.GRN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="store.ItemCategory")]
	public partial class ItemCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemCategoryId;
		
		private string _ItemCategoryCode;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCategoryIdChanging(int value);
    partial void OnItemCategoryIdChanged();
    partial void OnItemCategoryCodeChanging(string value);
    partial void OnItemCategoryCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public ItemCategory()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ItemCategoryId
		{
			get
			{
				return this._ItemCategoryId;
			}
			set
			{
				if ((this._ItemCategoryId != value))
				{
					this.OnItemCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemCategoryId = value;
					this.SendPropertyChanged("ItemCategoryId");
					this.OnItemCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategoryCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ItemCategoryCode
		{
			get
			{
				return this._ItemCategoryCode;
			}
			set
			{
				if ((this._ItemCategoryCode != value))
				{
					this.OnItemCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCategoryCode = value;
					this.SendPropertyChanged("ItemCategoryCode");
					this.OnItemCategoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemCategory_Item", Storage="_Items", ThisKey="ItemCategoryId", OtherKey="ItemCategoryId")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.ItemCategory = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.ItemCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Store.UOM")]
	public partial class UOM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UOMId;
		
		private string _UOMCode;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUOMIdChanging(int value);
    partial void OnUOMIdChanged();
    partial void OnUOMCodeChanging(string value);
    partial void OnUOMCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public UOM()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int UOMId
		{
			get
			{
				return this._UOMId;
			}
			set
			{
				if ((this._UOMId != value))
				{
					this.OnUOMIdChanging(value);
					this.SendPropertyChanging();
					this._UOMId = value;
					this.SendPropertyChanged("UOMId");
					this.OnUOMIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UOMCode
		{
			get
			{
				return this._UOMCode;
			}
			set
			{
				if ((this._UOMCode != value))
				{
					this.OnUOMCodeChanging(value);
					this.SendPropertyChanging();
					this._UOMCode = value;
					this.SendPropertyChanged("UOMCode");
					this.OnUOMCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UOM_Item", Storage="_Items", ThisKey="UOMId", OtherKey="UOMId")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.UOM = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.UOM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Store.SRSItems")]
	public partial class SRSItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SRSItemId;
		
		private int _SRSId;
		
		private int _ItemId;
		
		private System.Nullable<int> _QtyRequired;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private int _HeadOfAccountId;
		
		private EntitySet<SRSIssueItem> _SRSIssueItems;
		
		private EntityRef<SRS> _SRS;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<HeadOfAccount> _HeadOfAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSRSItemIdChanging(int value);
    partial void OnSRSItemIdChanged();
    partial void OnSRSIdChanging(int value);
    partial void OnSRSIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnQtyRequiredChanging(System.Nullable<int> value);
    partial void OnQtyRequiredChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnHeadOfAccountIdChanging(int value);
    partial void OnHeadOfAccountIdChanged();
    #endregion
		
		public SRSItem()
		{
			this._SRSIssueItems = new EntitySet<SRSIssueItem>(new Action<SRSIssueItem>(this.attach_SRSIssueItems), new Action<SRSIssueItem>(this.detach_SRSIssueItems));
			this._SRS = default(EntityRef<SRS>);
			this._Item = default(EntityRef<Item>);
			this._HeadOfAccount = default(EntityRef<HeadOfAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRSItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int SRSItemId
		{
			get
			{
				return this._SRSItemId;
			}
			set
			{
				if ((this._SRSItemId != value))
				{
					this.OnSRSItemIdChanging(value);
					this.SendPropertyChanging();
					this._SRSItemId = value;
					this.SendPropertyChanged("SRSItemId");
					this.OnSRSItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRSId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SRSId
		{
			get
			{
				return this._SRSId;
			}
			set
			{
				if ((this._SRSId != value))
				{
					if (this._SRS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSRSIdChanging(value);
					this.SendPropertyChanging();
					this._SRSId = value;
					this.SendPropertyChanged("SRSId");
					this.OnSRSIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyRequired", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> QtyRequired
		{
			get
			{
				return this._QtyRequired;
			}
			set
			{
				if ((this._QtyRequired != value))
				{
					this.OnQtyRequiredChanging(value);
					this.SendPropertyChanging();
					this._QtyRequired = value;
					this.SendPropertyChanged("QtyRequired");
					this.OnQtyRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
			set
			{
				if ((this._HeadOfAccountId != value))
				{
					if (this._HeadOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._HeadOfAccountId = value;
					this.SendPropertyChanged("HeadOfAccountId");
					this.OnHeadOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SRSItem_SRSIssueItem", Storage="_SRSIssueItems", ThisKey="SRSItemId", OtherKey="SRSItemId")]
		public EntitySet<SRSIssueItem> SRSIssueItems
		{
			get
			{
				return this._SRSIssueItems;
			}
			set
			{
				this._SRSIssueItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SRS_SRSItem", Storage="_SRS", ThisKey="SRSId", OtherKey="SRSId", IsForeignKey=true)]
		public SRS SRS
		{
			get
			{
				return this._SRS.Entity;
			}
			set
			{
				SRS previousValue = this._SRS.Entity;
				if (((previousValue != value) 
							|| (this._SRS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SRS.Entity = null;
						previousValue.SRSItems.Remove(this);
					}
					this._SRS.Entity = value;
					if ((value != null))
					{
						value.SRSItems.Add(this);
						this._SRSId = value.SRSId;
					}
					else
					{
						this._SRSId = default(int);
					}
					this.SendPropertyChanged("SRS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_SRSItem", Storage="_Item", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.SRSItems.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.SRSItems.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_SRSItem", Storage="_HeadOfAccount", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public HeadOfAccount HeadOfAccount
		{
			get
			{
				return this._HeadOfAccount.Entity;
			}
			set
			{
				HeadOfAccount previousValue = this._HeadOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._HeadOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HeadOfAccount.Entity = null;
						previousValue.SRSItems.Remove(this);
					}
					this._HeadOfAccount.Entity = value;
					if ((value != null))
					{
						value.SRSItems.Add(this);
						this._HeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._HeadOfAccountId = default(int);
					}
					this.SendPropertyChanged("HeadOfAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SRSIssueItems(SRSIssueItem entity)
		{
			this.SendPropertyChanging();
			entity.SRSItem = this;
		}
		
		private void detach_SRSIssueItems(SRSIssueItem entity)
		{
			this.SendPropertyChanging();
			entity.SRSItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Store.SRS")]
	public partial class SRS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SRSId;
		
		private string _SRSCode;
		
		private System.DateTime _SRSDate;
		
		private System.Nullable<int> _SRSFrom;
		
		private System.Nullable<int> _SRSTo;
		
		private string _IssuedTo;
		
		private string _VehicleNumber;
		
		private System.Nullable<int> _ChargeableTo;
		
		private System.Nullable<int> _ApplyingOfficer;
		
		private System.Nullable<int> _ReceivingOfficer;
		
		private System.Nullable<int> _IntendingOfficer;
		
		private System.Nullable<int> _IssuingOfficer;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private string _Remarks;
		
		private EntitySet<SRSItem> _SRSItems;
		
		private EntityRef<RoEmployee> _RoEmployee;
		
		private EntityRef<RoDivision> _RoDivision1;
		
		private EntityRef<RoEmployee> _RoEmployee1;
		
		private EntityRef<RoEmployee> _RoEmployee3;
		
		private EntityRef<RoEmployee> _RoEmployee4;
		
		private EntityRef<RoDivision> _RoDivision2;
		
		private EntityRef<HeadOfAccount> _HeadOfAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSRSIdChanging(int value);
    partial void OnSRSIdChanged();
    partial void OnSRSCodeChanging(string value);
    partial void OnSRSCodeChanged();
    partial void OnSRSCreateDateChanging(System.DateTime value);
    partial void OnSRSCreateDateChanged();
    partial void OnSRSFromChanging(System.Nullable<int> value);
    partial void OnSRSFromChanged();
    partial void OnSRSToChanging(System.Nullable<int> value);
    partial void OnSRSToChanged();
    partial void OnIssuedToChanging(string value);
    partial void OnIssuedToChanged();
    partial void OnVehicleNumberChanging(string value);
    partial void OnVehicleNumberChanged();
    partial void OnChargeableToChanging(System.Nullable<int> value);
    partial void OnChargeableToChanged();
    partial void OnApplyingOfficerChanging(System.Nullable<int> value);
    partial void OnApplyingOfficerChanged();
    partial void OnReceivingOfficerChanging(System.Nullable<int> value);
    partial void OnReceivingOfficerChanged();
    partial void OnIntendingOfficerChanging(System.Nullable<int> value);
    partial void OnIntendingOfficerChanged();
    partial void OnIssuingOfficerChanging(System.Nullable<int> value);
    partial void OnIssuingOfficerChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public SRS()
		{
			this._SRSItems = new EntitySet<SRSItem>(new Action<SRSItem>(this.attach_SRSItems), new Action<SRSItem>(this.detach_SRSItems));
			this._RoEmployee = default(EntityRef<RoEmployee>);
			this._RoDivision1 = default(EntityRef<RoDivision>);
			this._RoEmployee1 = default(EntityRef<RoEmployee>);
			this._RoEmployee3 = default(EntityRef<RoEmployee>);
			this._RoEmployee4 = default(EntityRef<RoEmployee>);
			this._RoDivision2 = default(EntityRef<RoDivision>);
			this._HeadOfAccount = default(EntityRef<HeadOfAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRSId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int SRSId
		{
			get
			{
				return this._SRSId;
			}
			set
			{
				if ((this._SRSId != value))
				{
					this.OnSRSIdChanging(value);
					this.SendPropertyChanging();
					this._SRSId = value;
					this.SendPropertyChanged("SRSId");
					this.OnSRSIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRSCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SRSCode
		{
			get
			{
				return this._SRSCode;
			}
			set
			{
				if ((this._SRSCode != value))
				{
					this.OnSRSCodeChanging(value);
					this.SendPropertyChanging();
					this._SRSCode = value;
					this.SendPropertyChanged("SRSCode");
					this.OnSRSCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRSDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime SRSCreateDate
		{
			get
			{
				return this._SRSDate;
			}
			set
			{
				if ((this._SRSDate != value))
				{
					this.OnSRSCreateDateChanging(value);
					this.SendPropertyChanging();
					this._SRSDate = value;
					this.SendPropertyChanged("SRSCreateDate");
					this.OnSRSCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRSFrom", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SRSFrom
		{
			get
			{
				return this._SRSFrom;
			}
			set
			{
				if ((this._SRSFrom != value))
				{
					if (this._RoDivision1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSRSFromChanging(value);
					this.SendPropertyChanging();
					this._SRSFrom = value;
					this.SendPropertyChanged("SRSFrom");
					this.OnSRSFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRSTo", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SRSTo
		{
			get
			{
				return this._SRSTo;
			}
			set
			{
				if ((this._SRSTo != value))
				{
					if (this._RoDivision2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSRSToChanging(value);
					this.SendPropertyChanging();
					this._SRSTo = value;
					this.SendPropertyChanged("SRSTo");
					this.OnSRSToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuedTo", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string IssuedTo
		{
			get
			{
				return this._IssuedTo;
			}
			set
			{
				if ((this._IssuedTo != value))
				{
					this.OnIssuedToChanging(value);
					this.SendPropertyChanging();
					this._IssuedTo = value;
					this.SendPropertyChanged("IssuedTo");
					this.OnIssuedToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string VehicleNumber
		{
			get
			{
				return this._VehicleNumber;
			}
			set
			{
				if ((this._VehicleNumber != value))
				{
					this.OnVehicleNumberChanging(value);
					this.SendPropertyChanging();
					this._VehicleNumber = value;
					this.SendPropertyChanged("VehicleNumber");
					this.OnVehicleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeableTo", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ChargeableTo
		{
			get
			{
				return this._ChargeableTo;
			}
			set
			{
				if ((this._ChargeableTo != value))
				{
					if (this._HeadOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChargeableToChanging(value);
					this.SendPropertyChanging();
					this._ChargeableTo = value;
					this.SendPropertyChanged("ChargeableTo");
					this.OnChargeableToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyingOfficer", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ApplyingOfficer
		{
			get
			{
				return this._ApplyingOfficer;
			}
			set
			{
				if ((this._ApplyingOfficer != value))
				{
					if (this._RoEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplyingOfficerChanging(value);
					this.SendPropertyChanging();
					this._ApplyingOfficer = value;
					this.SendPropertyChanged("ApplyingOfficer");
					this.OnApplyingOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingOfficer", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ReceivingOfficer
		{
			get
			{
				return this._ReceivingOfficer;
			}
			set
			{
				if ((this._ReceivingOfficer != value))
				{
					if (this._RoEmployee4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceivingOfficerChanging(value);
					this.SendPropertyChanging();
					this._ReceivingOfficer = value;
					this.SendPropertyChanged("ReceivingOfficer");
					this.OnReceivingOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntendingOfficer", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IntendingOfficer
		{
			get
			{
				return this._IntendingOfficer;
			}
			set
			{
				if ((this._IntendingOfficer != value))
				{
					if (this._RoEmployee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntendingOfficerChanging(value);
					this.SendPropertyChanging();
					this._IntendingOfficer = value;
					this.SendPropertyChanged("IntendingOfficer");
					this.OnIntendingOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuingOfficer", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IssuingOfficer
		{
			get
			{
				return this._IssuingOfficer;
			}
			set
			{
				if ((this._IssuingOfficer != value))
				{
					if (this._RoEmployee3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIssuingOfficerChanging(value);
					this.SendPropertyChanging();
					this._IssuingOfficer = value;
					this.SendPropertyChanged("IssuingOfficer");
					this.OnIssuingOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarchar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SRS_SRSItem", Storage="_SRSItems", ThisKey="SRSId", OtherKey="SRSId")]
		public EntitySet<SRSItem> SRSItems
		{
			get
			{
				return this._SRSItems;
			}
			set
			{
				this._SRSItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_SRS", Storage="_RoEmployee", ThisKey="ApplyingOfficer", OtherKey="EmployeeId", IsForeignKey=true)]
		public RoEmployee RoEmployee
		{
			get
			{
				return this._RoEmployee.Entity;
			}
			set
			{
				RoEmployee previousValue = this._RoEmployee.Entity;
				if (((previousValue != value) 
							|| (this._RoEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoEmployee.Entity = null;
						previousValue.SRs.Remove(this);
					}
					this._RoEmployee.Entity = value;
					if ((value != null))
					{
						value.SRs.Add(this);
						this._ApplyingOfficer = value.EmployeeId;
					}
					else
					{
						this._ApplyingOfficer = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_SRS", Storage="_RoDivision1", ThisKey="SRSFrom", OtherKey="DivisionId", IsForeignKey=true)]
		public RoDivision RoDivision1
		{
			get
			{
				return this._RoDivision1.Entity;
			}
			set
			{
				RoDivision previousValue = this._RoDivision1.Entity;
				if (((previousValue != value) 
							|| (this._RoDivision1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoDivision1.Entity = null;
						previousValue.SRs1.Remove(this);
					}
					this._RoDivision1.Entity = value;
					if ((value != null))
					{
						value.SRs1.Add(this);
						this._SRSFrom = value.DivisionId;
					}
					else
					{
						this._SRSFrom = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoDivision1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_SRS1", Storage="_RoEmployee1", ThisKey="IntendingOfficer", OtherKey="EmployeeId", IsForeignKey=true)]
		public RoEmployee RoEmployee1
		{
			get
			{
				return this._RoEmployee1.Entity;
			}
			set
			{
				RoEmployee previousValue = this._RoEmployee1.Entity;
				if (((previousValue != value) 
							|| (this._RoEmployee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoEmployee1.Entity = null;
						previousValue.SRs1.Remove(this);
					}
					this._RoEmployee1.Entity = value;
					if ((value != null))
					{
						value.SRs1.Add(this);
						this._IntendingOfficer = value.EmployeeId;
					}
					else
					{
						this._IntendingOfficer = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoEmployee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_SRS2", Storage="_RoEmployee3", ThisKey="IssuingOfficer", OtherKey="EmployeeId", IsForeignKey=true)]
		public RoEmployee RoEmployee3
		{
			get
			{
				return this._RoEmployee3.Entity;
			}
			set
			{
				RoEmployee previousValue = this._RoEmployee3.Entity;
				if (((previousValue != value) 
							|| (this._RoEmployee3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoEmployee3.Entity = null;
						previousValue.SRs3.Remove(this);
					}
					this._RoEmployee3.Entity = value;
					if ((value != null))
					{
						value.SRs3.Add(this);
						this._IssuingOfficer = value.EmployeeId;
					}
					else
					{
						this._IssuingOfficer = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoEmployee3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_SRS3", Storage="_RoEmployee4", ThisKey="ReceivingOfficer", OtherKey="EmployeeId", IsForeignKey=true)]
		public RoEmployee RoEmployee4
		{
			get
			{
				return this._RoEmployee4.Entity;
			}
			set
			{
				RoEmployee previousValue = this._RoEmployee4.Entity;
				if (((previousValue != value) 
							|| (this._RoEmployee4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoEmployee4.Entity = null;
						previousValue.SRS4.Remove(this);
					}
					this._RoEmployee4.Entity = value;
					if ((value != null))
					{
						value.SRS4.Add(this);
						this._ReceivingOfficer = value.EmployeeId;
					}
					else
					{
						this._ReceivingOfficer = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoEmployee4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_SRS1", Storage="_RoDivision2", ThisKey="SRSTo", OtherKey="DivisionId", IsForeignKey=true)]
		public RoDivision RoDivision2
		{
			get
			{
				return this._RoDivision2.Entity;
			}
			set
			{
				RoDivision previousValue = this._RoDivision2.Entity;
				if (((previousValue != value) 
							|| (this._RoDivision2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoDivision2.Entity = null;
						previousValue.SRS2.Remove(this);
					}
					this._RoDivision2.Entity = value;
					if ((value != null))
					{
						value.SRS2.Add(this);
						this._SRSTo = value.DivisionId;
					}
					else
					{
						this._SRSTo = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoDivision2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_SRS", Storage="_HeadOfAccount", ThisKey="ChargeableTo", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public HeadOfAccount HeadOfAccount
		{
			get
			{
				return this._HeadOfAccount.Entity;
			}
			set
			{
				HeadOfAccount previousValue = this._HeadOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._HeadOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HeadOfAccount.Entity = null;
						previousValue.SRS.Remove(this);
					}
					this._HeadOfAccount.Entity = value;
					if ((value != null))
					{
						value.SRS.Add(this);
						this._ChargeableTo = value.HeadOfAccountId;
					}
					else
					{
						this._ChargeableTo = default(Nullable<int>);
					}
					this.SendPropertyChanged("HeadOfAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SRSItems(SRSItem entity)
		{
			this.SendPropertyChanging();
			entity.SRS = this;
		}
		
		private void detach_SRSItems(SRSItem entity)
		{
			this.SendPropertyChanging();
			entity.SRS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeadOfAccount")]
	public partial class HeadOfAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HeadOfAccountId = default(int);
		
		private System.Nullable<int> _ParentHeadOfAccountId = default(System.Nullable<int>);
		
		private short _NameWithinParent = default(short);
		
		private string _DisplayName = default(string);
		
		private string _Description = default(string);
		
		private string _HeadOfAccountType = default(string);
		
		private EntitySet<SRSItem> _SRSItems;
		
		private EntitySet<SRS> _SRS;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public HeadOfAccount()
		{
			this._SRSItems = new EntitySet<SRSItem>(new Action<SRSItem>(this.attach_SRSItems), new Action<SRSItem>(this.detach_SRSItems));
			this._SRS = new EntitySet<SRS>(new Action<SRS>(this.attach_SRS), new Action<SRS>(this.detach_SRS));
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentHeadOfAccountId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ParentHeadOfAccountId
		{
			get
			{
				return this._ParentHeadOfAccountId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithinParent", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short NameWithinParent
		{
			get
			{
				return this._NameWithinParent;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountType", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string HeadOfAccountType
		{
			get
			{
				return this._HeadOfAccountType;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_SRSItem", Storage="_SRSItems", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId")]
		public EntitySet<SRSItem> SRSItems
		{
			get
			{
				return this._SRSItems;
			}
			set
			{
				this._SRSItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_SRS", Storage="_SRS", ThisKey="HeadOfAccountId", OtherKey="ChargeableTo")]
		public EntitySet<SRS> SRS
		{
			get
			{
				return this._SRS;
			}
			set
			{
				this._SRS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_Item", Storage="_Items", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SRSItems(SRSItem entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = this;
		}
		
		private void detach_SRSItems(SRSItem entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = null;
		}
		
		private void attach_SRS(SRS entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = this;
		}
		
		private void detach_SRS(SRS entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = null;
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Store.GRNItems")]
	public partial class GRNItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GRNItemId;
		
		private int _GRNId;
		
		private int _ItemId;
		
		private System.Nullable<int> _OrderedQty;
		
		private System.Nullable<int> _AcceptedQty;
		
		private System.Nullable<int> _ReceivedQty;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _LandedPrice;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<SRSIssueItem> _SRSIssueItems;
		
		private EntityRef<GRN> _GRN;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGRNItemIdChanging(int value);
    partial void OnGRNItemIdChanged();
    partial void OnGRNIdChanging(int value);
    partial void OnGRNIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnOrderedQtyChanging(System.Nullable<int> value);
    partial void OnOrderedQtyChanged();
    partial void OnAcceptedQtyChanging(System.Nullable<int> value);
    partial void OnAcceptedQtyChanged();
    partial void OnReceivedQtyChanging(System.Nullable<int> value);
    partial void OnReceivedQtyChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnLandedPriceChanging(System.Nullable<decimal> value);
    partial void OnLandedPriceChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public GRNItem()
		{
			this._SRSIssueItems = new EntitySet<SRSIssueItem>(new Action<SRSIssueItem>(this.attach_SRSIssueItems), new Action<SRSIssueItem>(this.detach_SRSIssueItems));
			this._GRN = default(EntityRef<GRN>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRNItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int GRNItemId
		{
			get
			{
				return this._GRNItemId;
			}
			set
			{
				if ((this._GRNItemId != value))
				{
					this.OnGRNItemIdChanging(value);
					this.SendPropertyChanging();
					this._GRNItemId = value;
					this.SendPropertyChanged("GRNItemId");
					this.OnGRNItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRNId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int GRNId
		{
			get
			{
				return this._GRNId;
			}
			set
			{
				if ((this._GRNId != value))
				{
					if (this._GRN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGRNIdChanging(value);
					this.SendPropertyChanging();
					this._GRNId = value;
					this.SendPropertyChanged("GRNId");
					this.OnGRNIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderedQty", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> OrderedQty
		{
			get
			{
				return this._OrderedQty;
			}
			set
			{
				if ((this._OrderedQty != value))
				{
					this.OnOrderedQtyChanging(value);
					this.SendPropertyChanging();
					this._OrderedQty = value;
					this.SendPropertyChanged("OrderedQty");
					this.OnOrderedQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AcceptedQty
		{
			get
			{
				return this._AcceptedQty;
			}
			set
			{
				if ((this._AcceptedQty != value))
				{
					this.OnAcceptedQtyChanging(value);
					this.SendPropertyChanging();
					this._AcceptedQty = value;
					this.SendPropertyChanged("AcceptedQty");
					this.OnAcceptedQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ReceivedQty
		{
			get
			{
				return this._ReceivedQty;
			}
			set
			{
				if ((this._ReceivedQty != value))
				{
					this.OnReceivedQtyChanging(value);
					this.SendPropertyChanging();
					this._ReceivedQty = value;
					this.SendPropertyChanged("ReceivedQty");
					this.OnReceivedQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandedPrice", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> LandedPrice
		{
			get
			{
				return this._LandedPrice;
			}
			set
			{
				if ((this._LandedPrice != value))
				{
					this.OnLandedPriceChanging(value);
					this.SendPropertyChanging();
					this._LandedPrice = value;
					this.SendPropertyChanged("LandedPrice");
					this.OnLandedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRNItem_SRSIssueItem", Storage="_SRSIssueItems", ThisKey="GRNItemId", OtherKey="GRNItemId")]
		public EntitySet<SRSIssueItem> SRSIssueItems
		{
			get
			{
				return this._SRSIssueItems;
			}
			set
			{
				this._SRSIssueItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRN_GRNItem", Storage="_GRN", ThisKey="GRNId", OtherKey="GRNId", IsForeignKey=true)]
		public GRN GRN
		{
			get
			{
				return this._GRN.Entity;
			}
			set
			{
				GRN previousValue = this._GRN.Entity;
				if (((previousValue != value) 
							|| (this._GRN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRN.Entity = null;
						previousValue.GRNItems.Remove(this);
					}
					this._GRN.Entity = value;
					if ((value != null))
					{
						value.GRNItems.Add(this);
						this._GRNId = value.GRNId;
					}
					else
					{
						this._GRNId = default(int);
					}
					this.SendPropertyChanged("GRN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_GRNItem", Storage="_Item", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.GRNItems.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.GRNItems.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SRSIssueItems(SRSIssueItem entity)
		{
			this.SendPropertyChanging();
			entity.GRNItem = this;
		}
		
		private void detach_SRSIssueItems(SRSIssueItem entity)
		{
			this.SendPropertyChanging();
			entity.GRNItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Store.SRSIssueItems")]
	public partial class SRSIssueItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SRSIssueItemId;
		
		private System.Nullable<int> _GRNItemId;
		
		private int _SRSItemId;
		
		private System.Nullable<int> _QtyIssued;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<GRNItem> _GRNItem;
		
		private EntityRef<SRSItem> _SRSItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSRSIssueItemIdChanging(int value);
    partial void OnSRSIssueItemIdChanged();
    partial void OnGRNItemIdChanging(System.Nullable<int> value);
    partial void OnGRNItemIdChanged();
    partial void OnSRSItemIdChanging(int value);
    partial void OnSRSItemIdChanged();
    partial void OnQtyIssuedChanging(System.Nullable<int> value);
    partial void OnQtyIssuedChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public SRSIssueItem()
		{
			this._GRNItem = default(EntityRef<GRNItem>);
			this._SRSItem = default(EntityRef<SRSItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRSIssueItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int SRSIssueItemId
		{
			get
			{
				return this._SRSIssueItemId;
			}
			set
			{
				if ((this._SRSIssueItemId != value))
				{
					this.OnSRSIssueItemIdChanging(value);
					this.SendPropertyChanging();
					this._SRSIssueItemId = value;
					this.SendPropertyChanged("SRSIssueItemId");
					this.OnSRSIssueItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRNItemId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> GRNItemId
		{
			get
			{
				return this._GRNItemId;
			}
			set
			{
				if ((this._GRNItemId != value))
				{
					if (this._GRNItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGRNItemIdChanging(value);
					this.SendPropertyChanging();
					this._GRNItemId = value;
					this.SendPropertyChanged("GRNItemId");
					this.OnGRNItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRSItemId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SRSItemId
		{
			get
			{
				return this._SRSItemId;
			}
			set
			{
				if ((this._SRSItemId != value))
				{
					if (this._SRSItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSRSItemIdChanging(value);
					this.SendPropertyChanging();
					this._SRSItemId = value;
					this.SendPropertyChanged("SRSItemId");
					this.OnSRSItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyIssued", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> QtyIssued
		{
			get
			{
				return this._QtyIssued;
			}
			set
			{
				if ((this._QtyIssued != value))
				{
					this.OnQtyIssuedChanging(value);
					this.SendPropertyChanging();
					this._QtyIssued = value;
					this.SendPropertyChanged("QtyIssued");
					this.OnQtyIssuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRNItem_SRSIssueItem", Storage="_GRNItem", ThisKey="GRNItemId", OtherKey="GRNItemId", IsForeignKey=true)]
		public GRNItem GRNItem
		{
			get
			{
				return this._GRNItem.Entity;
			}
			set
			{
				GRNItem previousValue = this._GRNItem.Entity;
				if (((previousValue != value) 
							|| (this._GRNItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRNItem.Entity = null;
						previousValue.SRSIssueItems.Remove(this);
					}
					this._GRNItem.Entity = value;
					if ((value != null))
					{
						value.SRSIssueItems.Add(this);
						this._GRNItemId = value.GRNItemId;
					}
					else
					{
						this._GRNItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("GRNItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SRSItem_SRSIssueItem", Storage="_SRSItem", ThisKey="SRSItemId", OtherKey="SRSItemId", IsForeignKey=true)]
		public SRSItem SRSItem
		{
			get
			{
				return this._SRSItem.Entity;
			}
			set
			{
				SRSItem previousValue = this._SRSItem.Entity;
				if (((previousValue != value) 
							|| (this._SRSItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SRSItem.Entity = null;
						previousValue.SRSIssueItems.Remove(this);
					}
					this._SRSItem.Entity = value;
					if ((value != null))
					{
						value.SRSIssueItems.Add(this);
						this._SRSItemId = value.SRSItemId;
					}
					else
					{
						this._SRSItemId = default(int);
					}
					this.SendPropertyChanged("SRSItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Store.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private string _ItemCode;
		
		private System.Nullable<int> _ItemCategoryId;
		
		private string _Description;
		
		private System.Nullable<int> _UOMId;
		
		private System.Nullable<int> _HeadOfAccountId;
		
		private System.Nullable<int> _ReorderingLevel;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private string _Brand;
		
		private string _Color;
		
		private string _Identifier;
		
		private string _Dimension;
		
		private string _Size;
		
		private string _Remark;
		
		private EntitySet<SRSItem> _SRSItems;
		
		private EntitySet<GRNItem> _GRNItems;
		
		private EntityRef<HeadOfAccount> _HeadOfAccount;
		
		private EntityRef<ItemCategory> _ItemCategory;
		
		private EntityRef<UOM> _UOM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemCategoryIdChanging(System.Nullable<int> value);
    partial void OnItemCategoryIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUOMIdChanging(System.Nullable<int> value);
    partial void OnUOMIdChanged();
    partial void OnHeadOfAccountIdChanging(System.Nullable<int> value);
    partial void OnHeadOfAccountIdChanged();
    partial void OnReorderingLevelChanging(System.Nullable<int> value);
    partial void OnReorderingLevelChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnIdentifierChanging(string value);
    partial void OnIdentifierChanged();
    partial void OnDimensionChanging(string value);
    partial void OnDimensionChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Item()
		{
			this._SRSItems = new EntitySet<SRSItem>(new Action<SRSItem>(this.attach_SRSItems), new Action<SRSItem>(this.detach_SRSItems));
			this._GRNItems = new EntitySet<GRNItem>(new Action<GRNItem>(this.attach_GRNItems), new Action<GRNItem>(this.detach_GRNItems));
			this._HeadOfAccount = default(EntityRef<HeadOfAccount>);
			this._ItemCategory = default(EntityRef<ItemCategory>);
			this._UOM = default(EntityRef<UOM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategoryId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ItemCategoryId
		{
			get
			{
				return this._ItemCategoryId;
			}
			set
			{
				if ((this._ItemCategoryId != value))
				{
					if (this._ItemCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemCategoryId = value;
					this.SendPropertyChanged("ItemCategoryId");
					this.OnItemCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> UOMId
		{
			get
			{
				return this._UOMId;
			}
			set
			{
				if ((this._UOMId != value))
				{
					if (this._UOM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUOMIdChanging(value);
					this.SendPropertyChanging();
					this._UOMId = value;
					this.SendPropertyChanged("UOMId");
					this.OnUOMIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", DbType="Int ", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
			set
			{
				if ((this._HeadOfAccountId != value))
				{
					if (this._HeadOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._HeadOfAccountId = value;
					this.SendPropertyChanged("HeadOfAccountId");
					this.OnHeadOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderingLevel", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ReorderingLevel
		{
			get
			{
				return this._ReorderingLevel;
			}
			set
			{
				if ((this._ReorderingLevel != value))
				{
					this.OnReorderingLevelChanging(value);
					this.SendPropertyChanging();
					this._ReorderingLevel = value;
					this.SendPropertyChanged("ReorderingLevel");
					this.OnReorderingLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identifier", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Identifier
		{
			get
			{
				return this._Identifier;
			}
			set
			{
				if ((this._Identifier != value))
				{
					this.OnIdentifierChanging(value);
					this.SendPropertyChanging();
					this._Identifier = value;
					this.SendPropertyChanged("Identifier");
					this.OnIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimension", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Dimension
		{
			get
			{
				return this._Dimension;
			}
			set
			{
				if ((this._Dimension != value))
				{
					this.OnDimensionChanging(value);
					this.SendPropertyChanging();
					this._Dimension = value;
					this.SendPropertyChanged("Dimension");
					this.OnDimensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarchar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarchar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_SRSItem", Storage="_SRSItems", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<SRSItem> SRSItems
		{
			get
			{
				return this._SRSItems;
			}
			set
			{
				this._SRSItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_GRNItem", Storage="_GRNItems", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<GRNItem> GRNItems
		{
			get
			{
				return this._GRNItems;
			}
			set
			{
				this._GRNItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_Item", Storage="_HeadOfAccount", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public HeadOfAccount HeadOfAccount
		{
			get
			{
				return this._HeadOfAccount.Entity;
			}
			set
			{
				HeadOfAccount previousValue = this._HeadOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._HeadOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HeadOfAccount.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._HeadOfAccount.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._HeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._HeadOfAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("HeadOfAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemCategory_Item", Storage="_ItemCategory", ThisKey="ItemCategoryId", OtherKey="ItemCategoryId", IsForeignKey=true)]
		public ItemCategory ItemCategory
		{
			get
			{
				return this._ItemCategory.Entity;
			}
			set
			{
				ItemCategory previousValue = this._ItemCategory.Entity;
				if (((previousValue != value) 
							|| (this._ItemCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemCategory.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._ItemCategory.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._ItemCategoryId = value.ItemCategoryId;
					}
					else
					{
						this._ItemCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ItemCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UOM_Item", Storage="_UOM", ThisKey="UOMId", OtherKey="UOMId", IsForeignKey=true)]
		public UOM UOM
		{
			get
			{
				return this._UOM.Entity;
			}
			set
			{
				UOM previousValue = this._UOM.Entity;
				if (((previousValue != value) 
							|| (this._UOM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UOM.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._UOM.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._UOMId = value.UOMId;
					}
					else
					{
						this._UOMId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UOM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SRSItems(SRSItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_SRSItems(SRSItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_GRNItems(GRNItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_GRNItems(GRNItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
}
#pragma warning restore 1591
