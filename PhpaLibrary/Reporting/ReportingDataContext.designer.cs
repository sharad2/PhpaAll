#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eclipse.PhpaLibrary.Reporting
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Phpa2")]
	public partial class ReportingDataContext : Eclipse.PhpaLibrary.Database.DataContextBase
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRoVoucherDetail(RoVoucherDetail instance);
    partial void UpdateRoVoucherDetail(RoVoucherDetail instance);
    partial void DeleteRoVoucherDetail(RoVoucherDetail instance);
    partial void InsertRoVoucher(RoVoucher instance);
    partial void UpdateRoVoucher(RoVoucher instance);
    partial void DeleteRoVoucher(RoVoucher instance);
    partial void InsertRoHeadHierarchy(RoHeadHierarchy instance);
    partial void UpdateRoHeadHierarchy(RoHeadHierarchy instance);
    partial void DeleteRoHeadHierarchy(RoHeadHierarchy instance);
    partial void InsertRoJob(RoJob instance);
    partial void UpdateRoJob(RoJob instance);
    partial void DeleteRoJob(RoJob instance);
    partial void InsertRoEmployee(RoEmployee instance);
    partial void UpdateRoEmployee(RoEmployee instance);
    partial void DeleteRoEmployee(RoEmployee instance);
    partial void InsertRoContractor(RoContractor instance);
    partial void UpdateRoContractor(RoContractor instance);
    partial void DeleteRoContractor(RoContractor instance);
    partial void InsertRoDivision(RoDivision instance);
    partial void UpdateRoDivision(RoDivision instance);
    partial void DeleteRoDivision(RoDivision instance);
    partial void InsertRoBudget(RoBudget instance);
    partial void UpdateRoBudget(RoBudget instance);
    partial void DeleteRoBudget(RoBudget instance);
    partial void InsertRoAccountType(RoAccountType instance);
    partial void UpdateRoAccountType(RoAccountType instance);
    partial void DeleteRoAccountType(RoAccountType instance);
    partial void InsertHeadOfAccount(HeadOfAccount instance);
    partial void UpdateHeadOfAccount(HeadOfAccount instance);
    partial void DeleteHeadOfAccount(HeadOfAccount instance);
    partial void InsertRoSalaryPeriod(RoSalaryPeriod instance);
    partial void UpdateRoSalaryPeriod(RoSalaryPeriod instance);
    partial void DeleteRoSalaryPeriod(RoSalaryPeriod instance);
    #endregion
		
		public ReportingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RoVoucherDetail> RoVoucherDetails
		{
			get
			{
				return this.GetTable<RoVoucherDetail>();
			}
		}
		
		public System.Data.Linq.Table<RoVoucher> RoVouchers
		{
			get
			{
				return this.GetTable<RoVoucher>();
			}
		}
		
		public System.Data.Linq.Table<RoHeadHierarchy> RoHeadHierarchies
		{
			get
			{
				return this.GetTable<RoHeadHierarchy>();
			}
		}
		
		public System.Data.Linq.Table<RoJob> RoJobs
		{
			get
			{
				return this.GetTable<RoJob>();
			}
		}
		
		public System.Data.Linq.Table<RoEmployee> RoEmployees
		{
			get
			{
				return this.GetTable<RoEmployee>();
			}
		}
		
		public System.Data.Linq.Table<RoContractor> RoContractors
		{
			get
			{
				return this.GetTable<RoContractor>();
			}
		}
		
		public System.Data.Linq.Table<RoDivision> RoDivisions
		{
			get
			{
				return this.GetTable<RoDivision>();
			}
		}
		
		public System.Data.Linq.Table<RoBudget> RoBudgets
		{
			get
			{
				return this.GetTable<RoBudget>();
			}
		}
		
		public System.Data.Linq.Table<RoAccountType> RoAccountTypes
		{
			get
			{
				return this.GetTable<RoAccountType>();
			}
		}
		
		public System.Data.Linq.Table<HeadOfAccount> HeadOfAccounts
		{
			get
			{
				return this.GetTable<HeadOfAccount>();
			}
		}
		
		public System.Data.Linq.Table<RoSalaryPeriod> RoSalaryPeriods
		{
			get
			{
				return this.GetTable<RoSalaryPeriod>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VoucherDetail")]
	public partial class RoVoucherDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoucherDetailId = default(int);
		
		private int _VoucherId = default(int);
		
		private int _HeadOfAccountId = default(int);
		
		private System.Nullable<int> _JobId = default(System.Nullable<int>);
		
		private System.Nullable<int> _EmployeeId = default(System.Nullable<int>);
		
		private System.Nullable<decimal> _DebitAmount = default(System.Nullable<decimal>);
		
		private System.Nullable<decimal> _CreditAmount = default(System.Nullable<decimal>);
		
		private System.Nullable<int> _ContractorId = default(System.Nullable<int>);
		
		private EntityRef<RoVoucher> _RoVoucher;
		
		private EntityRef<RoHeadHierarchy> _RoHeadHierarchy;
		
		private EntityRef<RoJob> _RoJob;
		
		private EntityRef<RoEmployee> _RoEmployee;
		
		private EntityRef<HeadOfAccount> _HeadOfAccount;
		
		private EntityRef<RoContractor> _RoContractor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public RoVoucherDetail()
		{
			this._RoVoucher = default(EntityRef<RoVoucher>);
			this._RoHeadHierarchy = default(EntityRef<RoHeadHierarchy>);
			this._RoJob = default(EntityRef<RoJob>);
			this._RoEmployee = default(EntityRef<RoEmployee>);
			this._HeadOfAccount = default(EntityRef<HeadOfAccount>);
			this._RoContractor = default(EntityRef<RoContractor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherDetailId", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int VoucherDetailId
		{
			get
			{
				return this._VoucherDetailId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int VoucherId
		{
			get
			{
				return this._VoucherId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> JobId
		{
			get
			{
				return this._JobId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ContractorId
		{
			get
			{
				return this._ContractorId;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoVoucher_RoVoucherDetail", Storage="_RoVoucher", ThisKey="VoucherId", OtherKey="VoucherId", IsForeignKey=true)]
		public RoVoucher RoVoucher
		{
			get
			{
				return this._RoVoucher.Entity;
			}
			set
			{
				RoVoucher previousValue = this._RoVoucher.Entity;
				if (((previousValue != value) 
							|| (this._RoVoucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoVoucher.Entity = null;
						previousValue.RoVoucherDetails.Remove(this);
					}
					this._RoVoucher.Entity = value;
					if ((value != null))
					{
						value.RoVoucherDetails.Add(this);
						this._VoucherId = value.VoucherId;
					}
					else
					{
						this._VoucherId = default(int);
					}
					this.SendPropertyChanged("RoVoucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoHeadHierarchy_RoVoucherDetail", Storage="_RoHeadHierarchy", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public RoHeadHierarchy RoHeadHierarchy
		{
			get
			{
				return this._RoHeadHierarchy.Entity;
			}
			set
			{
				RoHeadHierarchy previousValue = this._RoHeadHierarchy.Entity;
				if (((previousValue != value) 
							|| (this._RoHeadHierarchy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoHeadHierarchy.Entity = null;
						previousValue.RoVoucherDetails.Remove(this);
					}
					this._RoHeadHierarchy.Entity = value;
					if ((value != null))
					{
						value.RoVoucherDetails.Add(this);
						this._HeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._HeadOfAccountId = default(int);
					}
					this.SendPropertyChanged("RoHeadHierarchy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoJob_RoVoucherDetail", Storage="_RoJob", ThisKey="JobId", OtherKey="JobId", IsForeignKey=true)]
		public RoJob RoJob
		{
			get
			{
				return this._RoJob.Entity;
			}
			set
			{
				RoJob previousValue = this._RoJob.Entity;
				if (((previousValue != value) 
							|| (this._RoJob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoJob.Entity = null;
						previousValue.RoVoucherDetails.Remove(this);
					}
					this._RoJob.Entity = value;
					if ((value != null))
					{
						value.RoVoucherDetails.Add(this);
						this._JobId = value.JobId;
					}
					else
					{
						this._JobId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoJob");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_RoVoucherDetail", Storage="_RoEmployee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public RoEmployee RoEmployee
		{
			get
			{
				return this._RoEmployee.Entity;
			}
			set
			{
				RoEmployee previousValue = this._RoEmployee.Entity;
				if (((previousValue != value) 
							|| (this._RoEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoEmployee.Entity = null;
						previousValue.RoVoucherDetails.Remove(this);
					}
					this._RoEmployee.Entity = value;
					if ((value != null))
					{
						value.RoVoucherDetails.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_RoVoucherDetail", Storage="_HeadOfAccount", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public HeadOfAccount HeadOfAccount
		{
			get
			{
				return this._HeadOfAccount.Entity;
			}
			set
			{
				HeadOfAccount previousValue = this._HeadOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._HeadOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HeadOfAccount.Entity = null;
						previousValue.RoVoucherDetails.Remove(this);
					}
					this._HeadOfAccount.Entity = value;
					if ((value != null))
					{
						value.RoVoucherDetails.Add(this);
						this._HeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._HeadOfAccountId = default(int);
					}
					this.SendPropertyChanged("HeadOfAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoContractor_RoVoucherDetail", Storage="_RoContractor", ThisKey="ContractorId", OtherKey="ContractorId", IsForeignKey=true)]
		public RoContractor RoContractor
		{
			get
			{
				return this._RoContractor.Entity;
			}
			set
			{
				RoContractor previousValue = this._RoContractor.Entity;
				if (((previousValue != value) 
							|| (this._RoContractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoContractor.Entity = null;
						previousValue.RoVoucherDetails.Remove(this);
					}
					this._RoContractor.Entity = value;
					if ((value != null))
					{
						value.RoVoucherDetails.Add(this);
						this._ContractorId = value.ContractorId;
					}
					else
					{
						this._ContractorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoContractor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class RoVoucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoucherId = default(int);
		
		private char _VoucherType = default(char);
		
		private System.DateTime _VoucherDate = default(System.DateTime);
		
		private string _VoucherCode = default(string);
		
		private System.Nullable<int> _DivisionId = default(System.Nullable<int>);
		
		private System.Nullable<int> _CheckNumber = default(System.Nullable<int>);
		
		private string _PayeeName = default(string);
		
		private string _Particulars = default(string);
		
		private System.Nullable<System.DateTime> _Created = default(System.Nullable<System.DateTime>);
		
		private System.Nullable<System.DateTime> _Modified = default(System.Nullable<System.DateTime>);
		
		private System.Nullable<int> _StationId;
		
		private EntitySet<RoVoucherDetail> _RoVoucherDetails;
		
		private EntityRef<RoDivision> _RoDivision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStationIdChanging(System.Nullable<int> value);
    partial void OnStationIdChanged();
    #endregion
		
		public RoVoucher()
		{
			this._RoVoucherDetails = new EntitySet<RoVoucherDetail>(new Action<RoVoucherDetail>(this.attach_RoVoucherDetails), new Action<RoVoucherDetail>(this.detach_RoVoucherDetails));
			this._RoDivision = default(EntityRef<RoDivision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherId", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int VoucherId
		{
			get
			{
				return this._VoucherId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherType", DbType="NVarChar(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char VoucherType
		{
			get
			{
				return this._VoucherType;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime VoucherDate
		{
			get
			{
				return this._VoucherDate;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="NVARCHAR(50)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId")]
		public System.Nullable<int> StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoVoucher_RoVoucherDetail", Storage="_RoVoucherDetails", ThisKey="VoucherId", OtherKey="VoucherId")]
		public EntitySet<RoVoucherDetail> RoVoucherDetails
		{
			get
			{
				return this._RoVoucherDetails;
			}
			set
			{
				this._RoVoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_RoVoucher", Storage="_RoDivision", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public RoDivision RoDivision
		{
			get
			{
				return this._RoDivision.Entity;
			}
			set
			{
				RoDivision previousValue = this._RoDivision.Entity;
				if (((previousValue != value) 
							|| (this._RoDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoDivision.Entity = null;
						previousValue.RoVouchers.Remove(this);
					}
					this._RoDivision.Entity = value;
					if ((value != null))
					{
						value.RoVouchers.Add(this);
						this._DivisionId = value.DivisionId;
					}
					else
					{
						this._DivisionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoDivision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoVoucher = this;
		}
		
		private void detach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoVoucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeadHierarchy")]
	public partial class RoHeadHierarchy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HeadOfAccountId = default(int);
		
		private string _StoredDisplayName = default(string);
		
		private short _NameWithinParent = default(short);
		
		private short _TopParentName = default(short);
		
		private long _SortableName = default(long);
		
		private string _Description = default(string);
		
		private string _HierarchyPath = default(string);
		
		private int _Level = default(int);
		
		private System.Nullable<int> _ParentHeadOfAccountId = default(System.Nullable<int>);
		
		private int _CountChildren = default(int);
		
		private System.Nullable<decimal> _ProjectCost = default(System.Nullable<decimal>);
		
		private string _HeadOfAccountType = default(string);
		
		private System.Nullable<decimal> _RevisedProjectCost = default(System.Nullable<decimal>);
		
		private int _TopParentId = default(int);
		
		private System.Nullable<int> _StationId;
		
		private EntitySet<RoVoucherDetail> _RoVoucherDetails;
		
		private EntitySet<RoJob> _RoJobs;
		
		private EntitySet<RoBudget> _RoBudgets;
		
		private EntityRef<RoAccountType> _RoAccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStationIdChanging(System.Nullable<int> value);
    partial void OnStationIdChanged();
    #endregion
		
		public RoHeadHierarchy()
		{
			this._RoVoucherDetails = new EntitySet<RoVoucherDetail>(new Action<RoVoucherDetail>(this.attach_RoVoucherDetails), new Action<RoVoucherDetail>(this.detach_RoVoucherDetails));
			this._RoJobs = new EntitySet<RoJob>(new Action<RoJob>(this.attach_RoJobs), new Action<RoJob>(this.detach_RoJobs));
			this._RoBudgets = new EntitySet<RoBudget>(new Action<RoBudget>(this.attach_RoBudgets), new Action<RoBudget>(this.detach_RoBudgets));
			this._RoAccountType = default(EntityRef<RoAccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", DbType="Int", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StoredDisplayName", Storage="_StoredDisplayName", DbType="VarChar(50)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayName
		{
			get
			{
				return this._StoredDisplayName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithinParent", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public short NameWithinParent
		{
			get
			{
				return this._NameWithinParent;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopParentName", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public short TopParentName
		{
			get
			{
				return this._TopParentName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortableName", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public long SortableName
		{
			get
			{
				return this._SortableName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HierarchyPath", DbType="VarChar(256)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HierarchyPath
		{
			get
			{
				return this._HierarchyPath;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int Level
		{
			get
			{
				return this._Level;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentHeadOfAccountId", DbType="int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ParentHeadOfAccountId
		{
			get
			{
				return this._ParentHeadOfAccountId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountChildren", DbType="int", UpdateCheck=UpdateCheck.Never)]
		public int CountChildren
		{
			get
			{
				return this._CountChildren;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCost", DbType="money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ProjectCost
		{
			get
			{
				return this._ProjectCost;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountType", DbType="Varchar(20)", UpdateCheck=UpdateCheck.Never)]
		public string HeadOfAccountType
		{
			get
			{
				return this._HeadOfAccountType;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisedProjectCost", DbType="money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RevisedProjectCost
		{
			get
			{
				return this._RevisedProjectCost;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopParentId", UpdateCheck=UpdateCheck.Never)]
		public int TopParentId
		{
			get
			{
				return this._TopParentId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId")]
		public System.Nullable<int> StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoHeadHierarchy_RoVoucherDetail", Storage="_RoVoucherDetails", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId")]
		public EntitySet<RoVoucherDetail> RoVoucherDetails
		{
			get
			{
				return this._RoVoucherDetails;
			}
			set
			{
				this._RoVoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoHeadHierarchy_RoJob", Storage="_RoJobs", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId")]
		public EntitySet<RoJob> RoJobs
		{
			get
			{
				return this._RoJobs;
			}
			set
			{
				this._RoJobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoHeadHierarchy_RoBudget", Storage="_RoBudgets", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId")]
		public EntitySet<RoBudget> RoBudgets
		{
			get
			{
				return this._RoBudgets;
			}
			set
			{
				this._RoBudgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoAccountType_RoHeadHierarchy", Storage="_RoAccountType", ThisKey="HeadOfAccountType", OtherKey="HeadOfAccountType", IsForeignKey=true)]
		public RoAccountType RoAccountType
		{
			get
			{
				return this._RoAccountType.Entity;
			}
			set
			{
				RoAccountType previousValue = this._RoAccountType.Entity;
				if (((previousValue != value) 
							|| (this._RoAccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoAccountType.Entity = null;
						previousValue.RoHeadHierarchies.Remove(this);
					}
					this._RoAccountType.Entity = value;
					if ((value != null))
					{
						value.RoHeadHierarchies.Add(this);
						this._HeadOfAccountType = value.HeadOfAccountType;
					}
					else
					{
						this._HeadOfAccountType = default(string);
					}
					this.SendPropertyChanged("RoAccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoHeadHierarchy = this;
		}
		
		private void detach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoHeadHierarchy = null;
		}
		
		private void attach_RoJobs(RoJob entity)
		{
			this.SendPropertyChanging();
			entity.RoHeadHierarchy = this;
		}
		
		private void detach_RoJobs(RoJob entity)
		{
			this.SendPropertyChanging();
			entity.RoHeadHierarchy = null;
		}
		
		private void attach_RoBudgets(RoBudget entity)
		{
			this.SendPropertyChanging();
			entity.RoHeadHierarchy = this;
		}
		
		private void detach_RoBudgets(RoBudget entity)
		{
			this.SendPropertyChanging();
			entity.RoHeadHierarchy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class RoJob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobId = default(int);
		
		private string _JobCode = default(string);
		
		private string _Description = default(string);
		
		private string _TypeFlag = default(string);
		
		private decimal _SanctionedAmount = default(decimal);
		
		private System.Nullable<int> _HeadOfAccountId = default(System.Nullable<int>);
		
		private int _DivisionId = default(int);
		
		private System.Nullable<decimal> _ContractAmount = default(System.Nullable<decimal>);
		
		private System.Nullable<int> _ContractorId = default(System.Nullable<int>);
		
		private System.Nullable<decimal> _RevisedSanction = default(System.Nullable<decimal>);
		
		private System.Nullable<decimal> _RevisedContract = default(System.Nullable<decimal>);
		
		private System.Nullable<System.DateTime> _SanctionDate;
		
		private string _SanctionNumber;
		
		private string _WorkOrderNumber;
		
		private System.Nullable<System.DateTime> _WorkOrderDate;
		
		private System.Nullable<System.DateTime> _CommencementDate;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private System.Nullable<System.DateTime> _AwardDate;
		
		private string _PackageName;
		
		private EntitySet<RoVoucherDetail> _RoVoucherDetails;
		
		private EntityRef<RoHeadHierarchy> _RoHeadHierarchy;
		
		private EntityRef<RoDivision> _RoDivision;
		
		private EntityRef<RoContractor> _RoContractor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSanctionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSanctionDateChanged();
    partial void OnSanctionNumberChanging(string value);
    partial void OnSanctionNumberChanged();
    partial void OnWorkOrderNumberChanging(string value);
    partial void OnWorkOrderNumberChanged();
    partial void OnWorkOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWorkOrderDateChanged();
    partial void OnCommencementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCommencementDateChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    partial void OnAwardDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAwardDateChanged();
    partial void OnPackageNameChanging(string value);
    partial void OnPackageNameChanged();
    #endregion
		
		public RoJob()
		{
			this._RoVoucherDetails = new EntitySet<RoVoucherDetail>(new Action<RoVoucherDetail>(this.attach_RoVoucherDetails), new Action<RoVoucherDetail>(this.detach_RoVoucherDetails));
			this._RoHeadHierarchy = default(EntityRef<RoHeadHierarchy>);
			this._RoDivision = default(EntityRef<RoDivision>);
			this._RoContractor = default(EntityRef<RoContractor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int JobId
		{
			get
			{
				return this._JobId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="nvarchar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeFlag", DbType="nvarchar(1)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TypeFlag
		{
			get
			{
				return this._TypeFlag;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanctionedAmount", DbType="money", UpdateCheck=UpdateCheck.Never)]
		public decimal SanctionedAmount
		{
			get
			{
				return this._SanctionedAmount;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="HeadOfAccountId ", Storage="_HeadOfAccountId", DbType="int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="int", UpdateCheck=UpdateCheck.Never)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractAmount", DbType="money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ContractAmount
		{
			get
			{
				return this._ContractAmount;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", DbType="int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ContractorId
		{
			get
			{
				return this._ContractorId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisedSanction", DbType="money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RevisedSanction
		{
			get
			{
				return this._RevisedSanction;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisedContract", DbType="money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RevisedContract
		{
			get
			{
				return this._RevisedContract;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanctionDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SanctionDate
		{
			get
			{
				return this._SanctionDate;
			}
			set
			{
				if ((this._SanctionDate != value))
				{
					this.OnSanctionDateChanging(value);
					this.SendPropertyChanging();
					this._SanctionDate = value;
					this.SendPropertyChanged("SanctionDate");
					this.OnSanctionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanctionNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SanctionNumber
		{
			get
			{
				return this._SanctionNumber;
			}
			set
			{
				if ((this._SanctionNumber != value))
				{
					this.OnSanctionNumberChanging(value);
					this.SendPropertyChanging();
					this._SanctionNumber = value;
					this.SendPropertyChanged("SanctionNumber");
					this.OnSanctionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string WorkOrderNumber
		{
			get
			{
				return this._WorkOrderNumber;
			}
			set
			{
				if ((this._WorkOrderNumber != value))
				{
					this.OnWorkOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNumber = value;
					this.SendPropertyChanged("WorkOrderNumber");
					this.OnWorkOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> WorkOrderDate
		{
			get
			{
				return this._WorkOrderDate;
			}
			set
			{
				if ((this._WorkOrderDate != value))
				{
					this.OnWorkOrderDateChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderDate = value;
					this.SendPropertyChanged("WorkOrderDate");
					this.OnWorkOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommencementDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CommencementDate
		{
			get
			{
				return this._CommencementDate;
			}
			set
			{
				if ((this._CommencementDate != value))
				{
					this.OnCommencementDateChanging(value);
					this.SendPropertyChanging();
					this._CommencementDate = value;
					this.SendPropertyChanged("CommencementDate");
					this.OnCommencementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwardDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AwardDate
		{
			get
			{
				return this._AwardDate;
			}
			set
			{
				if ((this._AwardDate != value))
				{
					this.OnAwardDateChanging(value);
					this.SendPropertyChanging();
					this._AwardDate = value;
					this.SendPropertyChanged("AwardDate");
					this.OnAwardDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageName", DbType="nvarchar(60)", UpdateCheck=UpdateCheck.Never)]
		public string PackageName
		{
			get
			{
				return this._PackageName;
			}
			set
			{
				if ((this._PackageName != value))
				{
					this.OnPackageNameChanging(value);
					this.SendPropertyChanging();
					this._PackageName = value;
					this.SendPropertyChanged("PackageName");
					this.OnPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoJob_RoVoucherDetail", Storage="_RoVoucherDetails", ThisKey="JobId", OtherKey="JobId")]
		public EntitySet<RoVoucherDetail> RoVoucherDetails
		{
			get
			{
				return this._RoVoucherDetails;
			}
			set
			{
				this._RoVoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoHeadHierarchy_RoJob", Storage="_RoHeadHierarchy", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public RoHeadHierarchy RoHeadHierarchy
		{
			get
			{
				return this._RoHeadHierarchy.Entity;
			}
			set
			{
				RoHeadHierarchy previousValue = this._RoHeadHierarchy.Entity;
				if (((previousValue != value) 
							|| (this._RoHeadHierarchy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoHeadHierarchy.Entity = null;
						previousValue.RoJobs.Remove(this);
					}
					this._RoHeadHierarchy.Entity = value;
					if ((value != null))
					{
						value.RoJobs.Add(this);
						this._HeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._HeadOfAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoHeadHierarchy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_RoJob", Storage="_RoDivision", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public RoDivision RoDivision
		{
			get
			{
				return this._RoDivision.Entity;
			}
			set
			{
				RoDivision previousValue = this._RoDivision.Entity;
				if (((previousValue != value) 
							|| (this._RoDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoDivision.Entity = null;
						previousValue.RoJobs.Remove(this);
					}
					this._RoDivision.Entity = value;
					if ((value != null))
					{
						value.RoJobs.Add(this);
						this._DivisionId = value.DivisionId;
					}
					else
					{
						this._DivisionId = default(int);
					}
					this.SendPropertyChanged("RoDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoContractor_RoJob", Storage="_RoContractor", ThisKey="ContractorId", OtherKey="ContractorId", IsForeignKey=true)]
		public RoContractor RoContractor
		{
			get
			{
				return this._RoContractor.Entity;
			}
			set
			{
				RoContractor previousValue = this._RoContractor.Entity;
				if (((previousValue != value) 
							|| (this._RoContractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoContractor.Entity = null;
						previousValue.RoJobs.Remove(this);
					}
					this._RoContractor.Entity = value;
					if ((value != null))
					{
						value.RoJobs.Add(this);
						this._ContractorId = value.ContractorId;
					}
					else
					{
						this._ContractorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoContractor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoJob = this;
		}
		
		private void detach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoJob = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payroll.Employee")]
	public partial class RoEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId = default(int);
		
		private string _EmployeeCode = default(string);
		
		private string _FirstName = default(string);
		
		private string _LastName = default(string);
		
		private System.Nullable<int> _DivisionId = default(System.Nullable<int>);
		
		private string _Designation;
		
		private EntitySet<RoVoucherDetail> _RoVoucherDetails;
		
		private EntityRef<RoDivision> _RoDivision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    #endregion
		
		public RoEmployee()
		{
			this._RoVoucherDetails = new EntitySet<RoVoucherDetail>(new Action<RoVoucherDetail>(this.attach_RoVoucherDetails), new Action<RoVoucherDetail>(this.detach_RoVoucherDetails));
			this._RoDivision = default(EntityRef<RoDivision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int ", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="nvarchar(50)", CanBeNull=false)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoEmployee_RoVoucherDetail", Storage="_RoVoucherDetails", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<RoVoucherDetail> RoVoucherDetails
		{
			get
			{
				return this._RoVoucherDetails;
			}
			set
			{
				this._RoVoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_RoEmployee", Storage="_RoDivision", ThisKey="DivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public RoDivision RoDivision
		{
			get
			{
				return this._RoDivision.Entity;
			}
			set
			{
				RoDivision previousValue = this._RoDivision.Entity;
				if (((previousValue != value) 
							|| (this._RoDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoDivision.Entity = null;
						previousValue.RoEmployees.Remove(this);
					}
					this._RoDivision.Entity = value;
					if ((value != null))
					{
						value.RoEmployees.Add(this);
						this._DivisionId = value.DivisionId;
					}
					else
					{
						this._DivisionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoDivision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee = this;
		}
		
		private void detach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoEmployee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contractor")]
	public partial class RoContractor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractorId = default(int);
		
		private string _ContractorName = default(string);
		
		private string _ContractorCode = default(string);
		
		private string _Nationality = default(string);
		
		private EntitySet<RoVoucherDetail> _RoVoucherDetails;
		
		private EntitySet<RoJob> _RoJobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public RoContractor()
		{
			this._RoVoucherDetails = new EntitySet<RoVoucherDetail>(new Action<RoVoucherDetail>(this.attach_RoVoucherDetails), new Action<RoVoucherDetail>(this.detach_RoVoucherDetails));
			this._RoJobs = new EntitySet<RoJob>(new Action<RoJob>(this.attach_RoJobs), new Action<RoJob>(this.detach_RoJobs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ContractorId
		{
			get
			{
				return this._ContractorId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContractorName
		{
			get
			{
				return this._ContractorName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ContractorCode
		{
			get
			{
				return this._ContractorCode;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="nvarchar(2)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoContractor_RoVoucherDetail", Storage="_RoVoucherDetails", ThisKey="ContractorId", OtherKey="ContractorId")]
		public EntitySet<RoVoucherDetail> RoVoucherDetails
		{
			get
			{
				return this._RoVoucherDetails;
			}
			set
			{
				this._RoVoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoContractor_RoJob", Storage="_RoJobs", ThisKey="ContractorId", OtherKey="ContractorId")]
		public EntitySet<RoJob> RoJobs
		{
			get
			{
				return this._RoJobs;
			}
			set
			{
				this._RoJobs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoContractor = this;
		}
		
		private void detach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.RoContractor = null;
		}
		
		private void attach_RoJobs(RoJob entity)
		{
			this.SendPropertyChanging();
			entity.RoContractor = this;
		}
		
		private void detach_RoJobs(RoJob entity)
		{
			this.SendPropertyChanging();
			entity.RoContractor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Division")]
	public partial class RoDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DivisionId = default(int);
		
		private string _DivisionCode = default(string);
		
		private string _DivisionGroup = default(string);
		
		private string _DivisionName = default(string);
		
		private EntitySet<RoVoucher> _RoVouchers;
		
		private EntitySet<RoJob> _RoJobs;
		
		private EntitySet<RoEmployee> _RoEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public RoDivision()
		{
			this._RoVouchers = new EntitySet<RoVoucher>(new Action<RoVoucher>(this.attach_RoVouchers), new Action<RoVoucher>(this.detach_RoVouchers));
			this._RoJobs = new EntitySet<RoJob>(new Action<RoJob>(this.attach_RoJobs), new Action<RoJob>(this.detach_RoJobs));
			this._RoEmployees = new EntitySet<RoEmployee>(new Action<RoEmployee>(this.attach_RoEmployees), new Action<RoEmployee>(this.detach_RoEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionGroup", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionGroup
		{
			get
			{
				return this._DivisionGroup;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionName
		{
			get
			{
				return this._DivisionName;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_RoVoucher", Storage="_RoVouchers", ThisKey="DivisionId", OtherKey="DivisionId")]
		public EntitySet<RoVoucher> RoVouchers
		{
			get
			{
				return this._RoVouchers;
			}
			set
			{
				this._RoVouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_RoJob", Storage="_RoJobs", ThisKey="DivisionId", OtherKey="DivisionId")]
		public EntitySet<RoJob> RoJobs
		{
			get
			{
				return this._RoJobs;
			}
			set
			{
				this._RoJobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoDivision_RoEmployee", Storage="_RoEmployees", ThisKey="DivisionId", OtherKey="DivisionId")]
		public EntitySet<RoEmployee> RoEmployees
		{
			get
			{
				return this._RoEmployees;
			}
			set
			{
				this._RoEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoVouchers(RoVoucher entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision = this;
		}
		
		private void detach_RoVouchers(RoVoucher entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision = null;
		}
		
		private void attach_RoJobs(RoJob entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision = this;
		}
		
		private void detach_RoJobs(RoJob entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision = null;
		}
		
		private void attach_RoEmployees(RoEmployee entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision = this;
		}
		
		private void detach_RoEmployees(RoEmployee entity)
		{
			this.SendPropertyChanging();
			entity.RoDivision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Budget")]
	public partial class RoBudget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BudgetId;
		
		private int _HeadOfAccountId = default(int);
		
		private System.Nullable<short> _Year_Begining;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Revised_amount;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntityRef<RoHeadHierarchy> _RoHeadHierarchy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBudgetIdChanging(int value);
    partial void OnBudgetIdChanged();
    partial void OnYear_BeginingChanging(System.Nullable<short> value);
    partial void OnYear_BeginingChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnRevised_amountChanging(System.Nullable<decimal> value);
    partial void OnRevised_amountChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public RoBudget()
		{
			this._RoHeadHierarchy = default(EntityRef<RoHeadHierarchy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year_Begining", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> Year_Begining
		{
			get
			{
				return this._Year_Begining;
			}
			set
			{
				if ((this._Year_Begining != value))
				{
					this.OnYear_BeginingChanging(value);
					this.SendPropertyChanging();
					this._Year_Begining = value;
					this.SendPropertyChanged("Year_Begining");
					this.OnYear_BeginingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revised_amount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Revised_amount
		{
			get
			{
				return this._Revised_amount;
			}
			set
			{
				if ((this._Revised_amount != value))
				{
					this.OnRevised_amountChanging(value);
					this.SendPropertyChanging();
					this._Revised_amount = value;
					this.SendPropertyChanged("Revised_amount");
					this.OnRevised_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoHeadHierarchy_RoBudget", Storage="_RoHeadHierarchy", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId", IsForeignKey=true)]
		public RoHeadHierarchy RoHeadHierarchy
		{
			get
			{
				return this._RoHeadHierarchy.Entity;
			}
			set
			{
				RoHeadHierarchy previousValue = this._RoHeadHierarchy.Entity;
				if (((previousValue != value) 
							|| (this._RoHeadHierarchy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoHeadHierarchy.Entity = null;
						previousValue.RoBudgets.Remove(this);
					}
					this._RoHeadHierarchy.Entity = value;
					if ((value != null))
					{
						value.RoBudgets.Add(this);
						this._HeadOfAccountId = value.HeadOfAccountId;
					}
					else
					{
						this._HeadOfAccountId = default(int);
					}
					this.SendPropertyChanged("RoHeadHierarchy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountType")]
	public partial class RoAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HeadOfAccountType = default(string);
		
		private string _Description = default(string);
		
		private string _Type;
		
		private EntitySet<RoHeadHierarchy> _RoHeadHierarchies;
		
		private EntitySet<HeadOfAccount> _HeadOfAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public RoAccountType()
		{
			this._RoHeadHierarchies = new EntitySet<RoHeadHierarchy>(new Action<RoHeadHierarchy>(this.attach_RoHeadHierarchies), new Action<RoHeadHierarchy>(this.detach_RoHeadHierarchies));
			this._HeadOfAccounts = new EntitySet<HeadOfAccount>(new Action<HeadOfAccount>(this.attach_HeadOfAccounts), new Action<HeadOfAccount>(this.detach_HeadOfAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountType", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string HeadOfAccountType
		{
			get
			{
				return this._HeadOfAccountType;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Type", Storage="_Type", DbType="char", CanBeNull=false, IsDbGenerated=true)]
		public string Category
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoAccountType_RoHeadHierarchy", Storage="_RoHeadHierarchies", ThisKey="HeadOfAccountType", OtherKey="HeadOfAccountType")]
		public EntitySet<RoHeadHierarchy> RoHeadHierarchies
		{
			get
			{
				return this._RoHeadHierarchies;
			}
			set
			{
				this._RoHeadHierarchies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoAccountType_HeadOfAccount", Storage="_HeadOfAccounts", ThisKey="HeadOfAccountType", OtherKey="HeadOfAccountType")]
		public EntitySet<HeadOfAccount> HeadOfAccounts
		{
			get
			{
				return this._HeadOfAccounts;
			}
			set
			{
				this._HeadOfAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoHeadHierarchies(RoHeadHierarchy entity)
		{
			this.SendPropertyChanging();
			entity.RoAccountType = this;
		}
		
		private void detach_RoHeadHierarchies(RoHeadHierarchy entity)
		{
			this.SendPropertyChanging();
			entity.RoAccountType = null;
		}
		
		private void attach_HeadOfAccounts(HeadOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.RoAccountType = this;
		}
		
		private void detach_HeadOfAccounts(HeadOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.RoAccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeadOfAccount")]
	public partial class HeadOfAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HeadOfAccountId = default(int);
		
		private System.Nullable<int> _ParentHeadOfAccountId = default(System.Nullable<int>);
		
		private short _NameWithinParent = default(short);
		
		private string _DisplayName = default(string);
		
		private string _Description = default(string);
		
		private System.Nullable<decimal> _ProjectCost = default(System.Nullable<decimal>);
		
		private System.Nullable<decimal> _RevisedProjectCost = default(System.Nullable<decimal>);
		
		private string _GroupDescription = default(string);
		
		private string _HeadOfAccountType = default(string);
		
		private System.Nullable<int> _StationId;
		
		private System.DateTime _Created;
		
		private EntitySet<RoVoucherDetail> _RoVoucherDetails;
		
		private EntityRef<RoAccountType> _RoAccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStationIdChanging(System.Nullable<int> value);
    partial void OnStationIdChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    #endregion
		
		public HeadOfAccount()
		{
			this._RoVoucherDetails = new EntitySet<RoVoucherDetail>(new Action<RoVoucherDetail>(this.attach_RoVoucherDetails), new Action<RoVoucherDetail>(this.detach_RoVoucherDetails));
			this._RoAccountType = default(EntityRef<RoAccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int HeadOfAccountId
		{
			get
			{
				return this._HeadOfAccountId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentHeadOfAccountId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ParentHeadOfAccountId
		{
			get
			{
				return this._ParentHeadOfAccountId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithinParent", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short NameWithinParent
		{
			get
			{
				return this._NameWithinParent;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCost", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ProjectCost
		{
			get
			{
				return this._ProjectCost;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisedProjectCost", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RevisedProjectCost
		{
			get
			{
				return this._RevisedProjectCost;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDescription", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string GroupDescription
		{
			get
			{
				return this._GroupDescription;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadOfAccountType", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string HeadOfAccountType
		{
			get
			{
				return this._HeadOfAccountType;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId")]
		public System.Nullable<int> StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeadOfAccount_RoVoucherDetail", Storage="_RoVoucherDetails", ThisKey="HeadOfAccountId", OtherKey="HeadOfAccountId")]
		public EntitySet<RoVoucherDetail> RoVoucherDetails
		{
			get
			{
				return this._RoVoucherDetails;
			}
			set
			{
				this._RoVoucherDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoAccountType_HeadOfAccount", Storage="_RoAccountType", ThisKey="HeadOfAccountType", OtherKey="HeadOfAccountType", IsForeignKey=true)]
		public RoAccountType RoAccountType
		{
			get
			{
				return this._RoAccountType.Entity;
			}
			set
			{
				RoAccountType previousValue = this._RoAccountType.Entity;
				if (((previousValue != value) 
							|| (this._RoAccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoAccountType.Entity = null;
						previousValue.HeadOfAccounts.Remove(this);
					}
					this._RoAccountType.Entity = value;
					if ((value != null))
					{
						value.HeadOfAccounts.Add(this);
						this._HeadOfAccountType = value.HeadOfAccountType;
					}
					else
					{
						this._HeadOfAccountType = default(string);
					}
					this.SendPropertyChanged("RoAccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = this;
		}
		
		private void detach_RoVoucherDetails(RoVoucherDetail entity)
		{
			this.SendPropertyChanging();
			entity.HeadOfAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="payroll.SalaryPeriod")]
	public partial class RoSalaryPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalaryPeriodId = default(int);
		
		private System.DateTime _SalaryPeriodStart = default(System.DateTime);
		
		private System.DateTime _SalaryPeriodEnd = default(System.DateTime);
		
		private System.Nullable<System.DateTime> _PayableDate = default(System.Nullable<System.DateTime>);
		
		private System.Nullable<System.DateTime> _PaidDate = default(System.Nullable<System.DateTime>);
		
		private string _SalaryperiodCode = default(string);
		
		private string _Description = default(string);
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public RoSalaryPeriod()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryPeriodId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int SalaryPeriodId
		{
			get
			{
				return this._SalaryPeriodId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryPeriodStart", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime SalaryPeriodStart
		{
			get
			{
				return this._SalaryPeriodStart;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryPeriodEnd", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime SalaryPeriodEnd
		{
			get
			{
				return this._SalaryPeriodEnd;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayableDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PayableDate
		{
			get
			{
				return this._PayableDate;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PaidDate
		{
			get
			{
				return this._PaidDate;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryperiodCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SalaryperiodCode
		{
			get
			{
				return this._SalaryperiodCode;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
