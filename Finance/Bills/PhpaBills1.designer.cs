#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhpaAll.Bills
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PHPADEV")]
	internal partial class PhpaBillsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDivision(Division instance);
    partial void UpdateDivision(Division instance);
    partial void DeleteDivision(Division instance);
    partial void InsertContractor(Contractor instance);
    partial void UpdateContractor(Contractor instance);
    partial void DeleteContractor(Contractor instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertStation(Station instance);
    partial void UpdateStation(Station instance);
    partial void DeleteStation(Station instance);
    partial void InsertBillAudit(BillAudit instance);
    partial void UpdateBillAudit(BillAudit instance);
    partial void DeleteBillAudit(BillAudit instance);
    partial void InsertBillImage(BillImage instance);
    partial void UpdateBillImage(BillImage instance);
    partial void DeleteBillImage(BillImage instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    #endregion
		
		public PhpaBillsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["default"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PhpaBillsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhpaBillsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhpaBillsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhpaBillsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<Division> Divisions
		{
			get
			{
				return this.GetTable<Division>();
			}
		}
		
		internal System.Data.Linq.Table<Contractor> Contractors
		{
			get
			{
				return this.GetTable<Contractor>();
			}
		}
		
		internal System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		internal System.Data.Linq.Table<Station> Stations
		{
			get
			{
				return this.GetTable<Station>();
			}
		}
		
		public System.Data.Linq.Table<BillAudit> BillAudits
		{
			get
			{
				return this.GetTable<BillAudit>();
			}
		}
		
		internal System.Data.Linq.Table<BillImage> BillImages
		{
			get
			{
				return this.GetTable<BillImage>();
			}
		}
		
		internal System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Division")]
	internal partial class Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DivisionId = default(int);
		
		private string _DivisionCode = default(string);
		
		private string _DivisionGroup = default(string);
		
		private string _DivisionName = default(string);
		
		private EntitySet<Bill> _Bills;
		
		private EntitySet<Bill> _Bills1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Division()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Bills1 = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills1), new Action<Bill>(this.detach_Bills1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int DivisionId
		{
			get
			{
				return this._DivisionId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionGroup", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionGroup
		{
			get
			{
				return this._DivisionGroup;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DivisionName
		{
			get
			{
				return this._DivisionName;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Bill", Storage="_Bills", ThisKey="DivisionId", OtherKey="SubmitedToDivisionId")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Bill1", Storage="_Bills1", ThisKey="DivisionId", OtherKey="CurrentDivisionId")]
		public EntitySet<Bill> Bills1
		{
			get
			{
				return this._Bills1;
			}
			set
			{
				this._Bills1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.SubmittedToDivision = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.SubmittedToDivision = null;
		}
		
		private void attach_Bills1(Bill entity)
		{
			this.SendPropertyChanging();
			entity.CurrentDivision = this;
		}
		
		private void detach_Bills1(Bill entity)
		{
			this.SendPropertyChanging();
			entity.CurrentDivision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contractor")]
	internal partial class Contractor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractorId = default(int);
		
		private string _ContractorName = default(string);
		
		private string _ContractorCode = default(string);
		
		private string _Nationality = default(string);
		
		private string _Address = default(string);
		
		private string _City = default(string);
		
		private string _State = default(string);
		
		private string _Country = default(string);
		
		private string _Postal_Code = default(string);
		
		private string _Contact_person = default(string);
		
		private string _Phone1 = default(string);
		
		private string _Phone2 = default(string);
		
		private string _Fax = default(string);
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Contractor()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ContractorId
		{
			get
			{
				return this._ContractorId;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorName", DbType="NVarChar(120) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContractorName
		{
			get
			{
				return this._ContractorName;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContractorCode
		{
			get
			{
				return this._ContractorCode;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(2) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string City
		{
			get
			{
				return this._City;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string State
		{
			get
			{
				return this._State;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Country
		{
			get
			{
				return this._Country;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Code", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Postal_Code
		{
			get
			{
				return this._Postal_Code;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_person", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Contact_person
		{
			get
			{
				return this._Contact_person;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_Bill", Storage="_Bills", ThisKey="ContractorId", OtherKey="ContractorId")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Contractor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	internal partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _BillNumber;
		
		private System.Nullable<System.DateTime> _BillDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _SubmittedOnDate;
		
		private System.Nullable<int> _SubmitedToDivisionId;
		
		private System.Nullable<int> _ContractorId;
		
		private System.Nullable<decimal> _Amount;
		
		private string _ApprovedBy;
		
		private System.Nullable<System.DateTime> _ApprovedOn;
		
		private string _Remarks;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<System.DateTime> _Created = default(System.Nullable<System.DateTime>);
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _Particulars;
		
		private int _StationId;
		
		private System.Nullable<int> _CurrentDivisionId;
		
		private EntitySet<BillImage> _BillImages;
		
		private EntityRef<Voucher> _Vouchers;
		
		private EntityRef<Contractor> _Contractor;
		
		private EntityRef<Division> _Division;
		
		private EntityRef<Station> _Station;
		
		private EntityRef<Division> _CurrentDivision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBillNumberChanging(string value);
    partial void OnBillNumberChanged();
    partial void OnBillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnSubmittedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmittedOnDateChanged();
    partial void OnSubmitedToDivisionIdChanging(System.Nullable<int> value);
    partial void OnSubmitedToDivisionIdChanged();
    partial void OnContractorIdChanging(System.Nullable<int> value);
    partial void OnContractorIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    partial void OnApprovedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedOnChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnStationIdChanging(int value);
    partial void OnStationIdChanged();
    partial void OnCurrentDivisionIdChanging(System.Nullable<int> value);
    partial void OnCurrentDivisionIdChanged();
    #endregion
		
		public Bill()
		{
			this._BillImages = new EntitySet<BillImage>(new Action<BillImage>(this.attach_BillImages), new Action<BillImage>(this.detach_BillImages));
			this._Vouchers = default(EntityRef<Voucher>);
			this._Contractor = default(EntityRef<Contractor>);
			this._Division = default(EntityRef<Division>);
			this._Station = default(EntityRef<Station>);
			this._CurrentDivision = default(EntityRef<Division>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNumber", DbType="NVarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string BillNumber
		{
			get
			{
				return this._BillNumber;
			}
			set
			{
				if ((this._BillNumber != value))
				{
					this.OnBillNumberChanging(value);
					this.SendPropertyChanging();
					this._BillNumber = value;
					this.SendPropertyChanged("BillNumber");
					this.OnBillNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BillDate
		{
			get
			{
				return this._BillDate;
			}
			set
			{
				if ((this._BillDate != value))
				{
					this.OnBillDateChanging(value);
					this.SendPropertyChanging();
					this._BillDate = value;
					this.SendPropertyChanged("BillDate");
					this.OnBillDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOnDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SubmittedOnDate
		{
			get
			{
				return this._SubmittedOnDate;
			}
			set
			{
				if ((this._SubmittedOnDate != value))
				{
					this.OnSubmittedOnDateChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOnDate = value;
					this.SendPropertyChanged("SubmittedOnDate");
					this.OnSubmittedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitedToDivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SubmitedToDivisionId
		{
			get
			{
				return this._SubmitedToDivisionId;
			}
			set
			{
				if ((this._SubmitedToDivisionId != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubmitedToDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._SubmitedToDivisionId = value;
					this.SendPropertyChanged("SubmitedToDivisionId");
					this.OnSubmitedToDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ContractorId
		{
			get
			{
				return this._ContractorId;
			}
			set
			{
				if ((this._ContractorId != value))
				{
					if (this._Contractor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractorIdChanging(value);
					this.SendPropertyChanging();
					this._ContractorId = value;
					this.SendPropertyChanged("ContractorId");
					this.OnContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedOn", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ApprovedOn
		{
			get
			{
				return this._ApprovedOn;
			}
			set
			{
				if ((this._ApprovedOn != value))
				{
					this.OnApprovedOnChanging(value);
					this.SendPropertyChanging();
					this._ApprovedOn = value;
					this.SendPropertyChanged("ApprovedOn");
					this.OnApprovedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					if (this._Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentDivisionId", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CurrentDivisionId
		{
			get
			{
				return this._CurrentDivisionId;
			}
			set
			{
				if ((this._CurrentDivisionId != value))
				{
					if (this._CurrentDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._CurrentDivisionId = value;
					this.SendPropertyChanged("CurrentDivisionId");
					this.OnCurrentDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_BillImage", Storage="_BillImages", ThisKey="Id", OtherKey="BillId")]
		public EntitySet<BillImage> BillImages
		{
			get
			{
				return this._BillImages;
			}
			set
			{
				this._BillImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Voucher", Storage="_Vouchers", ThisKey="Id", OtherKey="BillId", IsUnique=true, IsForeignKey=false)]
		public Voucher Voucher
		{
			get
			{
				return this._Vouchers.Entity;
			}
			set
			{
				Voucher previousValue = this._Vouchers.Entity;
				if (((previousValue != value) 
							|| (this._Vouchers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vouchers.Entity = null;
						previousValue.Bill = null;
					}
					this._Vouchers.Entity = value;
					if ((value != null))
					{
						value.Bill = this;
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contractor_Bill", Storage="_Contractor", ThisKey="ContractorId", OtherKey="ContractorId", IsForeignKey=true)]
		public Contractor Contractor
		{
			get
			{
				return this._Contractor.Entity;
			}
			set
			{
				Contractor previousValue = this._Contractor.Entity;
				if (((previousValue != value) 
							|| (this._Contractor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contractor.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Contractor.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._ContractorId = value.ContractorId;
					}
					else
					{
						this._ContractorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contractor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Bill", Storage="_Division", ThisKey="SubmitedToDivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public Division SubmittedToDivision
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._SubmitedToDivisionId = value.DivisionId;
					}
					else
					{
						this._SubmitedToDivisionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SubmittedToDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Bill", Storage="_Station", ThisKey="StationId", OtherKey="StationId", IsForeignKey=true)]
		public Station Station
		{
			get
			{
				return this._Station.Entity;
			}
			set
			{
				Station previousValue = this._Station.Entity;
				if (((previousValue != value) 
							|| (this._Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Station.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Station.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._StationId = value.StationId;
					}
					else
					{
						this._StationId = default(int);
					}
					this.SendPropertyChanged("Station");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Bill1", Storage="_CurrentDivision", ThisKey="CurrentDivisionId", OtherKey="DivisionId", IsForeignKey=true)]
		public Division CurrentDivision
		{
			get
			{
				return this._CurrentDivision.Entity;
			}
			set
			{
				Division previousValue = this._CurrentDivision.Entity;
				if (((previousValue != value) 
							|| (this._CurrentDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrentDivision.Entity = null;
						previousValue.Bills1.Remove(this);
					}
					this._CurrentDivision.Entity = value;
					if ((value != null))
					{
						value.Bills1.Add(this);
						this._CurrentDivisionId = value.DivisionId;
					}
					else
					{
						this._CurrentDivisionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CurrentDivision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillImages(BillImage entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_BillImages(BillImage entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PIS.Station")]
	internal partial class Station : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StationId;
		
		private string _StationName;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStationIdChanging(int value);
    partial void OnStationIdChanged();
    partial void OnStationNameChanging(string value);
    partial void OnStationNameChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Station()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StationName
		{
			get
			{
				return this._StationName;
			}
			set
			{
				if ((this._StationName != value))
				{
					this.OnStationNameChanging(value);
					this.SendPropertyChanging();
					this._StationName = value;
					this.SendPropertyChanged("StationName");
					this.OnStationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Bill", Storage="_Bills", ThisKey="StationId", OtherKey="StationId")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Station = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Station = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillAudit")]
	public partial class BillAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BillNumberOld;
		
		private string _BillNumberNew;
		
		private System.Nullable<System.DateTime> _BillDateOld;
		
		private System.Nullable<System.DateTime> _BillDateNew;
		
		private System.Nullable<System.DateTime> _DueDateOld;
		
		private System.Nullable<System.DateTime> _DueDateNew;
		
		private System.Nullable<System.DateTime> _SubmittedOnDateOld;
		
		private System.Nullable<System.DateTime> _SubmittedOnDateNew;
		
		private System.Nullable<System.DateTime> _PaidDateOld;
		
		private System.Nullable<System.DateTime> _PaidDateNew;
		
		private string _SubmittedToDivisionNameOld;
		
		private string _SubmittedToDivisionNameNew;
		
		private string _ContractorNameOld;
		
		private string _ContractorNameNew;
		
		private System.Nullable<decimal> _AmountOld;
		
		private System.Nullable<decimal> _AmountNew;
		
		private string _ApprovedByOld;
		
		private string _ApprovedByNew;
		
		private System.Nullable<System.DateTime> _ApprovedOnOld;
		
		private System.Nullable<System.DateTime> _ApprovedOnNew;
		
		private string _RemarksOld;
		
		private string _RemarksNew;
		
		private string _ParticularsOld;
		
		private string _ParticularsNew;
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private System.Nullable<int> _BillId;
		
		private string _StationNameOld;
		
		private string _StationNameNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillNumberOldChanging(string value);
    partial void OnBillNumberOldChanged();
    partial void OnBillNumberNewChanging(string value);
    partial void OnBillNumberNewChanged();
    partial void OnBillDateOldChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateOldChanged();
    partial void OnBillDateNewChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateNewChanged();
    partial void OnDueDateOldChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateOldChanged();
    partial void OnDueDateNewChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateNewChanged();
    partial void OnSubmittedOnDateOldChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmittedOnDateOldChanged();
    partial void OnSubmittedOnDateNewChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmittedOnDateNewChanged();
    partial void OnPaidDateOldChanging(System.Nullable<System.DateTime> value);
    partial void OnPaidDateOldChanged();
    partial void OnPaidDateNewChanging(System.Nullable<System.DateTime> value);
    partial void OnPaidDateNewChanged();
    partial void OnSubmittedToDivisionNameOldChanging(string value);
    partial void OnSubmittedToDivisionNameOldChanged();
    partial void OnSubmittedToDivisionNameNewChanging(string value);
    partial void OnSubmittedToDivisionNameNewChanged();
    partial void OnContractorNameOldChanging(string value);
    partial void OnContractorNameOldChanged();
    partial void OnContractorNameNewChanging(string value);
    partial void OnContractorNameNewChanged();
    partial void OnAmountOldChanging(System.Nullable<decimal> value);
    partial void OnAmountOldChanged();
    partial void OnAmountNewChanging(System.Nullable<decimal> value);
    partial void OnAmountNewChanged();
    partial void OnApprovedByOldChanging(string value);
    partial void OnApprovedByOldChanged();
    partial void OnApprovedByNewChanging(string value);
    partial void OnApprovedByNewChanged();
    partial void OnApprovedOnOldChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedOnOldChanged();
    partial void OnApprovedOnNewChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedOnNewChanged();
    partial void OnRemarksOldChanging(string value);
    partial void OnRemarksOldChanged();
    partial void OnRemarksNewChanging(string value);
    partial void OnRemarksNewChanged();
    partial void OnParticularsOldChanging(string value);
    partial void OnParticularsOldChanged();
    partial void OnParticularsNewChanging(string value);
    partial void OnParticularsNewChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnBillIdChanging(System.Nullable<int> value);
    partial void OnBillIdChanged();
    partial void OnStationNameOldChanging(string value);
    partial void OnStationNameOldChanged();
    partial void OnStationNameNewChanging(string value);
    partial void OnStationNameNewChanged();
    #endregion
		
		public BillAudit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNumberOld", DbType="NVarChar(60)")]
		public string BillNumberOld
		{
			get
			{
				return this._BillNumberOld;
			}
			set
			{
				if ((this._BillNumberOld != value))
				{
					this.OnBillNumberOldChanging(value);
					this.SendPropertyChanging();
					this._BillNumberOld = value;
					this.SendPropertyChanged("BillNumberOld");
					this.OnBillNumberOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNumberNew", DbType="NVarChar(60)")]
		public string BillNumberNew
		{
			get
			{
				return this._BillNumberNew;
			}
			set
			{
				if ((this._BillNumberNew != value))
				{
					this.OnBillNumberNewChanging(value);
					this.SendPropertyChanging();
					this._BillNumberNew = value;
					this.SendPropertyChanged("BillNumberNew");
					this.OnBillNumberNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDateOld", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> BillDateOld
		{
			get
			{
				return this._BillDateOld;
			}
			set
			{
				if ((this._BillDateOld != value))
				{
					this.OnBillDateOldChanging(value);
					this.SendPropertyChanging();
					this._BillDateOld = value;
					this.SendPropertyChanged("BillDateOld");
					this.OnBillDateOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDateNew", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> BillDateNew
		{
			get
			{
				return this._BillDateNew;
			}
			set
			{
				if ((this._BillDateNew != value))
				{
					this.OnBillDateNewChanging(value);
					this.SendPropertyChanging();
					this._BillDateNew = value;
					this.SendPropertyChanged("BillDateNew");
					this.OnBillDateNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDateOld", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DueDateOld
		{
			get
			{
				return this._DueDateOld;
			}
			set
			{
				if ((this._DueDateOld != value))
				{
					this.OnDueDateOldChanging(value);
					this.SendPropertyChanging();
					this._DueDateOld = value;
					this.SendPropertyChanged("DueDateOld");
					this.OnDueDateOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDateNew", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DueDateNew
		{
			get
			{
				return this._DueDateNew;
			}
			set
			{
				if ((this._DueDateNew != value))
				{
					this.OnDueDateNewChanging(value);
					this.SendPropertyChanging();
					this._DueDateNew = value;
					this.SendPropertyChanged("DueDateNew");
					this.OnDueDateNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOnDateOld", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SubmittedOnDateOld
		{
			get
			{
				return this._SubmittedOnDateOld;
			}
			set
			{
				if ((this._SubmittedOnDateOld != value))
				{
					this.OnSubmittedOnDateOldChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOnDateOld = value;
					this.SendPropertyChanged("SubmittedOnDateOld");
					this.OnSubmittedOnDateOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedOnDateNew", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SubmittedOnDateNew
		{
			get
			{
				return this._SubmittedOnDateNew;
			}
			set
			{
				if ((this._SubmittedOnDateNew != value))
				{
					this.OnSubmittedOnDateNewChanging(value);
					this.SendPropertyChanging();
					this._SubmittedOnDateNew = value;
					this.SendPropertyChanged("SubmittedOnDateNew");
					this.OnSubmittedOnDateNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDateOld", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PaidDateOld
		{
			get
			{
				return this._PaidDateOld;
			}
			set
			{
				if ((this._PaidDateOld != value))
				{
					this.OnPaidDateOldChanging(value);
					this.SendPropertyChanging();
					this._PaidDateOld = value;
					this.SendPropertyChanged("PaidDateOld");
					this.OnPaidDateOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDateNew", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PaidDateNew
		{
			get
			{
				return this._PaidDateNew;
			}
			set
			{
				if ((this._PaidDateNew != value))
				{
					this.OnPaidDateNewChanging(value);
					this.SendPropertyChanging();
					this._PaidDateNew = value;
					this.SendPropertyChanged("PaidDateNew");
					this.OnPaidDateNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedToDivisionNameOld", DbType="NVarChar(80)")]
		public string SubmittedToDivisionNameOld
		{
			get
			{
				return this._SubmittedToDivisionNameOld;
			}
			set
			{
				if ((this._SubmittedToDivisionNameOld != value))
				{
					this.OnSubmittedToDivisionNameOldChanging(value);
					this.SendPropertyChanging();
					this._SubmittedToDivisionNameOld = value;
					this.SendPropertyChanged("SubmittedToDivisionNameOld");
					this.OnSubmittedToDivisionNameOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedToDivisionNameNew", DbType="NVarChar(80)")]
		public string SubmittedToDivisionNameNew
		{
			get
			{
				return this._SubmittedToDivisionNameNew;
			}
			set
			{
				if ((this._SubmittedToDivisionNameNew != value))
				{
					this.OnSubmittedToDivisionNameNewChanging(value);
					this.SendPropertyChanging();
					this._SubmittedToDivisionNameNew = value;
					this.SendPropertyChanged("SubmittedToDivisionNameNew");
					this.OnSubmittedToDivisionNameNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorNameOld", DbType="NVarChar(120)")]
		public string ContractorNameOld
		{
			get
			{
				return this._ContractorNameOld;
			}
			set
			{
				if ((this._ContractorNameOld != value))
				{
					this.OnContractorNameOldChanging(value);
					this.SendPropertyChanging();
					this._ContractorNameOld = value;
					this.SendPropertyChanged("ContractorNameOld");
					this.OnContractorNameOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorNameNew", DbType="NVarChar(120)")]
		public string ContractorNameNew
		{
			get
			{
				return this._ContractorNameNew;
			}
			set
			{
				if ((this._ContractorNameNew != value))
				{
					this.OnContractorNameNewChanging(value);
					this.SendPropertyChanging();
					this._ContractorNameNew = value;
					this.SendPropertyChanged("ContractorNameNew");
					this.OnContractorNameNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountOld", DbType="Money")]
		public System.Nullable<decimal> AmountOld
		{
			get
			{
				return this._AmountOld;
			}
			set
			{
				if ((this._AmountOld != value))
				{
					this.OnAmountOldChanging(value);
					this.SendPropertyChanging();
					this._AmountOld = value;
					this.SendPropertyChanged("AmountOld");
					this.OnAmountOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountNew", DbType="Money")]
		public System.Nullable<decimal> AmountNew
		{
			get
			{
				return this._AmountNew;
			}
			set
			{
				if ((this._AmountNew != value))
				{
					this.OnAmountNewChanging(value);
					this.SendPropertyChanging();
					this._AmountNew = value;
					this.SendPropertyChanged("AmountNew");
					this.OnAmountNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByOld", DbType="NVarChar(50)")]
		public string ApprovedByOld
		{
			get
			{
				return this._ApprovedByOld;
			}
			set
			{
				if ((this._ApprovedByOld != value))
				{
					this.OnApprovedByOldChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByOld = value;
					this.SendPropertyChanged("ApprovedByOld");
					this.OnApprovedByOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByNew", DbType="NVarChar(50)")]
		public string ApprovedByNew
		{
			get
			{
				return this._ApprovedByNew;
			}
			set
			{
				if ((this._ApprovedByNew != value))
				{
					this.OnApprovedByNewChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByNew = value;
					this.SendPropertyChanged("ApprovedByNew");
					this.OnApprovedByNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedOnOld", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ApprovedOnOld
		{
			get
			{
				return this._ApprovedOnOld;
			}
			set
			{
				if ((this._ApprovedOnOld != value))
				{
					this.OnApprovedOnOldChanging(value);
					this.SendPropertyChanging();
					this._ApprovedOnOld = value;
					this.SendPropertyChanged("ApprovedOnOld");
					this.OnApprovedOnOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedOnNew", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ApprovedOnNew
		{
			get
			{
				return this._ApprovedOnNew;
			}
			set
			{
				if ((this._ApprovedOnNew != value))
				{
					this.OnApprovedOnNewChanging(value);
					this.SendPropertyChanging();
					this._ApprovedOnNew = value;
					this.SendPropertyChanged("ApprovedOnNew");
					this.OnApprovedOnNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemarksOld", DbType="NVarChar(255)")]
		public string RemarksOld
		{
			get
			{
				return this._RemarksOld;
			}
			set
			{
				if ((this._RemarksOld != value))
				{
					this.OnRemarksOldChanging(value);
					this.SendPropertyChanging();
					this._RemarksOld = value;
					this.SendPropertyChanged("RemarksOld");
					this.OnRemarksOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemarksNew", DbType="NVarChar(255)")]
		public string RemarksNew
		{
			get
			{
				return this._RemarksNew;
			}
			set
			{
				if ((this._RemarksNew != value))
				{
					this.OnRemarksNewChanging(value);
					this.SendPropertyChanging();
					this._RemarksNew = value;
					this.SendPropertyChanged("RemarksNew");
					this.OnRemarksNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticularsOld", DbType="NVarChar(255)")]
		public string ParticularsOld
		{
			get
			{
				return this._ParticularsOld;
			}
			set
			{
				if ((this._ParticularsOld != value))
				{
					this.OnParticularsOldChanging(value);
					this.SendPropertyChanging();
					this._ParticularsOld = value;
					this.SendPropertyChanged("ParticularsOld");
					this.OnParticularsOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticularsNew", DbType="NVarChar(255)")]
		public string ParticularsNew
		{
			get
			{
				return this._ParticularsNew;
			}
			set
			{
				if ((this._ParticularsNew != value))
				{
					this.OnParticularsNewChanging(value);
					this.SendPropertyChanging();
					this._ParticularsNew = value;
					this.SendPropertyChanged("ParticularsNew");
					this.OnParticularsNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(255)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="Int")]
		public System.Nullable<int> BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					this.OnBillIdChanging(value);
					this.SendPropertyChanging();
					this._BillId = value;
					this.SendPropertyChanged("BillId");
					this.OnBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationNameOld", DbType="NVarChar(50)")]
		public string StationNameOld
		{
			get
			{
				return this._StationNameOld;
			}
			set
			{
				if ((this._StationNameOld != value))
				{
					this.OnStationNameOldChanging(value);
					this.SendPropertyChanging();
					this._StationNameOld = value;
					this.SendPropertyChanged("StationNameOld");
					this.OnStationNameOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationNameNew", DbType="NVarChar(50)")]
		public string StationNameNew
		{
			get
			{
				return this._StationNameNew;
			}
			set
			{
				if ((this._StationNameNew != value))
				{
					this.OnStationNameNewChanging(value);
					this.SendPropertyChanging();
					this._StationNameNew = value;
					this.SendPropertyChanged("StationNameNew");
					this.OnStationNameNewChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillImage")]
	internal partial class BillImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _BillId;
		
		private System.Data.Linq.Binary _BillImageData;
		
		private string _ImageContentType;
		
		private string _FileName;
		
		private string _ContentLength;
		
		private EntityRef<Bill> _Bill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnBillIdChanging(int value);
    partial void OnBillIdChanged();
    partial void OnBillImageDataChanging(System.Data.Linq.Binary value);
    partial void OnBillImageDataChanged();
    partial void OnImageContentTypeChanging(string value);
    partial void OnImageContentTypeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnContentLengthChanging(string value);
    partial void OnContentLengthChanged();
    #endregion
		
		public BillImage()
		{
			this._Bill = default(EntityRef<Bill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="Int NOT NULL")]
		public int BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillIdChanging(value);
					this.SendPropertyChanging();
					this._BillId = value;
					this.SendPropertyChanged("BillId");
					this.OnBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillImageData", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BillImageData
		{
			get
			{
				return this._BillImageData;
			}
			set
			{
				if ((this._BillImageData != value))
				{
					this.OnBillImageDataChanging(value);
					this.SendPropertyChanging();
					this._BillImageData = value;
					this.SendPropertyChanged("BillImageData");
					this.OnBillImageDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageContentType", DbType="NVarChar(50)")]
		public string ImageContentType
		{
			get
			{
				return this._ImageContentType;
			}
			set
			{
				if ((this._ImageContentType != value))
				{
					this.OnImageContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ImageContentType = value;
					this.SendPropertyChanged("ImageContentType");
					this.OnImageContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentLength", CanBeNull=false)]
		public string ContentLength
		{
			get
			{
				return this._ContentLength;
			}
			set
			{
				if ((this._ContentLength != value))
				{
					this.OnContentLengthChanging(value);
					this.SendPropertyChanging();
					this._ContentLength = value;
					this.SendPropertyChanged("ContentLength");
					this.OnContentLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_BillImage", Storage="_Bill", ThisKey="BillId", OtherKey="Id", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.BillImages.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.BillImages.Add(this);
						this._BillId = value.Id;
					}
					else
					{
						this._BillId = default(int);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	internal partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoucherId;
		
		private string _VoucherType;
		
		private System.DateTime _VoucherDate;
		
		private string _VoucherCode;
		
		private System.Nullable<int> _DivisionId;
		
		private System.Nullable<int> _CheckNumber;
		
		private string _PayeeName;
		
		private string _Particulars;
		
		private string _Voucher_last_edited_by_o;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedBy;
		
		private string _CreatedWorkstation;
		
		private System.Nullable<System.DateTime> _Modified;
		
		private string _ModifiedBy;
		
		private string _ModifiedWorkstation;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<bool> _IsChequeReconcile;
		
		private System.Nullable<int> _StationId;
		
		private System.Nullable<int> _BillId;
		
		private EntityRef<Bill> _Bill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherIdChanging(int value);
    partial void OnVoucherIdChanged();
    partial void OnVoucherTypeChanging(string value);
    partial void OnVoucherTypeChanged();
    partial void OnVoucherDateChanging(System.DateTime value);
    partial void OnVoucherDateChanged();
    partial void OnVoucherCodeChanging(string value);
    partial void OnVoucherCodeChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    partial void OnCheckNumberChanging(System.Nullable<int> value);
    partial void OnCheckNumberChanged();
    partial void OnPayeeNameChanging(string value);
    partial void OnPayeeNameChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnVoucher_last_edited_by_oChanging(string value);
    partial void OnVoucher_last_edited_by_oChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedWorkstationChanging(string value);
    partial void OnCreatedWorkstationChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedWorkstationChanging(string value);
    partial void OnModifiedWorkstationChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnIsChequeReconcileChanging(System.Nullable<bool> value);
    partial void OnIsChequeReconcileChanged();
    partial void OnStationIdChanging(System.Nullable<int> value);
    partial void OnStationIdChanged();
    partial void OnBillIdChanging(System.Nullable<int> value);
    partial void OnBillIdChanged();
    #endregion
		
		public Voucher()
		{
			this._Bill = default(EntityRef<Bill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int VoucherId
		{
			get
			{
				return this._VoucherId;
			}
			set
			{
				if ((this._VoucherId != value))
				{
					this.OnVoucherIdChanging(value);
					this.SendPropertyChanging();
					this._VoucherId = value;
					this.SendPropertyChanged("VoucherId");
					this.OnVoucherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VoucherType
		{
			get
			{
				return this._VoucherType;
			}
			set
			{
				if ((this._VoucherType != value))
				{
					this.OnVoucherTypeChanging(value);
					this.SendPropertyChanging();
					this._VoucherType = value;
					this.SendPropertyChanged("VoucherType");
					this.OnVoucherTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime VoucherDate
		{
			get
			{
				return this._VoucherDate;
			}
			set
			{
				if ((this._VoucherDate != value))
				{
					this.OnVoucherDateChanging(value);
					this.SendPropertyChanging();
					this._VoucherDate = value;
					this.SendPropertyChanged("VoucherDate");
					this.OnVoucherDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
			set
			{
				if ((this._VoucherCode != value))
				{
					this.OnVoucherCodeChanging(value);
					this.SendPropertyChanging();
					this._VoucherCode = value;
					this.SendPropertyChanged("VoucherCode");
					this.OnVoucherCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this.OnPayeeNameChanging(value);
					this.SendPropertyChanging();
					this._PayeeName = value;
					this.SendPropertyChanged("PayeeName");
					this.OnPayeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voucher_last_edited_by_o", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Voucher_last_edited_by_o
		{
			get
			{
				return this._Voucher_last_edited_by_o;
			}
			set
			{
				if ((this._Voucher_last_edited_by_o != value))
				{
					this.OnVoucher_last_edited_by_oChanging(value);
					this.SendPropertyChanging();
					this._Voucher_last_edited_by_o = value;
					this.SendPropertyChanged("Voucher_last_edited_by_o");
					this.OnVoucher_last_edited_by_oChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedWorkstation
		{
			get
			{
				return this._CreatedWorkstation;
			}
			set
			{
				if ((this._CreatedWorkstation != value))
				{
					this.OnCreatedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._CreatedWorkstation = value;
					this.SendPropertyChanged("CreatedWorkstation");
					this.OnCreatedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedWorkstation", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string ModifiedWorkstation
		{
			get
			{
				return this._ModifiedWorkstation;
			}
			set
			{
				if ((this._ModifiedWorkstation != value))
				{
					this.OnModifiedWorkstationChanging(value);
					this.SendPropertyChanging();
					this._ModifiedWorkstation = value;
					this.SendPropertyChanged("ModifiedWorkstation");
					this.OnModifiedWorkstationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChequeReconcile", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsChequeReconcile
		{
			get
			{
				return this._IsChequeReconcile;
			}
			set
			{
				if ((this._IsChequeReconcile != value))
				{
					this.OnIsChequeReconcileChanging(value);
					this.SendPropertyChanging();
					this._IsChequeReconcile = value;
					this.SendPropertyChanged("IsChequeReconcile");
					this.OnIsChequeReconcileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillIdChanging(value);
					this.SendPropertyChanging();
					this._BillId = value;
					this.SendPropertyChanged("BillId");
					this.OnBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Voucher", Storage="_Bill", ThisKey="BillId", OtherKey="Id", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.Voucher = null;
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.Voucher = this;
						this._BillId = value.Id;
					}
					else
					{
						this._BillId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
