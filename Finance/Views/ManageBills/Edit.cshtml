@model PhpaAll.Controllers.EditViewModel
@{
    ViewBag.Title = "Bill Editor";
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}
<h2 style="margin-top:0">
    <span>Edit Bill <mark class="small">@Html.DisplayFor(m => m.BillNumber)</mark></span>
</h2>


<form action="@Url.Action(MVC.ManageBills.UpdateOrDelete())" method="post">
    @Html.HiddenFor(m => m.Id)
    <div class="well well-sm">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="billDate">Bill Date *</label>
                    <div class='input-group date' id='billDatePicker'>
                        @Html.TextBoxFor(m => m.BillDate, new
           {
               id = "billDate",
               @class = "form-control",
               @required = "required",
               @placeholder = "dd/mm/yyyy"
           })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.BillDate, null, new
           {
               @class = "help-block"
           })
                </div>


            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="divSubDate">Received on</label>
                    <div class='input-group date' id='divSubDatePicker'>
                        @Html.TextBoxFor(m => m.SubmittedOnDate, new
           {
               id = "divSubDate",
               @class = "form-control",
               type = "date",
               @placeholder = "dd/mm/yyyy"
           })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.SubmittedOnDate, null, new
           {
               @class = "help-block"
           })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="dueDate">Payment Due Date</label>
                    <div class='input-group date' id='dueDatePicker'>
                        @Html.TextBoxFor(m => m.DueDate, new
           {
               id = "dueDate",
               @class = "form-control",
               type = "date",
               @placeholder = "dd/mm/yyyy"
           })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.DueDate, null, new
           {
               @class = "help-block"
           })

                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="billNumber">Bill No. *</label>

                    @Html.TextBoxFor(m => m.BillNumber, new
                                   {
                                       id = "billNumber",
                                       maxlength = "60",
                                       @class = "form-control",
                                       @required = "required"
                                   })
                    @Html.ValidationMessageFor(m => m.BillNumber, null, new
                                   {
                                       @class = "help-block"
                                   })

                </div>
            </div>

        </div>
        <div class="col-md-9">
            <div class="form-group form-group-sm">
                <label for="particulars">Particulars</label>
                @Html.TextBoxFor(m => m.Particulars, new
           {
               id = "particulars",
               @class = "form-control",
               maxlength = "255",
               placeholder = "You can mention the subject of the bill"

           })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group form-group-sm">
                <label for="amount">Amount *</label>
                @Html.TextBoxFor(m => m.Amount, new
           {
               id = "amount",
               @class = "form-control",
               min = "0",
               type = "number",
               @required = "required",
               placeholder = "Amount(Nu)"

           })
                @Html.ValidationMessageFor(m => m.Amount, null, new
           {
               @class = "help-block"
           })

            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="tbDivision">Division *</label>
                    <div class="input-group input-group-sm">
                        <input type="text" id="tbDivision" class="form-control typeahead" value="@Model.SubmittedToDivisionName" required placeholder="Start typing..."
                               data-url="@Url.Action(MVC.ManageBills.GetDivision("~"))" />
                        <span class="input-group-btn ">
                            <button class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button>
                        </span>
                    </div>
                    <small class="help-block">The division which received this bill.</small>
                    @Html.ValidationMessageFor(m => m.SubmittedToDivisionId, null, new
           {
               @class = "help-block"
           })
                    @Html.TextBoxFor(m => m.SubmittedToDivisionId, new
               {
                   style = "height:0; width:0; border:none"
               })

                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="tbContractor">Station</label>
                    <div class="input-group input-group-sm">
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.StationId, Model.StationList, "Select station",
                    new { @class = "form-control", @required = "required" })
                            @Html.ValidationMessageFor(m => m.StationId, null, new
                                   {
                                       @class = "help-block"
                                   })
                        </div>
                    </div>
                    @Html.ValidationMessageFor(m => m.StationId, null, new
           {
               @class = "help-block"
           })
                    @Html.TextBoxFor(m => m.ContractorId, new
               {
                   style = "height:0; width:0; border:none"
               })

                </div>
            </div>
            <div class="col-md-offset-3 col-md-3">
                <label for="tbContractor">Contractor</label>
                <div class="input-group input-group-sm">
                    <input type="text" id="tbContractor" class="form-control typeahead" value="@Model.ContractorName" required placeholder="Start typing..."
                           data-url="@Url.Action(MVC.ManageBills.GetContractor("~"))" />
                    <span class="input-group-btn ">
                        <button class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.ContractorId, null, new
           {
               @class = "help-block"
           })
                @Html.TextBoxFor(m => m.ContractorId, new
               {
                   style = "height:0; width:0; border:none"
               })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label for="remarks">Remarks</label>
        @Html.TextAreaFor(m => m.Remarks, new
           {
               id = "remarks",
               @class = "form-control",
               maxlength = "255"
           })
        @Html.ValidationMessageFor(m => m.Remarks, null, new
           {
               @class = "help-block"
           })
    </div>

    <div class="btn-group btn-group-justified" role="group" aria-label="...">
        <button type="submit" class="btn btn-primary">Save</button>
        <a href="@Url.Action(MVC.ManageBills.ShowBill(Model.Id))" class="btn btn-link">Cancel</a>
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <span class="glyphicon glyphicon-trash"></span>                Delete
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" role="menu">
                <li><button type="submit" class="btn btn-danger btn-block" name="@MVC.ManageBills.UpdateOrDeleteParams.delete" value="true">Confirm</button></li>
            </ul>
        </div>
    </div>
</form>

@section scripts {
    <script type="text/javascript" src="@Links.Views.Shared.jqueryval_js"></script>


    <script type="text/javascript">

        $(document).ready(function () {
            "use strict";
            $('#tbDivision,#tbContractor').each(function (index, elem) {
                $(elem).typeahead(null, {
                    //name: 'Division',
                    displayKey: 'label',
                    source: function (query, cb) {
                        var url = $(elem).attr('data-url').replace('~', query);
                        $.get(url).done(function (data, textStatus, jqXHR) {
                            this.cb(data);
                        }.bind({ cb: cb })).fail(function (jqXHR, textStatus, errorThrown) {
                            if (jqXHR.status == 500) {
                                this.cb([{ label: 'Error ' + (jqXHR.responseText || errorThrown), value: '' }]);
                            } else {
                                this.cb([{ label: 'Http Error ' + jqXHR.status + ': ' + errorThrown + ' ' + this.url, value: '' }]);
                            }
                        }.bind({ cb: cb, url: url }));
                    },
                    templates: {
                        empty: 'No matching results found'
                    }
                }).on('typeahead:selected typeahead:autocompleted', function (e, sug, ds) {
                    // Store the id of the selected division in the hdden field
                    //$('#hfDivisionId').val(sug.value);
                    $(this).closest('div.form-group').find('input:not(".typeahead")').val(sug.value);
                }).on('input', function (e) {
                    // When user changes the divisionId, empty the hidden field
                    $(this).closest('div.form-group').find('input:not(".typeahead")').val('');
                });

            });


            $("#billDatePicker,#divSubDatePicker,#dueDatePicker").datetimepicker({
                format: 'D/M/YYYY'
            });




        });
    </script>
}
