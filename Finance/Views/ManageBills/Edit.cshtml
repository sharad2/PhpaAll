@model PhpaAll.Controllers.EditViewModel
@{
    ViewBag.Title = "Bill Editor";
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}
<h2 style="margin-top:0">
    <span>Edit Bill <mark class="small">@Html.DisplayFor(m => m.BillNumber)</mark></span>
</h2>

<form action="@Url.Action(MVC.ManageBills.UploadImage())"
      class="dropzone"
      id="my-dropzone">
    <input type="hidden" name="@MVC.ManageBills.UploadImageParams.billId" value="@Model.Id" />
    <div class="fallback">
        <input name="@MVC.ManageBills.UploadImageParams.file" type="file" multiple />
    </div>
</form>

<form action="@Url.Action(MVC.ManageBills.Edit())" method="post" enctype="multipart/form-data">
    @Html.HiddenFor(m => m.Id)
    <div class="well well-sm">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="billDate">Bill Date *</label>
                    <div class='input-group date' id='billDatePicker'>
                        @Html.TextBoxFor(m => m.BillDate, new
           {
               id = "billDate",
               @class = "form-control",
               @required = "required",
               @placeholder = "dd/mm/yyyy"
           })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.BillDate, null, new
           {
               @class = "help-block"
           })
                </div>


            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="divSubDate">Received on</label>
                    <div class='input-group date' id='divSubDatePicker'>
                        @Html.TextBoxFor(m => m.SubmittedOnDate, new
           {
               id = "divSubDate",
               @class = "form-control",
               type = "date",
               @placeholder = "dd/mm/yyyy"
           })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.SubmittedOnDate, null, new
           {
               @class = "help-block"
           })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="dueDate">Payment Due Date</label>
                    <div class='input-group date' id='dueDatePicker'>
                        @Html.TextBoxFor(m => m.DueDate, new
           {
               id = "dueDate",
               @class = "form-control",
               type = "date",
               @placeholder = "dd/mm/yyyy"
           })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.DueDate, null, new
           {
               @class = "help-block"
           })

                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="billNumber">Bill No. *</label>

                    @Html.TextBoxFor(m => m.BillNumber, new
                                   {
                                       id = "billNumber",
                                       maxlength = "60",
                                       @class = "form-control",
                                       @required = "required"
                                   })
                    @Html.ValidationMessageFor(m => m.BillNumber, null, new
                                   {
                                       @class = "help-block"
                                   })

                </div>
            </div>

        </div>
        <div class="form-group form-group-sm">
            <label for="particulars">Particulars</label>
            @Html.TextBoxFor(m => m.Particulars, new
           {
               id = "particulars",
               @class = "form-control",
               maxlength = "255",
               placeholder = "You can mention the subject of the bill"

           })
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="tbDivision">Division *</label>
                    <div class="input-group input-group-sm">
                        <input type="text" id="tbDivision" class="form-control typeahead" value="@Model.SubmittedToDivisionName" required placeholder="Start typing..."
                               data-url="@Url.Action(MVC.ManageBills.GetDivision("~"))" />
                        <span class="input-group-btn ">
                            <button class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button>
                        </span>
                    </div>
                    <small class="help-block">The division which received this bill.</small>
                    @Html.ValidationMessageFor(m => m.SubmittedToDivisionId, null, new
           {
               @class = "help-block"
           })
                    @Html.TextBoxFor(m => m.SubmittedToDivisionId, new
               {
                   style = "height:0; width:0; border:none"
               })

                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="tbContractor">Contractor</label>
                    <div class="input-group input-group-sm">
                        <input type="text" id="tbContractor" class="form-control typeahead" value="@Model.ContractorName" required placeholder="Start typing..."
                               data-url="@Url.Action(MVC.ManageBills.GetContractor("~"))" />
                        <span class="input-group-btn ">
                            <button class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.ContractorId, null, new
           {
               @class = "help-block"
           })
                    @Html.TextBoxFor(m => m.ContractorId, new
               {
                   style = "height:0; width:0; border:none"
               })
                </div>
            </div>
            <div class="col-md-offset-3 col-md-3">
                <div class="form-group">
                    <label for="amount">Amount *</label>
                    @Html.TextBoxFor(m => m.Amount, new
           {
               id = "amount",
               @class = "form-control",
               min = "0",
               type = "number",
               @required = "required",
               placeholder = "Amount(Nu)"

           })
                    @Html.ValidationMessageFor(m => m.Amount, null, new
           {
               @class = "help-block"
           })

                </div>
            </div>
            @*<div class="col-md-3">
                     <div class="form-group">
                         <label for="image">Image</label>
                         @Html.TextBoxFor(m => m.BillImage, new
                {
                    id = "image",
                    @class = "form-control",
                    type = "File"

                })
                     </div>
                 </div>*@
        </div>

        <div class="form-group">
            <label for="remarks">Remarks</label>
            @Html.TextAreaFor(m => m.Remarks, new
           {
               id = "remarks",
               @class = "form-control",
               maxlength = "255"
           })
            @Html.ValidationMessageFor(m => m.Remarks, null, new
           {
               @class = "help-block"
           })
        </div>
        <div class="form-group" style="display:inline-block">
            <button type="submit" class="btn btn-primary">Save Bill</button>
            <a href="@Url.Action(MVC.ManageBills.ShowBill(Model.Id))">Cancel</a>
        </div>
    </div>
</form>
<div class="dropdown">
    <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
        Delete
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
        <li role="presentation" style="text-align:center">
            <div>
                Are you sure ?
                <form action="@Url.Action(MVC.ManageBills.Delete())" method="post">
                    @Html.HiddenFor(m => m.Id)
                    <button type="submit" class="btn btn-primary">
                        Yes
                    </button>
                </form>
            </div>
        </li>
    </ul>
</div>
@section scripts {
    <link href="@Links.Content.typeahead_css" rel="stylesheet" />
    <link rel="stylesheet" href="@Links.Content.bootstrap_datetimepicker_css" />
    <link rel="stylesheet" href="@Links.Scripts.dropzone.dropzone_css" />
    @*<link rel="stylesheet" href="@Links.Scripts.dropzone.basic_css" />*@
    <script type="text/javascript" src="@Links.Scripts.jqueryval_js"></script>
    <script type="text/javascript" src="@Links.Scripts.dropzone.dropzone_js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            "use strict";
            $('#tbDivision,#tbContractor').each(function (index, elem) {
                $(elem).typeahead(null, {
                    //name: 'Division',
                    displayKey: 'label',
                    source: function (query, cb) {
                        var url = $(elem).attr('data-url').replace('~', query);
                        $.get(url).done(function (data, textStatus, jqXHR) {
                            this.cb(data);
                        }.bind({ cb: cb })).fail(function (jqXHR, textStatus, errorThrown) {
                            if (jqXHR.status == 500) {
                                this.cb([{ label: 'Error ' + (jqXHR.responseText || errorThrown), value: '' }]);
                            } else {
                                this.cb([{ label: 'Http Error ' + jqXHR.status + ': ' + errorThrown + ' ' + this.url, value: '' }]);
                            }
                        }.bind({ cb: cb, url: url }));
                    },
                    templates: {
                        empty: 'No matching results found'
                    }
                }).on('typeahead:selected typeahead:autocompleted', function (e, sug, ds) {
                    // Store the id of the selected division in the hdden field
                    //$('#hfDivisionId').val(sug.value);
                    $(this).closest('div.form-group').find('input:not(".typeahead")').val(sug.value);
                }).on('input', function (e) {
                    // When user changes the divisionId, empty the hidden field
                    $(this).closest('div.form-group').find('input:not(".typeahead")').val('');
                });

            });


            $("#billDatePicker,#divSubDatePicker,#dueDatePicker").datetimepicker({
                format: 'D/M/YYYY'
            });


            Dropzone.options.myDropzone = {
                init: function () {
                    this.on("addedfile", function (file) {
                        // Create the remove button
                        var removeButton = Dropzone.createElement("<div style='text-align:center'><button class='btn btn-sm btn-info'>Remove file</button><div>");

                        // Capture the Dropzone instance as closure.
                        var _this = this;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                            //var name = file.name;
                            //$.ajax({
                            //    type: 'POST',
                            //    url: '',
                            //    data: "id=" + name,
                            //    dataType: 'html'
                            //});

                            //var _ref;
                            //return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;


                            // Create the mock file:
                            var mockFile = { name: "Filename", size: 12345 };

                            // Call the default addedfile event handler
                            myDropzone.emit("addedfile", mockFile);

                            // And optionally show the thumbnail of the file:
                            myDropzone.emit("thumbnail", mockFile, "/image/url");

                            // If you use the maxFiles option, make sure you adjust it to the
                            // correct amount:
                            var existingFileCount = 1; // The number of files already uploaded
                            myDropzone.options.maxFiles = myDropzone.options.maxFiles - existingFileCount;


                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                    });
                }


            };



        });
    </script>
}
