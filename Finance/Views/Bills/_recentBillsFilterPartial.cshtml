@model PhpaAll.Bills.RecentBillsViewModel
<form id="frmFilters" method="get" action="@Url.Action(MVC.Bills.RecentBills())" style="font-size:0.95em">
    <button type="submit" class="btn btn-primary">Apply Filters</button>
    @if (Model.IsFiltered)
    {
        <a href="@Url.Action(MVC.Bills.RecentBills())">Reset Filters</a>
    }
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
            <div class="panel-title">
                <a class="collapsed" data-toggle="collapse" href="#fsApprovePaid" aria-expanded="false" aria-controls="#fsApprovePaid">
                    <span class="caret"></span>  Approved or Paid
                </a>
                @if (Model.FilterApprovedBills.HasValue || Model.FilterPaidBills.HasValue)
                {
                        <span class="glyphicon glyphicon-filter"></span><small>@(Model.FilterApprovedBills.HasValue ? ((Model.FilterApprovedBills == true) ? "Approved" : "Unapproved") : null)</small>
                        <small>@(Model.FilterPaidBills.HasValue ? ((Model.FilterPaidBills == true) ? "Paid" : "Unpaid") : null)</small>

                }
            </div>
        </div>
        <div id="fsApprovePaid" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body" style="padding-left:4mm; padding-right:1mm">
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.approved" value="true" checked="@(Model.FilterApprovedBills == true ? true: (bool?)null)">
                        Approved
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.approved" value="false" checked="@(Model.FilterApprovedBills == false ? true: (bool?)null)">
                        Unapproved
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.approved" checked="@(Model.FilterApprovedBills == null ? true: (bool?)null)" value="" />
                        Both
                    </label>
                </div>

                <hr />
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.paid" value="true" checked="@(Model.FilterPaidBills == true ? true: (bool?)null)">
                        Paid
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.paid" value="false" checked="@(Model.FilterPaidBills == false ? true: (bool?)null)">
                        Unpaid
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.paid" checked="@(Model.FilterPaidBills == null ? true: (bool?)null)" value="">
                        Both
                    </label>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
            <div class="panel-title">
                <a class="collapsed" data-toggle="collapse" href="#fsBillDates" aria-expanded="false" aria-controls="fsBillDates">
                    <span class="caret"></span>  Dates, Amount
                </a>
            </div>
            @if (Model.DateFrom != null || Model.DateTo != null)
            {
                <div class="text-success">
                    <span class="glyphicon glyphicon-filter"></span> <span>Bill Date from @Html.DisplayFor(m => m.DateFrom) to @Html.DisplayFor(m => m.DateTo)</span>
                </div>
            }
            @if (Model.FilterMinAmount != null || Model.FilterMaxAmount != null)
            {
                <div class="text-success">
                    <span class="glyphicon glyphicon-filter"></span> <span>Amount from @Html.DisplayFor(m => m.FilterMinAmount) to @Html.DisplayFor(m => m.FilterMaxAmount)</span>
                </div>
            }
        </div>
        <div id="fsBillDates" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
                <fieldset>
                    <legend>Bill Date</legend>

                    <div class="form-group @(Model.DateFrom.HasValue ? "has-success" : "")">
                        <div class='input-group input-group-sm date' id='billDatePickerFrom'>
                            <input type="date" class="form-control input-sm" size="7" placeholder="From" name="@MVC.Bills.RecentBillsParams.dateFrom"
                                   value="@Html.DisplayFor(m => m.DateFrom)" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group @(Model.DateTo.HasValue ? "has-success" : "")">
                        <div class='input-group input-group-sm date' id='billDatePickerTo'>
                            <input type="date" class="form-control input-sm" size="7" placeholder="To" name="@MVC.Bills.RecentBillsParams.dateTo" value="@Html.DisplayFor(m => m.DateTo)" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>

                </fieldset>
                <fieldset>
                    <legend>Amount</legend>
                    <div class="form-group @(Model.FilterMinAmount.HasValue ? "has-success" : "")">
                        <input type="number" class="form-control input-sm" size="8" placeholder="Min" name="@MVC.Bills.RecentBillsParams.minAmount" value="@Model.FilterMinAmount" />
                    </div>
                    <div class="form-group @(Model.FilterMaxAmount.HasValue ? "has-success" : "")">
                        <input type="number" class="form-control input-sm" size="8" placeholder="Max" name="@MVC.Bills.RecentBillsParams.maxAmount" value="@Model.FilterMaxAmount" />
                    </div>

                </fieldset>
            </div>
        </div>
    </div>
    @if (Model.Contractors.Count > 1)
    {
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingTwo">
                <div class="panel-title">
                    <a class="collapsed" data-toggle="collapse" href="#fsContractors" aria-expanded="false" aria-controls="fsContractors">
                        <span class="caret"></span> Contractors
                        @if (Model.SelectedContracatorsCount.HasValue)
                        {
                            <span class="glyphicon glyphicon-filter"></span>
                        }
                        else
                        {
                        <span class="badge">@Model.Contractors.Count</span>
                        }
                    </a>
                </div>
                @if (Model.SelectedContracatorsCount.HasValue)
                {
                    <ul class="list-unstyled text-success">
                        @for (var i = 0; i < Model.Contractors.Count; ++i)
                        {
                            if (Model.Contractors[i].Selected)
                            {
                                <li style="white-space: nowrap; overflow: hidden; -ms-text-overflow: ellipsis; -o-text-overflow: ellipsis; text-overflow: ellipsis; max-width: 12em;">
                                    @Html.DisplayFor(m => m.Contractors[i].Name)
                                </li>
                            }
                        }
                    </ul>
                    @*<small><em><span class="glyphicon glyphicon-filter"></span> @Html.DisplayFor(m => m.SelectedContracatorsCount) Contractor(s)</em></small>*@
                }
            </div>
            <div id="fsContractors" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                <div class="panel-body">
                    @for (var i = 0; i < Model.Contractors.Count; ++i)
                    {
                        <div class="@(Model.Contractors[i].Selected ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.contractors" value="@Model.Contractors[i].Id" checked="@Model.Contractors[i].Selected" />
                                    @Html.DisplayFor(m => m.Contractors[i].Name)
                                    <small style="white-space:nowrap">
                                        <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.contractors, Model.Contractors[i].Id))">
                                            only
                                            <span class="badge">@Html.DisplayFor(m => m.Contractors[i].Count)</span>
                                        </a>
                                    </small>
                                </label>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    @if (Model.Divisions.Count > 1 || Model.Stations.Count > 1)
    {
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingTwo">
                <div class="panel-title">
                    <a class="collapsed" data-toggle="collapse" href="#fsDivisions" aria-expanded="false" aria-controls="fsDivisions">
                        <span class="caret"></span> Division
                        @if (!Model.SelectedDivisionsCount.HasValue && !Model.SelectedStationsCount.HasValue)
                        {
                            <span class="badge">@Model.Divisions.Count</span>
                        }
                        @@Station
                        @if (!Model.SelectedDivisionsCount.HasValue && !Model.SelectedStationsCount.HasValue)
                        {
                            <span class="badge">@Model.Stations.Count</span>
                        }
                    </a>
                    @if (Model.SelectedDivisionsCount.HasValue || Model.SelectedStationsCount.HasValue)
                    {
                        <div>
                            <small>              <span class="glyphicon glyphicon-filter"></span></small>
                            @if (Model.SelectedDivisionsCount.HasValue)
                            {
                                <small> @Html.DisplayFor(m => m.SelectedDivisionsCount) Division(s)</small>
                            }
                            @if (Model.SelectedStationsCount.HasValue)
                            {
                                <small>@Html.DisplayFor(m => m.SelectedStationsCount) Stations(s)</small>
                            }
                        </div>
                    }
                </div>
            </div>
            <div id="fsDivisions" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                <div class="panel-body">
                    @for (var i = 0; i < Model.Divisions.Count; ++i)
                    {
                        <div class="@(Model.Divisions[i].Selected ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.divisions" value="@Model.Divisions[i].Id" checked="@Model.Divisions[i].Selected">
                                    @Html.DisplayFor(m => m.Divisions[i].Name)
                                    <small style="white-space:nowrap">
                                        <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.divisions, Model.Divisions[i].Id))">
                                            only
                                            <span class="badge"> @Html.DisplayFor(m => m.Divisions[i].Count)</span>
                                        </a>
                                    </small>
                                </label>
                            </div>
                        </div>
                    }

                    <hr />
                    <div id="fsStations">
                        @for (var i = 0; i < Model.Stations.Count; ++i)
                        {
                            <div class="@(Model.Stations[i].Selected ? "has-success" : (string)null)">
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" name="@MVC.Bills.RecentBillsParams.stations" value="@Model.Stations[i].Id" checked="@Model.Stations[i].Selected" />
                                        @Html.DisplayFor(m => m.Stations[i].Name)
                                        <small style="white-space:nowrap">
                                            <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.stations, Model.Stations[i].Id))">
                                                only
                                                <span class="badge">@Html.DisplayFor(m => m.Stations[i].Count)</span>
                                            </a>
                                        </small>
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    @if (Model.ProcessingDivisions.Count > 1)
    {
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingTwo">
                <div class="panel-title">
                    <a class="collapsed" data-toggle="collapse" href="#fsprocessingDivision" aria-expanded="false" aria-controls="fsprocessingDivision">
                        <span class="caret"></span> &rarr; At Division
                        @if (Model.SelectedProcessingDivisionsCount.HasValue)
                        {
                            <span class="glyphicon glyphicon-filter"></span>
                        }
                        else
                        {
                            <span class="badge">@Model.ProcessingDivisions.Count</span>
                        }
                    </a>
                    @if (Model.SelectedProcessingDivisionsCount.HasValue)
                    {
                        <ul class="list-unstyled text-success">
                            @for (var i = 0; i < Model.ProcessingDivisions.Count; ++i)
                            {
                                if (Model.ProcessingDivisions[i].Selected)
                                {
                                    <li style="white-space: nowrap; overflow: hidden; -ms-text-overflow: ellipsis; -o-text-overflow: ellipsis; text-overflow: ellipsis; max-width: 12em;">
                                        @Html.DisplayFor(m => m.ProcessingDivisions[i].Name)
                                    </li>
                                }
                            }
                        </ul>

                        @*<small><em><span class="glyphicon glyphicon-filter"></span> @Html.DisplayFor(m => m.SelectedProcessingDivisionsCount) Division(s)</em></small>*@
                    }
                </div>
            </div>
            <div id="fsprocessingDivision" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                <div class="panel-body">
                    @for (var i = 0; i < Model.ProcessingDivisions.Count; ++i)
                    {
                        <div class="@(Model.ProcessingDivisions[i].Selected ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.processingDivisions" value="@Model.ProcessingDivisions[i].Id" checked="@Model.[i].Selected">
                                    @Html.DisplayFor(m => m.ProcessingDivisions[i].Name)
                                    <small style="white-space:nowrap">
                                        <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.processingDivisions, Model.ProcessingDivisions[i].Id))">
                                            only
                                            <span class="badge"> @Html.DisplayFor(m => m.ProcessingDivisions[i].Count)</span>
                                        </a>
                                    </small>
                                </label>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    @if (Model.Approvers.Count > 1)
    {
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingTwo">
                <div class="panel-title">
                    <a class="collapsed" data-toggle="collapse" href="#fsApprovers" aria-expanded="false" aria-controls="fsApprovers">
                        <span class="caret"></span> Approvers
                        @if (Model.SelectedApproversCount.HasValue)
                        {
                            <span class="glyphicon glyphicon-filter"></span>
                        }
                        else
                        {
                            <span class="badge">@Model.Approvers.Count</span>
                        }

                    </a>
                    @if (Model.SelectedApproversCount.HasValue)
                    {
                        <ul class="list-unstyled text-success">
                            @for (var i = 0; i < Model.Approvers.Count; ++i)
                            {
                                if (Model.Approvers[i].Selected)
                                {
                                    <li style="white-space: nowrap; overflow: hidden; -ms-text-overflow: ellipsis; -o-text-overflow: ellipsis; text-overflow: ellipsis; max-width: 12em;">
                                        @Html.DisplayFor(m => m.Approvers[i].Name)
                                    </li>
                                }
                            }
                        </ul>

                        @*<small><em><span class="glyphicon glyphicon-filter"></span> @Html.DisplayFor(m => m.SelectedApproversCount) Approver(s)</em></small>*@
                    }
                </div>
            </div>
            <div id="fsApprovers" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                <div class="panel-body">
                    @for (var i = 0; i < Model.Approvers.Count; ++i)
                    {
                        <div class="@(Model.Approvers[i].Selected ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.approvers" value="@Model.Approvers[i].Id" checked="@Model.Approvers[i].Selected">
                                    @Html.DisplayFor(m => m.Approvers[i].Name)
                                </label>
                                <small style="white-space:nowrap">
                                    <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.approvers, Model.Approvers[i].Id))">
                                        only
                                        <span class="badge">@Html.DisplayFor(m => m.Approvers[i].Count)</span>
                                    </a>
                                </small>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    <button type="submit" class="btn btn-primary">Apply Filters</button>
    @if (Model.IsFiltered)
    {
        <a href="@Url.Action(MVC.Bills.RecentBills())">Reset Filters</a>
    }
</form>

