@model PhpaAll.Bills.RecentBillsViewModel
<form id="frmFilters" method="get" action="@Url.Action(MVC.Bills.RecentBills())" style="font-size:0.95em">
    <button type="submit" class="btn btn-primary">Apply Filters</button>
    @if (Model.IsFiltered)
    {
        <a href="@Url.Action(MVC.Bills.RecentBills())">Reset Filters</a>
    }
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
            <div class="panel-title">
                <a class="collapsed" data-toggle="collapse" href="#fsApprovePaid" aria-expanded="false" aria-controls="#fsApprovePaid">
                    <span class="caret"></span>  Paid
                </a>
            </div>
            @if (Model.FilterPaidBills.HasValue)
            {
                <ul class="list-inline text-success">
                    <li>
                        <span class="glyphicon glyphicon-filter"></span>
                    </li>
                    <li>@(Model.FilterPaidBills.HasValue ? ((Model.FilterPaidBills == true) ? "Paid" : "Unpaid") : null)</li>
                </ul>

            }
        </div>
        <div id="fsApprovePaid" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body" style="padding-left:4mm; padding-right:1mm">
                @*<div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.approved" value="true" checked="@(Model.FilterApprovedBills == true ? true: (bool?)null)">
                        Approved
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.approved" value="false" checked="@(Model.FilterApprovedBills == false ? true: (bool?)null)">
                        Unapproved
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.approved" checked="@(Model.FilterApprovedBills == null ? true: (bool?)null)" value="" />
                        Both
                    </label>
                </div>

                <hr />*@
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.paid" value="true" checked="@(Model.FilterPaidBills == true ? true: (bool?)null)">
                        Paid
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.paid" value="false" checked="@(Model.FilterPaidBills == false ? true: (bool?)null)">
                        Unpaid
                    </label>
                </div>
                <div class="radio">
                    <label>
                        <input type="radio" name="@MVC.Bills.RecentBillsParams.paid" checked="@(Model.FilterPaidBills == null ? true: (bool?)null)" value="">
                        Both
                    </label>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
            <div class="panel-title">
                <a class="collapsed" data-toggle="collapse" href="#fsBillDates" aria-expanded="false" aria-controls="fsBillDates">
                    <span class="caret"></span>  Dates, Amount
                </a>
            </div>
            @if (Model.DateFrom != null || Model.DateTo != null)
            {
                <div class="text-success">
                    <span class="glyphicon glyphicon-filter"></span> <span>Bill Date from @Html.DisplayFor(m => m.DateFrom) to @Html.DisplayFor(m => m.DateTo)</span>
                </div>
            }
            @if (Model.DueDateFrom != null || Model.DueDateTo != null)
            {
                <div class="text-success">
                    <span class="glyphicon glyphicon-filter"></span> <span>Due Date from @Html.DisplayFor(m => m.DueDateFrom) to @Html.DisplayFor(m => m.DueDateTo)</span>
                </div>
            }
            @if (Model.FilterMinAmount != null || Model.FilterMaxAmount != null)
            {
                <div class="text-success">
                    <span class="glyphicon glyphicon-filter"></span> <span>Amount from @Html.DisplayFor(m => m.FilterMinAmount) to @Html.DisplayFor(m => m.FilterMaxAmount)</span>
                </div>
            }
            @if (Model.FilterDueDateNull.HasValue && Model.FilterDueDateNull.Value)
            {
                <div class="text-success">
                    <span class="glyphicon glyphicon-filter"></span> <span>Due date unspecified</span>
                </div>
            }
        </div>
        <div id="fsBillDates" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
                <fieldset>
                    <legend>Bill Date</legend>

                    <div class="form-group @(Model.DateFrom.HasValue ? "has-success" : "")">
                        <div class='input-group input-group-sm date' id='billDatePickerFrom'>
                            <input type="date" class="form-control input-sm" size="7" placeholder="From" name="@MVC.Bills.RecentBillsParams.dateFrom"
                                   value="@Html.DisplayFor(m => m.DateFrom)" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group @(Model.DateTo.HasValue ? "has-success" : "")">
                        <div class='input-group input-group-sm date' id='billDatePickerTo'>
                            <input type="date" class="form-control input-sm" size="7" placeholder="To" name="@MVC.Bills.RecentBillsParams.dateTo" value="@Html.DisplayFor(m => m.DateTo)" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>

                </fieldset>
                <fieldset>
                    <legend>Due Date</legend>
                    <div class="checkbox">
                        <label>
                            <input type="checkbox" name="@MVC.Bills.RecentBillsParams.dueDateNull" value="true" id="cbDueDateNull" checked="@Model.FilterDueDateNull" />
                            Unspecified
                        </label>
                    </div>
                    <div class="form-group @(Model.DueDateFrom.HasValue ? "has-success" : "")">
                        <div class='input-group input-group-sm date' id='dueDatePickerFrom'>
                            <input type="date" class="form-control input-sm" size="7" placeholder="From" name="@MVC.Bills.RecentBillsParams.dueDateFrom"
                                   value="@Html.DisplayFor(m => m.DueDateFrom)" disabled="@Model.FilterDueDateNull" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group @(Model.DueDateTo.HasValue ? "has-success" : "")">
                        <div class='input-group input-group-sm date' id='dueDatePickerTo'>
                            <input type="date" class="form-control input-sm" size="7" placeholder="To" name="@MVC.Bills.RecentBillsParams.dueDateTo"
                                   value="@Html.DisplayFor(m => m.DueDateTo)" disabled="@Model.FilterDueDateNull" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>Amount</legend>
                    <div class="form-group @(Model.FilterMinAmount.HasValue ? "has-success" : "")">
                        <input type="number" class="form-control input-sm" size="8" placeholder="Min" name="@MVC.Bills.RecentBillsParams.minAmount" value="@Model.FilterMinAmount" />
                    </div>
                    <div class="form-group @(Model.FilterMaxAmount.HasValue ? "has-success" : "")">
                        <input type="number" class="form-control input-sm" size="8" placeholder="Max" name="@MVC.Bills.RecentBillsParams.maxAmount" value="@Model.FilterMaxAmount" />
                    </div>

                </fieldset>
            </div>
        </div>
    </div>
    @if (Model.Contractors.Count > 1)
    {
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingTwo">
                <div class="panel-title">
                    <a class="collapsed" data-toggle="collapse" href="#fsContractors" aria-expanded="false" aria-controls="fsContractors">
                        <span class="caret"></span> Contractors
                        @if (Model.SelectedContractorsCount == null)
                        {
                            <span class="badge">@Model.Contractors.Count</span>
                        }
                        else
                        {

                            <span class="glyphicon glyphicon-filter"></span>
                        }
                    </a>
                </div>
                @if (Model.SelectedContractorsCount.HasValue)
                {
                    <ul class="list-unstyled text-success">
                        @for (var i = 0; i < Model.Contractors.Count; ++i)
                        {
                            if (Model.Contractors[i].Selected)
                            {
                                <li class="filter-truncated">
                                    @Html.DisplayFor(m => m.Contractors[i].Name)
                                </li>
                            }
                        }
                    </ul>
                }
            </div>
            <div id="fsContractors" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                <div class="panel-body">
                    <div class="pull-right">
                        <a href="#" class="uncheck">Uncheck All</a>
                    </div>
                    @for (var i = 0; i < Model.Contractors.Count; ++i)
                    {
                        <div class="@(Model.Contractors[i].Selected && Model.SelectedContractorsCount.HasValue ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.contractors" value="@Model.Contractors[i].Id" checked="@Model.Contractors[i].Selected" />
                                    @Html.DisplayFor(m => m.Contractors[i].Name)
                                    <small style="white-space:nowrap">
                                        <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.contractors, Model.Contractors[i].Id))">
                                            only
                                            <span class="badge">@Html.DisplayFor(m => m.Contractors[i].Count)</span>
                                        </a>
                                    </small>
                                </label>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    @if (Model.Divisions.Count > 1 || Model.Stations.Count > 1)
    {
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingTwo">
                <div class="panel-title">
                    <a class="collapsed" data-toggle="collapse" href="#fsDivisions" aria-expanded="false" aria-controls="fsDivisions">
                        <span class="caret"></span> Division
                        @if (Model.SelectedDivisionsCount == null)
                        {
                            <span class="badge">@Model.Divisions.Count</span>
                        }
                        @@Station
                        @if (Model.SelectedStationsCount == null)
                        {
                            <span class="badge">@Model.Stations.Count</span>
                        }
                    </a>
                    @if (Model.SelectedDivisionsCount.HasValue || Model.SelectedStationsCount.HasValue)
                    {
                        <span class="glyphicon glyphicon-filter"></span>
                    }
                </div>

                @if (Model.SelectedDivisionsCount.HasValue)
                {
                    <ul class="list-unstyled text-success">
                        @for (var i = 0; i < Model.Divisions.Count; ++i)
                        {
                            if (Model.Divisions[i].Selected)
                            {
                                <li class="filter-truncated">
                                    @Html.DisplayFor(m => m.Divisions[i].Name)
                                </li>
                            }
                        }
                    </ul>
                }
                @if (Model.SelectedStationsCount.HasValue)
                {
                    <ul class="list-inline text-success">
                        @for (var i = 0; i < Model.Stations.Count; ++i)
                        {
                            if (Model.Stations[i].Selected)
                            {
                                <li>
                                    @Html.DisplayFor(m => m.Stations[i].Name)
                                </li>
                            }
                        }
                    </ul>

                }

            </div>
            <div id="fsDivisions" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                <div class="panel-body">
                    <div class="pull-right">
                        <a href="#" class="uncheck">Uncheck All</a>
                    </div>
                    @for (var i = 0; i < Model.Divisions.Count; ++i)
                    {
                        <div class="@(Model.Divisions[i].Selected && Model.SelectedDivisionsCount.HasValue ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.divisions" value="@Model.Divisions[i].Id" checked="@Model.Divisions[i].Selected">
                                    @Html.DisplayFor(m => m.Divisions[i].Name)
                                    <small style="white-space:nowrap">
                                        <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.divisions, Model.Divisions[i].Id))">
                                            only
                                            <span class="badge"> @Html.DisplayFor(m => m.Divisions[i].Count)</span>
                                        </a>
                                    </small>
                                </label>
                            </div>
                        </div>
                    }

                    <hr />
                    <div id="fsStations">
                        @for (var i = 0; i < Model.Stations.Count; ++i)
                        {
                            <div class="@(Model.Stations[i].Selected && Model.SelectedStationsCount.HasValue ? "has-success" : (string)null)">
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" name="@MVC.Bills.RecentBillsParams.stations" value="@Model.Stations[i].Id" checked="@Model.Stations[i].Selected" />
                                        @Html.DisplayFor(m => m.Stations[i].Name)
                                        <small style="white-space:nowrap">
                                            <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.stations, Model.Stations[i].Id))">
                                                only
                                                <span class="badge">@Html.DisplayFor(m => m.Stations[i].Count)</span>
                                            </a>
                                        </small>
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    @if (Model.AtDivisions.Count > 1)
    {
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingTwo">
                <div class="panel-title">
                    <a class="collapsed" data-toggle="collapse" href="#fsprocessingDivision" aria-expanded="false" aria-controls="fsprocessingDivision">
                        <span class="caret"></span> &rarr; At Division
                        @if (Model.SelectedAtDivisionsCount.HasValue)
                        {
                            <span class="glyphicon glyphicon-filter"></span>
                        }
                        else
                        {
                            <span class="badge">@Model.AtDivisions.Count</span>
                        }
                    </a>
                </div>
                @if (Model.SelectedAtDivisionsCount.HasValue)
                {
                    <ul class="list-unstyled text-success">
                        @for (var i = 0; i < Model.AtDivisions.Count; ++i)
                        {
                            if (Model.AtDivisions[i].Selected)
                            {
                                <li class="filter-truncated">
                                    @Html.DisplayFor(m => m.AtDivisions[i].Name)
                                </li>
                            }
                        }
                    </ul>
                }
            </div>
            <div id="fsprocessingDivision" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                <div class="panel-body">
                    <div class="pull-right">
                        <a href="#" class="uncheck">Uncheck All</a>
                    </div>
                    @for (var i = 0; i < Model.AtDivisions.Count; ++i)
                    {
                        <div class="@(Model.AtDivisions[i].Selected && Model.SelectedAtDivisionsCount.HasValue ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.processingDivisions" value="@Model.AtDivisions[i].Id" checked="@Model.AtDivisions[i].Selected">
                                    @Html.DisplayFor(m => m.AtDivisions[i].Name)
                                    <small style="white-space:nowrap">
                                        <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.processingDivisions, Model.AtDivisions[i].Id))">
                                            only
                                            <span class="badge"> @Html.DisplayFor(m => m.AtDivisions[i].Count)</span>
                                        </a>
                                    </small>
                                </label>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    @if (Model.Approvers.Count > 1)
    {
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingTwo">
                <div class="panel-title">
                    <a class="collapsed" data-toggle="collapse" href="#fsApprovers" aria-expanded="false" aria-controls="fsApprovers">
                        <span class="caret"></span> Approvers
                        @if (Model.SelectedApproversCount.HasValue)
                        {
                            <span class="glyphicon glyphicon-filter"></span>
                        }
                        else
                        {
                            <span class="badge">@Model.Approvers.Count</span>
                        }

                    </a>
                </div>
                @if (Model.SelectedApproversCount.HasValue)
                {
                    <ul class="list-inline text-success">
                        @for (var i = 0; i < Model.Approvers.Count; ++i)
                        {
                            if (Model.Approvers[i].Selected)
                            {
                                <li>
                                    @Html.DisplayFor(m => m.Approvers[i].Name)
                                </li>
                            }
                        }
                    </ul>
                }
            </div>
            <div id="fsApprovers" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                <div class="panel-body">
                    <div class="pull-right">
                        <a href="#" class="uncheck">Uncheck All</a>
                    </div>
                    @for (var i = 0; i < Model.Approvers.Count; ++i)
                    {
                        <div class="@(Model.Approvers[i].Selected && Model.SelectedApproversCount.HasValue ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.approvers" value="@Model.Approvers[i].Id" checked="@Model.Approvers[i].Selected">
                                    @Html.DisplayFor(m => m.Approvers[i].Name)
                                </label>
                                <small style="white-space:nowrap">
                                    <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.approvers, Model.Approvers[i].Id))">
                                        only
                                        <span class="badge">@Html.DisplayFor(m => m.Approvers[i].Count)</span>
                                    </a>
                                </small>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    <button type="submit" class="btn btn-primary">Apply Filters</button>
    @if (Model.IsFiltered)
    {
        <a href="@Url.Action(MVC.Bills.RecentBills())">Reset Filters</a>
    }
</form>
