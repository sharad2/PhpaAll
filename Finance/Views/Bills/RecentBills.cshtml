@model PhpaAll.Bills.RecentBillsViewModel
@{
    ViewBag.Title = "Recent Bills";
}
@section scripts {
    <link rel="stylesheet" href="@Links.Content.bootstrap_datetimepicker_css" />
    <script type="text/javascript" src="@Links.Scripts.jqueryval_js"></script>
    <script type="text/javascript">
        $(document).ready(function () {


            $("#billDatePickerTo,#billDatePickerFrom").datetimepicker({
                format: 'D/M/YYYY'
            });

            // Code to clean up the URL by not posting unnecessary filters
            $('#frmFilters').on('submit', function (e) {
                // If all checkboxes in a group are checked, uncheck all so that they do not get posted
                $('#fsDivisions,#fsContractors,#fsApprovers,#fsStations').each(function (index, elem) {
                    if ($('input:not(:checked)', elem).length == 0) {
                        //alert('Hi');
                        $('input:checked', elem).prop('checked', false);
                    }
                });
                //alert($('input:not(value),input[value=""]', '#fsBillDates,#fsAmounts').length);

                // Disable empty textboxes so that they do not get posted
                $('input', '#fsBillDates,#fsAmounts').filter(function (index, elem) {
                    return $(elem).val() == '';
                }).prop('disabled', true);
                //return false;
            });
        });
    </script>
}
<h2>
    @ViewBag.Title
    <small>
        <a href="@Url.Action(MVC.ManageBills.Create())">Create new bill</a>
    </small>
</h2>
<p>
    <a href="@Model.UrlExcel">Export to Excel</a>
</p>
<pre>
TODO: Amounts of approved bills will display in green
</pre>
<div class="row">
    <div class="col-md-3">
        <form id="frmFilters" method="get" action="@Url.Action(MVC.Bills.RecentBills())">
            <button type="submit" class="btn btn-primary">Apply Filters</button>
            @if (Model.IsFiltered)
            {
                <a href="@Url.Action(MVC.Bills.RecentBills())">Reset Filters</a>
            }

            <fieldset id="fsBillDates">
                <legend>Bill Date Range</legend>
                <div class="form-inline">
                    <div class="form-group @(Model.DateFrom.HasValue ? "has-success" : "")">
                        <div class='input-group date' id='billDatePickerFrom'>
                            <input type="date" class="form-control input-sm" size="6" placeholder="From" name="@MVC.Bills.RecentBillsParams.dateFrom" value="@Html.DisplayFor(m => m.DateFrom)" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group @(Model.DateTo.HasValue ? "has-success" : "")">
                        <div class='input-group date' id='billDatePickerTo'>
                            <input type="date" class="form-control input-sm" size="6" placeholder="To" name="@MVC.Bills.RecentBillsParams.dateTo" value="@Html.DisplayFor(m => m.DateTo)" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </fieldset>
            <fieldset id="fsAmounts">
                <legend>Amount</legend>
                <div class="form-inline">
                    <input type="number" class="form-control input-sm" size="10" placeholder="Min" name="@MVC.Bills.RecentBillsParams.amounts" value="@Model.FilterMinAmount" />
                    <input type="number" class="form-control input-sm" size="10" placeholder="Max" name="@MVC.Bills.RecentBillsParams.amounts" value="@Model.FilterMaxAmount"
                           min="100" />
                </div>
            </fieldset>
            @if (Model.Divisions.Count > 1)
            {
                <fieldset id="fsDivisions">
                    <legend>Submitted to Division</legend>
                    @for (var i = 0; i < Model.Divisions.Count; ++i)
                    {
                        <div class="@(Model.Divisions[i].Selected ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.divisions" value="@Model.Divisions[i].Id" checked="@Model.Divisions[i].Selected">
                                    @Html.DisplayFor(m => m.Divisions[i].Name)
                                    <small style="white-space:nowrap">
                                        <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.divisions, Model.Divisions[i].Id))">
                                            only
                                            <span class="badge"> @Html.DisplayFor(m => m.Divisions[i].Count)</span>
                                        </a>
                                    </small>
                                </label>
                            </div>
                        </div>
                    }
                </fieldset>
            }
            @if (Model.Contractors.Count > 1)
            {
                <fieldset id="fsContractors">
                    <legend>Contractors</legend>
                    @for (var i = 0; i < Model.Contractors.Count; ++i)
                    {
                        <div class="@(Model.Contractors[i].Selected ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.contractors" value="@Model.Contractors[i].Id" checked="@Model.Contractors[i].Selected" />
                                    @Html.DisplayFor(m => m.Contractors[i].Name)
                                    <small style="white-space:nowrap">
                                        <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.contractors, Model.Contractors[i].Id))">
                                            only
                                            <span class="badge">@Html.DisplayFor(m => m.Contractors[i].Count)</span>
                                        </a>
                                    </small>
                                </label>
                            </div>
                        </div>
                    }
                </fieldset>
            }
            @if (Model.Approvers.Count > 1)
            {
                <fieldset id="fsApprovers">
                    <legend>Approvers</legend>
                    @for (var i = 0; i < Model.Approvers.Count; ++i)
                    {
                        <div class="@(Model.Approvers[i].Selected ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.approvers" value="@Model.Approvers[i].Id" checked="@Model.Approvers[i].Selected">
                                    @Html.DisplayFor(m => m.Approvers[i].Name)
                                </label>
                                <small style="white-space:nowrap">
                                    <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.approvers, Model.Approvers[i].Id))">
                                        only
                                        <span class="badge">@Html.DisplayFor(m => m.Approvers[i].Count)</span>
                                    </a>
                                </small>
                            </div>
                        </div>
                    }
                </fieldset>
            }
            @if (Model.Stations.Count > 1)
            {
                <fieldset id="fsStations">
                    <legend>Stations</legend>
                    @for (var i = 0; i < Model.Stations.Count; ++i)
                    {
                        <div class="@(Model.Stations[i].Selected ? "has-success" : (string)null)">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="@MVC.Bills.RecentBillsParams.stations" value="@Model.Stations[i].Id" checked="@Model.Stations[i].Selected" />
                                    @Html.DisplayFor(m => m.Stations[i].Name)
                                    <small style="white-space:nowrap">
                                        <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.stations, Model.Stations[i].Id))">
                                            only
                                            <span class="badge">@Html.DisplayFor(m => m.Stations[i].Count)</span>
                                        </a>
                                    </small>
                                </label>
                            </div>
                        </div>
                    }
                </fieldset>
            }
            <button type="submit" class="btn btn-primary">Apply Filters</button>
            @if (Model.IsFiltered)
            {
                <a href="@Url.Action(MVC.Bills.RecentBills())">Reset Filters</a>
            }
        </form>
        <pre>
Approved By: Mgr 1 (22) Mgr2 (26)  Not Approved
Station: S1(23) S2(25) ....
Submitted to Division: ....
Currently in Division: ....
Contractor: ....
Paid / Unpaid
</pre>
    </div>
    <div class="col-md-9">
        <ul class="list-group">
            <li class="list-group-item list-group-item-info">
                <div class="row">
                    <div class="col-md-2">
                        <strong>Bill Date</strong>
                        <br />
                        <em style="white-space:nowrap"><small><strong>Due Date</strong></small></em>
                    </div>
                    <div class="col-md-4">
                        <strong>
                            Division
                            <br />@@
                            Station
                        </strong>
                    </div>
                    <div class="col-md-4">
                        <div style="-ms-text-overflow: ellipsis; -o-text-overflow:ellipsis; text-overflow:ellipsis; white-space:nowrap; overflow:hidden">
                            <strong>
                                Contractor
                                <br />
                                Bill Number
                            </strong>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="text-right">
                            <strong>Amount(Nu.)</strong>
                        </div>
                    </div>
                </div>
            </li>
            @for (var i = 0; i < Model.Bills.Count; ++i)
            {
                <li class="list-group-item">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.DisplayFor(m => m.Bills[i].BillDate)
                            <br />
                            @{
                if (Model.Bills[i].DueDate < DateTime.Now)
                {
                    <em class="label label-danger" style="white-space:nowrap"><small>Due @Html.DisplayFor(m => m.Bills[i].DueDate)</small></em><br />
                }
                else
                {
                    <em style="white-space:nowrap"><small>Due @Html.DisplayFor(m => m.Bills[i].DueDate)</small></em><br />
                }
                            }

                            @{
                if (Model.Bills[i].ApprovedDate != null)
                {
                    <span class="label label-success">Approved @Html.DisplayFor(m => m.Bills[i].ApprovedDate)</span>
                }
                            }

                        </div>
                        <div class="col-md-4">
                            @Html.DisplayFor(m => m.Bills[i].SubmittedToDivisionName)
                            <br />@@
                            @Html.DisplayFor(m => m.Bills[i].StationName)
                        </div>
                        <div class="col-md-4">
                            <div style="-ms-text-overflow: ellipsis; -o-text-overflow:ellipsis; text-overflow:ellipsis; white-space:nowrap; overflow:hidden">
                                <span title="@Model.Bills[i].ContractorName">@Html.DisplayFor(m => m.Bills[i].ContractorName)</span>
                                <br />
                                <small title="@Model.Bills[i].BillNumber">@Html.DisplayFor(m => m.Bills[i].BillNumber)</small>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="text-right">
                                <strong>@Html.DisplayFor(m => m.Bills[i].Amount)</strong>
                            </div>
                            <div class="text-right">
                                <div class="btn-group">
                                    <a class="btn btn-default btn-xs" href="@Url.Action(MVC.ManageBills.ShowBill(Model.Bills[i].Id))"><span class="glyphicon glyphicon-zoom-in"></span></a>
                                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                        <span class="caret"></span>
                                        <span class="sr-only">Toggle Dropdown</span>
                                    </button>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><a href="@Url.Action(MVC.ManageBills.ShowBill(Model.Bills[i].Id))"><span class="glyphicon glyphicon-zoom-in"></span> View</a></li>
                                        <li><a href="@Url.Action(MVC.ManageBills.Edit(Model.Bills[i].Id))"><span class="glyphicon glyphicon-pencil"></span> Edit</a></li>
                                        @{
                if (Model.Bills[i].ApprovedDate == null)
                {
                    <li><a href="@Url.Action(MVC.ManageBills.Edit(Model.Bills[i].Id))"><span class="glyphicon glyphicon-thumbs-up"></span> Approve</a></li>
                }
                                        }

                                    </ul>
                                </div>
                            </div>
                            @*<div class="center-block1">
                                    <div class="btn-group btn-group-sm" role="group" aria-label="...">
                                        <a href="@Url.Action(MVC.ManageBills.ShowBill(Model.Bills[i].Id))" class="btn"><span class="glyphicon glyphicon-zoom-in"></span> View</a>
                                        <a href="@Url.Action(MVC.ManageBills.Edit(Model.Bills[i].Id))" class="btn"><span class="glyphicon glyphicon-pencil"></span> Edit</a>
                                        <a href="@Url.Action(MVC.ManageBills.Edit(Model.Bills[i].Id))" class="btn"><span class="glyphicon glyphicon-thumbs-up"></span> Approve</a>
                                    </div>
                                </div>*@
                        </div>
                    </div>
                    <span style="color:gray">
                        @Html.DisplayFor(m => m.Bills[i].Particulars)
                    </span>
                </li>
            }
        </ul>
    </div>
</div>
