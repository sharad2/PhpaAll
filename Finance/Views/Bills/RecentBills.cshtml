@model PhpaAll.Bills.RecentBillsViewModel
@{
    ViewBag.Title = "Recent Bills";
}
@section scripts {
    <script type="text/javascript" src="@Links.Views.Shared.jqueryval_js"></script>
    <script type="text/javascript">
        $(document).ready(function () {


            $("#billDatePickerTo,#billDatePickerFrom,#billApproveDatePicker").datetimepicker({
                format: 'D/M/YYYY'
            });

            // Code to clean up the URL by not posting unnecessary filters
            $('#frmFilters').on('submit', function (e) {
                // If all checkboxes in a group are checked, uncheck all so that they do not get posted
                $('#fsDivisions,#fsContractors,#fsApprovers,#fsStations,#fsprocessingDivision').each(function (index, elem) {
                    if ($('input:not(:checked)', elem).length == 0) {
                        //alert('Hi');
                        $('input:checked', elem).prop('checked', false);
                    }
                });
                //alert($('input:not(value),input[value=""]', '#fsBillDates,#fsAmounts').length);

                // Disable empty textboxes so that they do not get posted
                $('input', '#fsBillDates,#fsAmounts').filter(function (index, elem) {
                    return $(elem).val() == '';
                }).prop('disabled', true);
                //return false;
            });

            // Handle approve and unapprove buttons
            $('#billGroup').on('click', '.approve', function (e) {
                // Approve button was clicked
                var billId = $(e.target).closest('div.row').find('input:checkbox').attr('value');
                var url = $(e.delegateTarget).attr('data-approve-url');
                //alert(url);
                var data = new Object();
                data[$(e.delegateTarget).attr('data-approve-paramname')] = billId;
                $.post(url, data).done(function () {
                    $(e.target).addClass('btn-success  btn-xs disabled').removeClass('btn-default approve');
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    if (jqXHR.status == 500) {
                        // url was found but server returned error
                        alert(jqXHR.responseText || errorThrown);
                    } else {
                        // Url was bad
                        alert(jqXHR.status + ': ' + errorThrown + ' ' + this.url);
                    }
                });
            });
        });
    </script>
}
<h2>
    @ViewBag.Title
    <small>
        <a href="@Url.Action(MVC.ManageBills.Create())">Create new bill</a>
    </small>
</h2>
@if (Model.IsFiltered)
{
    <div class="alert alert-info" role="alert">
        Filters have been applied. <a class="alert-link" href="@Url.Action(MVC.Bills.RecentBills())">Reset Filters</a>
    </div>
}
<div class="row">
    <div class="col-md-3">
        <form id="frmFilters" method="get" action="@Url.Action(MVC.Bills.RecentBills())" style="font-size:0.95em">
            <button type="submit" class="btn btn-primary">Apply Filters</button>
            @if (Model.IsFiltered)
            {
                <a href="@Url.Action(MVC.Bills.RecentBills())">Reset Filters</a>
            }
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="headingOne">
                    <div class="panel-title">
                        <a class="collapsed" data-toggle="collapse" href="#fsApprovePaid" aria-expanded="false" aria-controls="#fsApprovePaid">
                            <span class="caret"></span>  Approved or Paid
                        </a>
                        @if (Model.FilterApprovedBills.HasValue || Model.FilterPaidBills.HasValue)
                        {
                            <em><span class="glyphicon glyphicon-filter"></span><small>@(Model.FilterApprovedBills.HasValue ? ((Model.FilterApprovedBills == true) ? "Approved" : "Unapproved") : null)</small>
                                <small>@(Model.FilterPaidBills.HasValue ? ((Model.FilterPaidBills == true) ? "Paid" : "Unpaid") : null )</small>
                            </em>
                        }
                    </div>
                </div>
                <div id="fsApprovePaid" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body" style="padding-left:4mm; padding-right:1mm">
                        <div class="radio">
                            <label>
                                <input type="radio" name="@MVC.Bills.RecentBillsParams.approved" value="true" checked="@(Model.FilterApprovedBills == true ? true: (bool?)null)">
                                Approved
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="@MVC.Bills.RecentBillsParams.approved" value="false" checked="@(Model.FilterApprovedBills == false ? true: (bool?)null)">
                                Unapproved
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="@MVC.Bills.RecentBillsParams.approved" checked="@(Model.FilterApprovedBills == null ? true: (bool?)null)" value="" />
                                Both
                            </label>
                        </div>

                        <hr />
                        <div class="radio">
                            <label>
                                <input type="radio" name="@MVC.Bills.RecentBillsParams.paid" value="true" checked="@(Model.FilterPaidBills == true ? true: (bool?)null)">
                                Paid
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="@MVC.Bills.RecentBillsParams.paid" value="false" checked="@(Model.FilterPaidBills == false ? true: (bool?)null)">
                                Unpaid
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="@MVC.Bills.RecentBillsParams.paid" checked="@(Model.FilterPaidBills == null ? true: (bool?)null)" value="">
                                Both
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="headingOne">
                    <div class="panel-title">
                        <a class="collapsed" data-toggle="collapse" href="#fsBillDates" aria-expanded="false" aria-controls="fsBillDates">
                            <span class="caret"></span>  Bill Dates
                        </a>
                        @if (Model.DateFrom != null || Model.DateTo != null)
                        {
                            <em><span class="glyphicon glyphicon-filter"></span> <small>From @Html.DisplayFor(m => m.DateFrom) to @Html.DisplayFor(m => m.DateTo)</small></em>
                        }
                    </div>
                </div>
                <div id="fsBillDates" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body" style="padding-left:1mm; padding-right:1mm">
                        <div class="form-inline">
                            <div class="form-group @(Model.DateFrom.HasValue ? "has-success" : "")">
                                <div class='input-group input-group-sm date' id='billDatePickerFrom'>
                                    <input type="date" class="form-control input-sm" size="7" placeholder="From" name="@MVC.Bills.RecentBillsParams.dateFrom"
                                           value="@Html.DisplayFor(m => m.DateFrom)" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group @(Model.DateTo.HasValue ? "has-success" : "")">
                                <div class='input-group input-group-sm date' id='billDatePickerTo'>
                                    <input type="date" class="form-control input-sm" size="7" placeholder="To" name="@MVC.Bills.RecentBillsParams.dateTo" value="@Html.DisplayFor(m => m.DateTo)" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @if (Model.Contractors.Count > 1)
            {
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="headingTwo">
                        <div class="panel-title">
                            <a class="collapsed" data-toggle="collapse" href="#fsContractors" aria-expanded="false" aria-controls="fsContractors">
                                <span class="caret"></span> Contractors
                                @if (!Model.SelectedContracatorsCount.HasValue)
                                {
                                    <span class="badge">@Model.Contractors.Count</span>
                                }
                            </a>
                            @if (Model.SelectedContracatorsCount.HasValue)
                            {
                                <small><em><span class="glyphicon glyphicon-filter"></span> @Html.DisplayFor(m => m.SelectedContracatorsCount) Contractor(s)</em></small>
                            }
                        </div>
                    </div>
                    <div id="fsContractors" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                        <div class="panel-body">
                            @for (var i = 0; i < Model.Contractors.Count; ++i)
                            {
                                <div class="@(Model.Contractors[i].Selected ? "has-success" : (string)null)">
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" name="@MVC.Bills.RecentBillsParams.contractors" value="@Model.Contractors[i].Id" checked="@Model.Contractors[i].Selected" />
                                            @Html.DisplayFor(m => m.Contractors[i].Name)
                                            <small style="white-space:nowrap">
                                                <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.contractors, Model.Contractors[i].Id))">
                                                    only
                                                    <span class="badge">@Html.DisplayFor(m => m.Contractors[i].Count)</span>
                                                </a>
                                            </small>
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            @if (Model.Divisions.Count > 1 || Model.Stations.Count > 1)
            {
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="headingTwo">
                        <div class="panel-title">
                            <a class="collapsed" data-toggle="collapse" href="#fsDivisions" aria-expanded="false" aria-controls="fsDivisions">
                                <span class="caret"></span> Division
                                @if (!Model.SelectedDivisionsCount.HasValue && !Model.SelectedStationsCount.HasValue)
                                {
                                    <span class="badge">@Model.Divisions.Count</span>
                                }
                                @@Station
                                @if (!Model.SelectedDivisionsCount.HasValue && !Model.SelectedStationsCount.HasValue)
                                {
                                    <span class="badge">@Model.Stations.Count</span>
                                }
                            </a>
                            @if (Model.SelectedDivisionsCount.HasValue || Model.SelectedStationsCount.HasValue)
                            {
                                <div>
                                    <small>              <span class="glyphicon glyphicon-filter"></span></small>
                                    @if (Model.SelectedDivisionsCount.HasValue)
                                    {
                                        <small> @Html.DisplayFor(m => m.SelectedDivisionsCount) Division(s)</small>
                                    }
                                    @if (Model.SelectedStationsCount.HasValue)
                                    {
                                        <small>@Html.DisplayFor(m => m.SelectedStationsCount) Stations(s)</small>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                    <div id="fsDivisions" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                        <div class="panel-body">
                            @for (var i = 0; i < Model.Divisions.Count; ++i)
                            {
                                <div class="@(Model.Divisions[i].Selected ? "has-success" : (string)null)">
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" name="@MVC.Bills.RecentBillsParams.divisions" value="@Model.Divisions[i].Id" checked="@Model.Divisions[i].Selected">
                                            @Html.DisplayFor(m => m.Divisions[i].Name)
                                            <small style="white-space:nowrap">
                                                <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.divisions, Model.Divisions[i].Id))">
                                                    only
                                                    <span class="badge"> @Html.DisplayFor(m => m.Divisions[i].Count)</span>
                                                </a>
                                            </small>
                                        </label>
                                    </div>
                                </div>
                            }

                            <hr />
                            <div id="fsStations">
                                @for (var i = 0; i < Model.Stations.Count; ++i)
                                {
                                    <div class="@(Model.Stations[i].Selected ? "has-success" : (string)null)">
                                        <div class="checkbox">
                                            <label>
                                                <input type="checkbox" name="@MVC.Bills.RecentBillsParams.stations" value="@Model.Stations[i].Id" checked="@Model.Stations[i].Selected" />
                                                @Html.DisplayFor(m => m.Stations[i].Name)
                                                <small style="white-space:nowrap">
                                                    <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.stations, Model.Stations[i].Id))">
                                                        only
                                                        <span class="badge">@Html.DisplayFor(m => m.Stations[i].Count)</span>
                                                    </a>
                                                </small>
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (Model.ProcessingDivisions.Count > 1)
            {
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="headingTwo">
                        <div class="panel-title">
                            <a class="collapsed" data-toggle="collapse" href="#fsprocessingDivision" aria-expanded="false" aria-controls="fsprocessingDivision">
                                <span class="caret"></span> &rarr; At Division
                                @if (!Model.SelectedProcessingDivisionsCount.HasValue)
                                {
                                    <span class="badge">@Model.ProcessingDivisions.Count()</span>
                                }
                            </a>
                            @if (Model.SelectedProcessingDivisionsCount.HasValue)
                            {
                                <small><em><span class="glyphicon glyphicon-filter"></span> @Html.DisplayFor(m => m.SelectedProcessingDivisionsCount) Division(s)</em></small>
                            }
                        </div>
                    </div>
                    <div id="fsprocessingDivision" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                        <div class="panel-body">
                            @for (var i = 0; i < Model.ProcessingDivisions.Count; ++i)
                            {
                                <div class="@(Model.ProcessingDivisions[i].Selected ? "has-success" : (string)null)">
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" name="@MVC.Bills.RecentBillsParams.processingDivisions" value="@Model.ProcessingDivisions[i].Id" checked="@Model.[i].Selected">
                                            @Html.DisplayFor(m => m.ProcessingDivisions[i].Name)
                                            <small style="white-space:nowrap">
                                                <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.processingDivisions, Model.ProcessingDivisions[i].Id))">
                                                    only
                                                    <span class="badge"> @Html.DisplayFor(m => m.ProcessingDivisions[i].Count)</span>
                                                </a>
                                            </small>
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            @if (Model.Approvers.Count > 1)
            {
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="headingTwo">
                        <div class="panel-title">
                            <a class="collapsed" data-toggle="collapse" href="#fsApprovers" aria-expanded="false" aria-controls="fsApprovers">
                                <span class="caret"></span> Approvers
                                @if (!Model.SelectedApproversCount.HasValue)
                                {
                                    <span class="badge">@Model.Approvers.Count</span>
                                }
                            </a>
                            @if (Model.SelectedApproversCount.HasValue)
                            {
                                <small><em><span class="glyphicon glyphicon-filter"></span> @Html.DisplayFor(m => m.SelectedApproversCount) Approver(s)</em></small>
                            }
                        </div>
                    </div>
                    <div id="fsApprovers" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                        <div class="panel-body">
                            @for (var i = 0; i < Model.Approvers.Count; ++i)
                            {
                                <div class="@(Model.Approvers[i].Selected ? "has-success" : (string)null)">
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" name="@MVC.Bills.RecentBillsParams.approvers" value="@Model.Approvers[i].Id" checked="@Model.Approvers[i].Selected">
                                            @Html.DisplayFor(m => m.Approvers[i].Name)
                                        </label>
                                        <small style="white-space:nowrap">
                                            <a href="@Url.Action(MVC.Bills.RecentBills().AddRouteValue(MVC.Bills.RecentBillsParams.approvers, Model.Approvers[i].Id))">
                                                only
                                                <span class="badge">@Html.DisplayFor(m => m.Approvers[i].Count)</span>
                                            </a>
                                        </small>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="headingOne">
                    <div class="panel-title">
                        <a class="collapsed" data-toggle="collapse" href="#fsAmounts" aria-expanded="false" aria-controls="fsAmounts">
                            <span class="caret"></span>  Amount (Nu.)
                        </a>
                        @if (Model.FilterMinAmount != null || Model.FilterMaxAmount != null)
                        {
                            <em><span class="glyphicon glyphicon-filter"></span> <small>Min @Html.DisplayFor(m => m.FilterMinAmount) Max @Html.DisplayFor(m => m.FilterMaxAmount)</small></em>
                        }
                    </div>
                </div>
                <div id="fsAmounts" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body" style="padding-left:1mm; padding-right:1mm">
                        <div class="form-inline">
                            <div class="form-group @(Model.FilterMinAmount.HasValue ? "has-success" : "")">
                                <input type="number" class="form-control input-sm" size="6" placeholder="Min" name="@MVC.Bills.RecentBillsParams.minAmount" value="@Model.FilterMinAmount" />
                            </div>
                            <div class="form-group @(Model.FilterMaxAmount.HasValue ? "has-success" : "")">
                                <input type="number" class="form-control input-sm" size="6" placeholder="Max" name="@MVC.Bills.RecentBillsParams.maxAmount" value="@Model.FilterMaxAmount" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Apply Filters</button>
            @if (Model.IsFiltered)
            {
                <a href="@Url.Action(MVC.Bills.RecentBills())">Reset Filters</a>
            }
        </form>

    </div>

    <div class="col-md-9">
        @if (Model.Bills.Count > 0)
        {
            <label style="color:lightblue"> <i>Showing @Model.Bills.Count Bills</i></label>
            <strong><a href="@Model.UrlExcel">Export to Excel</a></strong>
            <span class="glyphicon glyphicon-export"></span>
            <form action="@Url.Action(MVC.Bills.ApproveBills())" method="post">
                @if (Model.Approvers.Any(p => !p.Selected))
                {
                    foreach (var item in Model.Approvers.Where(p => p.Selected))
                    {
                        <input type="hidden" name="@MVC.Bills.ApproveBillsParams.approvers" value="@item.Id" />
                    }
                }
                @if (Model.Divisions.Any(p => !p.Selected))
                {
                    foreach (var item in Model.Divisions.Where(p => p.Selected))
                    {
                        <input type="hidden" name="@MVC.Bills.ApproveBillsParams.divisions" value="@item.Id" />
                    }
                }
                @if (Model.ProcessingDivisions.Any(p => !p.Selected))
                {
                    foreach (var item in Model.ProcessingDivisions.Where(p => p.Selected))
                    {
                        <input type="hidden" name="@MVC.Bills.ApproveBillsParams.processingDivisions" value="@item.Id" />
                    }
                }
                @if (Model.Contractors.Any(p => !p.Selected))
                {
                    foreach (var item in Model.Contractors.Where(p => p.Selected))
                    {
                        <input type="hidden" name="@MVC.Bills.ApproveBillsParams.contractors" value="@item.Id" />
                    }
                }
                @if (Model.Stations.Any(p => !p.Selected))
                {
                    foreach (var item in Model.Stations.Where(p => p.Selected))
                    {
                        <input type="hidden" name="@MVC.Bills.ApproveBillsParams.stations" value="@item.Id" />
                    }
                }
                @if (Model.DateFrom != null)
                {
                    <input type="hidden" name="@MVC.Bills.ApproveBillsParams.dateFrom" value="@Model.DateFrom.Value" />
                }
                @if (Model.DateTo != null)
                {
                    <input type="hidden" name="@MVC.Bills.ApproveBillsParams.dateTo" value="@Model.DateTo.Value" />
                }
                @if (Model.FilterMinAmount != null)
                {
                    <input type="hidden" name="@MVC.Bills.ApproveBillsParams.minAmount" value="@Model.FilterMinAmount.Value" />
                }
                @if (Model.FilterMaxAmount != null)
                {
                    <input type="hidden" name="@MVC.Bills.ApproveBillsParams.maxAmount" value="@Model.FilterMaxAmount.Value" />
                }
                @if (Model.FilterApprovedBills.HasValue)
                {
                    <input type="hidden" name="@MVC.Bills.ApproveBillsParams.approvedFilter" value="@Model.FilterApprovedBills.Value.ToString().ToLower()" />
                }
                @if (Model.FilterPaidBills.HasValue)
                {
                    <input type="hidden" name="@MVC.Bills.ApproveBillsParams.paidFilter" value="@Model.FilterPaidBills.Value.ToString().ToLower()" />
                }
                
                <div class="panel panel-primary">
                    <div class="panel-heading">Selected Bills</div>
                    <div class="panel-body">
                        <div class="btn-group btn-group-sm" role="group">
                            <button type="submit" name="@MVC.Bills.ApproveBillsParams.approve" value="true" class="btn btn-success">
                                <span class="glyphicon glyphicon-thumbs-up"></span>
                                Approve
                            </button>
                            <button type="submit" name="@MVC.Bills.ApproveBillsParams.approve" value="false" class="btn btn-danger">
                                <span class="glyphicon glyphicon-thumbs-down"></span>
                                Unapprove
                            </button>
                        </div>
                    </div>
                </div>
                <ul class="list-group" id="billGroup" data-approve-url="@Url.Action(MVC.Bills.ApproveBill())" data-approve-paramname="@MVC.Bills.ApproveBillParams.billId">
                    <li class="list-group-item list-group-item-info">
                        @Html.Partial(MVC.Shared.Views._billHeaderPartial)
                    </li>
                    @for (var i = 0; i < Model.Bills.Count; ++i)
                    {
                        <li class="list-group-item">
                            @Html.Partial(MVC.Shared.Views._billPartial, Model.Bills[i])
                        </li>
                    }
                </ul>
                <br />
            </form>
        }
        else
        {

            <span style="color:red"><i>No Bill Available</i></span>

        }

    </div>

</div>